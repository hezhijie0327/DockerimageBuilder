diff --git a/searx/engines/xiaohongshu.py b/searx/engines/xiaohongshu.py
new file mode 100644
index 00000000000..4d82e4bb9f8
--- /dev/null
+++ b/searx/engines/xiaohongshu.py
@@ -0,0 +1,122 @@
+# SPDX-License-Identifier: AGPL-3.0-or-later
+# pylint: disable=line-too-long
+"""XHS (XiaoHongShu) engine for searxng"""
+from json import loads, dumps
+from datetime import datetime, timedelta
+
+import re
+
+from searx.result_types import EngineResults, MainResult
+from searx.utils import gen_useragent
+
+about = {
+    "website": 'https://www.xiaohongshu.com',
+    "wikidata_id": 'Q55637991',
+    "use_official_api": False,
+    "require_api_key": False,
+    "results": 'JSON',
+    "language": "zh",
+}
+
+paging = True
+categories = ['social media']
+results_per_page = 20
+base_url = "https://edith.xiaohongshu.com"
+
+xiaohongshu_cookie = None
+
+
+def request(query, params):
+    params['url'] = f'{base_url}/api/sns/web/v1/search/notes'
+    params['headers'] = {
+        "accept": "application/json",
+        "user-agent": gen_useragent(),
+        "content-type": "application/json;charset=UTF-8",
+        "cookie": xiaohongshu_cookie,
+    }
+    params['method'] = 'POST'
+
+    params['data'] = dumps(
+        {
+            "keyword": query,
+            "page": params["pageno"],
+            "page_size": results_per_page,
+            "search_id": "example_id",
+            "sort": "general",
+            "note_type": 0,
+            "image_formats": ["jpg", "webp", "avif"],
+        }
+    ).encode('utf-8')
+
+    return params
+
+
+def response(resp) -> EngineResults:
+    results = EngineResults()
+    json = loads(resp.text)
+
+    if not json.get('success'):
+        return results
+
+    for item in json.get('data', {}).get('items', []):
+        if item.get('model_type') != 'note':
+            continue
+
+        note_card = item.get('note_card', {})
+        user = note_card.get('user', {})
+        cover = note_card.get('cover', {})
+        corner_tag_info = note_card.get('corner_tag_info', [])
+
+        publish_time = None
+        for tag in corner_tag_info:
+            if tag.get("type") == "publish_time":
+                publish_time_text = tag.get("text").strip()
+
+                if publish_time_text:
+                    time_ago_match = re.match(r'^(\d+)(天|小时|分钟|秒)前$', publish_time_text)
+                    if time_ago_match:
+                        amount = int(time_ago_match.group(1))
+                        unit = time_ago_match.group(2)
+
+                        unit_map = {
+                            '天': {'days': amount},
+                            '小时': {'hours': amount},
+                            '分钟': {'minutes': amount},
+                            '秒': {'seconds': amount},
+                        }
+
+                        delta = unit_map.get(unit, {})
+                        publish_date = datetime.now() - timedelta(**delta)
+
+                        publish_time = publish_date.strftime("%Y-%m-%d")
+                    elif len(publish_time_text) == 5:
+                        current_year = datetime.now().year
+
+                        publish_time = f"{current_year}-{publish_time_text}"
+                    else:
+                        publish_time = publish_time_text
+
+                break
+
+        try:
+            published_date = datetime.strptime(publish_time, "%Y-%m-%d")
+        except (ValueError, TypeError):
+            published_date = None
+
+        results.add(
+            MainResult(
+                title=note_card.get('display_title', ''),
+                url=f'https://www.xiaohongshu.com/explore/{item.get("id", "")}?xsec_token={item.get("xsec_token", "")}',
+                content=f"""
+                    用户: {user.get('nick_name', '')} |
+                    点赞: {note_card.get('interact_info', {}).get('liked_count', '0')} |
+                    收藏: {note_card.get('interact_info', {}).get('collected_count', '0')} |
+                    评论: {note_card.get('interact_info', {}).get('comment_count', '0')} |
+                    分享: {note_card.get('interact_info', {}).get('shared_count', '0')}
+                """,
+                thumbnail=cover.get('url_pre', '').replace("http://", "https://"),
+                publishedDate=published_date,
+            )
+        )
+
+    return results
