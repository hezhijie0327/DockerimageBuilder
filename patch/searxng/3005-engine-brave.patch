diff --git a/searx/engines/brave_api.py b/searx/engines/brave_api.py
new file mode 100644
index 00000000000..959ae1ed2ca
--- /dev/null
+++ b/searx/engines/brave_api.py
@@ -0,0 +1,116 @@
+# SPDX-License-Identifier: AGPL-3.0-or-later
+"""Brave (API) for SearXNG."""
+
+from urllib.parse import urlencode
+
+from searx.exceptions import SearxEngineAPIException
+from searx.utils import html_to_text
+
+about = {
+    "website": 'https://search.brave.com/',
+    "wikidata_id": 'Q22906900',
+    "official_api_documentation": 'https://api-dashboard.search.brave.com/app/documentation/web-search/get-started',
+    "use_official_api": True,
+    "require_api_key": True,
+    "results": 'JSON',
+}
+
+categories = ['general']
+brave_api_category = 'general'
+brave_api_category_map = {'general': 'web', 'images': 'images', 'videos': 'videos', 'news': 'news'}
+
+paging = True
+results_per_page = 10
+
+safesearch = True
+safesearch_map = {0: 'off', 1: 'moderate', 2: 'strict'}
+
+time_range_support = True
+time_range_dict = {'day': 'pd', 'week': 'pw', 'month': 'pm', 'year': 'py'}
+
+api_key = None
+
+base_url = "https://api.search.brave.com/res/v1"
+
+
+def init(_):
+    if brave_api_category not in ('general', 'images', 'videos', 'news'):
+        raise SearxEngineAPIException(f"Unsupported category: {brave_api_category}")
+
+
+def request(query, params):
+    brave_api_endpoint = brave_api_category_map.get(brave_api_category)
+    query_params = {
+        "count": results_per_page,
+        "q": query,
+        "safesearch": safesearch_map[params['safesearch']],
+        "offset": params["pageno"] - 1,
+    }
+
+    if time_range_dict.get(params['time_range']):
+        query_params["freshness"] = time_range_dict.get(params['time_range'])
+
+    params['url'] = f'{base_url}/{brave_api_endpoint}/search?{urlencode(query_params)}'
+
+    params['headers']['Accept'] = 'application/json'
+    params['headers']['Accept-Encoding'] = 'gzip'
+    params['headers']['X-Subscription-Token'] = api_key
+    return params
+
+
+def _general_result(item):
+    return {
+        'url': item.get('url'),
+        'title': item.get('title'),
+        'content': html_to_text(item.get('description')),
+        'thumbnail_src': item.get('thumbnail', {}).get('src', ''),
+    }
+
+
+def _images_result(item):
+    return {
+        'template': 'images.html',
+        'url': item.get('url'),
+        'thumbnail_src': item.get('thumbnail', {}).get('src', ''),
+        'img_src': item.get('properties', {}).get('url'),
+        'title': item.get('title'),
+        "source": item.get('meta_url', {}).get('netloc'),
+    }
+
+
+def _videos_result(item):
+    return {
+        'url': item.get('url'),
+        'title': item.get('title'),
+        'content': html_to_text(item.get('description')),
+        'length': item.get('video', {}).get('duration'),
+        'thumbnail_src': item.get('thumbnail', {}).get('src', ''),
+    }
+
+
+def _news_result(item):
+    return {
+        'url': item.get('url'),
+        'title': item.get('title'),
+        'content': html_to_text(item.get('description')),
+        'thumbnail_src': item.get('thumbnail', {}).get('src', ''),
+    }
+
+
+def response(resp):
+    results = []
+    search_results = resp.json()
+
+    if brave_api_category == "general":
+        for item in search_results.get('web', {}).get('results', []):
+            results.append(_general_result(item))
+    else:
+        for item in search_results.get('results', []):
+            if brave_api_category == "images":
+                results.append(_images_result(item))
+            elif brave_api_category == "videos":
+                results.append(_videos_result(item))
+            else:
+                results.append(_news_result(item))
+
+    return results
