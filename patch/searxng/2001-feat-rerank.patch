diff --git a/requirements.txt b/requirements.txt
index 533fa3edb64..7297efb9145 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -19,3 +19,6 @@ tomli==2.0.2; python_version < '3.11'
 msgspec==0.19.0
 typer-slim==0.15.1
 isodate==0.7.2
+bm25s==0.2.7.post1
+numpy==2.2.2
+scipy==1.15.1
diff --git a/searx/plugins/rerank.py b/searx/plugins/rerank.py
new file mode 100644
index 00000000000..8be966bc12e
--- /dev/null
+++ b/searx/plugins/rerank.py
@@ -0,0 +1,40 @@
+# SPDX-License-Identifier: AGPL-3.0-or-later
+# pylint: disable=protected-access
+"""Plugin which reranks the search results using the Okapi BM25 algorithm.
+
+Enable in ``settings.yml``:
+
+.. code:: yaml
+
+  enabled_plugins:
+    ..
+    - 'Rerank plugin'
+"""
+
+from searx import settings
+
+import bm25s
+
+name = 'Rerank plugin'
+description = 'Rerank search results, ignoring original engine ranking'
+default_on = True
+preference_section = 'general'
+
+
+def post_search(_request, search):
+    results = search.result_container._merged_results
+    query = search.search_query.query
+
+    retriever = bm25s.BM25()
+    result_tokens = bm25s.tokenize([f"{result.get('title', '')} | {result.get('content', '')}" for result in results])
+    retriever.index(result_tokens)
+
+    query_tokens = bm25s.tokenize(query)
+
+    indices = retriever.retrieve(query_tokens, k=len(results), return_as='documents', show_progress=False)
+
+    for position, index in enumerate(indices[0]):
+      if 'positions' in results[index]:
+          results[index]['positions'] = [position + 1]
+
+    return True
