diff --git a/src/config/aiModels/hunyuan.ts b/src/config/aiModels/hunyuan.ts
index dec1d36594eb..5e6140607938 100644
--- a/src/config/aiModels/hunyuan.ts
+++ b/src/config/aiModels/hunyuan.ts
@@ -14,6 +14,7 @@ const hunyuanChatModels: AIChatModelCard[] = [
       input: 0,
       output: 0,
     },
+    releasedAt: '2024-10-30',
     type: 'chat',
   },
   {
@@ -26,9 +27,10 @@ const hunyuanChatModels: AIChatModelCard[] = [
     maxOutput: 2000,
     pricing: {
       currency: 'CNY',
-      input: 4.5,
-      output: 5,
+      input: 0.8,
+      output: 2,
     },
+    releasedAt: '2024-10-28',
     type: 'chat',
   },
   {
@@ -41,9 +43,10 @@ const hunyuanChatModels: AIChatModelCard[] = [
     maxOutput: 6000,
     pricing: {
       currency: 'CNY',
-      input: 15,
-      output: 60,
+      input: 0.5,
+      output: 2,
     },
+    releasedAt: '2024-10-28',
     type: 'chat',
   },
   {
@@ -52,9 +55,27 @@ const hunyuanChatModels: AIChatModelCard[] = [
     },
     contextWindowTokens: 32_000,
     description:
-      '混元全新一代大语言模型的预览版，采用全新的混合专家模型（MoE）结构，相比hunyuan-pro推理效率更快，效果表现更强。',
+      '通用体验优化，包括NLP理解、文本创作、闲聊、知识问答、翻译、领域等；提升拟人性，优化模型情商；提升意图模糊时模型主动澄清能力；提升字词解析类问题的处理能力；提升创作的质量和可互动性；提升多轮体验。',
     displayName: 'Hunyuan Turbo',
     enabled: true,
+    id: 'hunyuan-turbo-latest',
+    maxOutput: 4000,
+    pricing: {
+      currency: 'CNY',
+      input: 15,
+      output: 50,
+    },
+    releasedAt: '2025-01-10',
+    type: 'chat',
+  },
+  {
+    abilities: {
+      functionCall: true,
+    },
+    contextWindowTokens: 32_000,
+    description:
+      '本版本优化：数据指令scaling，大幅提升模型通用泛化能力；大幅提升数学、代码、逻辑推理能力；优化文本理解字词理解相关能力；优化文本创作内容生成质量',
+    displayName: 'Hunyuan Turbo',
     id: 'hunyuan-turbo',
     maxOutput: 4000,
     pricing: {
@@ -62,6 +83,25 @@ const hunyuanChatModels: AIChatModelCard[] = [
       input: 15,
       output: 50,
     },
+    releasedAt: '2025-01-10',
+    type: 'chat',
+  },
+  {
+    abilities: {
+      functionCall: true,
+    },
+    contextWindowTokens: 32_000,
+    description:
+      '本版本优化：数据指令scaling，大幅提升模型通用泛化能力；大幅提升数学、代码、逻辑推理能力；优化文本理解字词理解相关能力；优化文本创作内容生成质量',
+    displayName: 'Hunyuan Turbo 20241223',
+    id: 'hunyuan-turbo-20241223',
+    maxOutput: 4000,
+    pricing: {
+      currency: 'CNY',
+      input: 15,
+      output: 50,
+    },
+    releasedAt: '2025-01-10',
     type: 'chat',
   },
   {
@@ -70,16 +110,74 @@ const hunyuanChatModels: AIChatModelCard[] = [
     },
     contextWindowTokens: 32_000,
     description:
-      '万亿级参数规模 MOE-32K 长文模型。在各种 benchmark 上达到绝对领先的水平，复杂指令和推理，具备复杂数学能力，支持 functioncall，在多语言翻译、金融法律医疗等领域应用重点优化。',
-    displayName: 'Hunyuan Pro',
+      'hunyuan-turbo 2024 年 11 月 20 日固定版本，介于 hunyuan-turbo 和 hunyuan-turbo-latest 之间的一个版本。',
+    displayName: 'Hunyuan Turbo 20241120',
+    id: 'hunyuan-turbo-20241120',
+    maxOutput: 4000,
+    pricing: {
+      currency: 'CNY',
+      input: 15,
+      output: 50,
+    },
+    releasedAt: '2024-11-20',
+    type: 'chat',
+  },
+  {
+    contextWindowTokens: 32_000,
+    description:
+      'Hunyuan-large 模型总参数量约 389B，激活参数量约 52B，是当前业界参数规模最大、效果最好的 Transformer 架构的开源 MoE 模型。',
+    displayName: 'Hunyuan Large',
     enabled: true,
-    id: 'hunyuan-pro',
+    id: 'hunyuan-large',
     maxOutput: 4000,
     pricing: {
       currency: 'CNY',
-      input: 30,
-      output: 100,
+      input: 4,
+      output: 12,
+    },
+    releasedAt: '2024-11-20',
+    type: 'chat',
+  },
+  {
+    contextWindowTokens: 134_000,
+    description:
+      '擅长处理长文任务如文档摘要和文档问答等，同时也具备处理通用文本生成任务的能力。在长文本的分析和生成上表现优异，能有效应对复杂和详尽的长文内容处理需求。',
+    displayName: 'Hunyuan Large Longcontext',
+    enabled: true,
+    id: 'hunyuan-large-longcontext',
+    maxOutput: 6000,
+    pricing: {
+      currency: 'CNY',
+      input: 6,
+      output: 18,
+    },
+    releasedAt: '2024-12-18',
+    type: 'chat',
+  },
+  {
+    abilities: {
+      vision: true,
+    },
+    contextWindowTokens: 36_000,
+    description: '混元最新7B多模态模型，上下文窗口32K，支持中英文场景的多模态对话、图像物体识别、文档表格理解、多模态数学等，在多个维度上评测指标优于7B竞品模型。',
+    displayName: 'Hunyuan Lite Vision',
+    enabled: true,
+    id: 'hunyuan-lite-vision',
+    maxOutput: 4000,
+    releasedAt: '2024-12-12',
+    type: 'chat',
+  },
+  {
+    abilities: {
+      vision: true,
     },
+    contextWindowTokens: 8000,
+    description: '混元最新多模态模型，支持多语种作答，中英文能力均衡。',
+    displayName: 'Hunyuan Standard Vision',
+    enabled: true,
+    id: 'hunyuan-standard-vision',
+    maxOutput: 2000,
+    releasedAt: '2024-12-31',
     type: 'chat',
   },
   {
@@ -87,16 +185,35 @@ const hunyuanChatModels: AIChatModelCard[] = [
       vision: true,
     },
     contextWindowTokens: 8000,
+    description: '混元新一代视觉语言旗舰大模型，采用全新的混合专家模型（MoE）结构，在图文理解相关的基础识别、内容创作、知识问答、分析推理等能力上相比前一代模型全面提升。',
+    displayName: 'Hunyuan Turbo Vision',
+    enabled: true,
+    id: 'hunyuan-turbo-vision',
+    maxOutput: 2000,
+    pricing: {
+      currency: 'CNY',
+      input: 80,
+      output: 80,
+    },
+    releasedAt: '2024-11-26',
+    type: 'chat',
+  },
+  {
+    abilities: {
+      vision: true,
+    },
+    contextWindowTokens: 12_000,
     description: '混元最新多模态模型，支持图片+文本输入生成文本内容。',
     displayName: 'Hunyuan Vision',
     enabled: true,
     id: 'hunyuan-vision',
-    maxOutput: 4000,
+    maxOutput: 6000,
     pricing: {
       currency: 'CNY',
       input: 18,
       output: 18,
     },
+    releasedAt: '2025-01-03',
     type: 'chat',
   },
   {
@@ -111,6 +228,7 @@ const hunyuanChatModels: AIChatModelCard[] = [
       input: 4,
       output: 8,
     },
+    releasedAt: '2024-11-12',
     type: 'chat',
   },
   {
@@ -128,10 +246,11 @@ const hunyuanChatModels: AIChatModelCard[] = [
       input: 4,
       output: 8,
     },
+    releasedAt: '2024-11-15',
     type: 'chat',
   },
   {
-    contextWindowTokens: 8000,
+    contextWindowTokens: 32_000,
     description:
       '混元最新版角色扮演模型，混元官方精调训练推出的角色扮演模型，基于混元模型结合角色扮演场景数据集进行增训，在角色扮演场景具有更好的基础效果。',
     displayName: 'Hunyuan Role',
@@ -142,6 +261,7 @@ const hunyuanChatModels: AIChatModelCard[] = [
       input: 4,
       output: 8,
     },
+    releasedAt: '2024-07-04',
     type: 'chat',
   },
 ];
diff --git a/src/config/aiModels/qwen.ts b/src/config/aiModels/qwen.ts
index 6f7c9c7eccba..2080437bd857 100644
--- a/src/config/aiModels/qwen.ts
+++ b/src/config/aiModels/qwen.ts
@@ -152,9 +152,26 @@ const qwenChatModels: AIChatModelCard[] = [
     id: 'qwq-32b-preview',
     pricing: {
       currency: 'CNY',
-      input: 0,
-      output: 0,
+      input: 3.5,
+      output: 7,
+    },
+    releasedAt: '2024-11-28',
+    type: 'chat',
+  },
+  {
+    abilities: {
+      vision: true,
+    },
+    contextWindowTokens: 32_768,
+    description: 'QVQ模型是由 Qwen 团队开发的实验性研究模型，专注于提升视觉推理能力，尤其在数学推理领域。',
+    displayName: 'QVQ 72B Preview',
+    id: 'qvq-72b-preview',
+    pricing: {
+      currency: 'CNY',
+      input: 12,
+      output: 36,
     },
+    releasedAt: '2024-12-25',
     type: 'chat',
   },
   {
diff --git a/src/libs/agent-runtime/deepseek/index.ts b/src/libs/agent-runtime/deepseek/index.ts
index 29e46db42409..fdff2319cfa9 100644
--- a/src/libs/agent-runtime/deepseek/index.ts
+++ b/src/libs/agent-runtime/deepseek/index.ts
@@ -40,7 +40,7 @@ export const LobeDeepSeekAI = LobeOpenAICompatibleFactory({
 
       return {
         enabled: LOBE_DEFAULT_MODEL_LIST.find((m) => model.id.endsWith(m.id))?.enabled || false,
-        functionCall: true,
+        functionCall: !model.id.toLowerCase().includes('deepseek-reasoner'),
         id: model.id,
       };
     },
diff --git a/src/libs/agent-runtime/hunyuan/index.ts b/src/libs/agent-runtime/hunyuan/index.ts
index 1744ecef4734..26afa86f9b3a 100644
--- a/src/libs/agent-runtime/hunyuan/index.ts
+++ b/src/libs/agent-runtime/hunyuan/index.ts
@@ -1,10 +1,34 @@
 import { ModelProvider } from '../types';
 import { LobeOpenAICompatibleFactory } from '../utils/openaiCompatibleFactory';
 
+import { LOBE_DEFAULT_MODEL_LIST } from '@/config/aiModels';
+
+export interface HunyuanModelCard {
+  id: string;
+}
+
 export const LobeHunyuanAI = LobeOpenAICompatibleFactory({
   baseURL: 'https://api.hunyuan.cloud.tencent.com/v1',
   debug: {
     chatCompletion: () => process.env.DEBUG_HUNYUAN_CHAT_COMPLETION === '1',
   },
+  models: {
+    transformModel: (m) => {
+      const functionCallKeywords = [
+        'hunyuan-functioncall',
+        'hunyuan-turbo',
+        'hunyuan-pro',
+      ];
+
+      const model = m as unknown as HunyuanModelCard;
+
+      return {
+        enabled: LOBE_DEFAULT_MODEL_LIST.find((m) => model.id.endsWith(m.id))?.enabled || false,
+        functionCall: functionCallKeywords.some(keyword => model.id.toLowerCase().includes(keyword)) && !model.id.toLowerCase().includes('vision'),
+        id: model.id,
+        vision: model.modelCode.toLowerCase().includes('vision'),
+      };
+    },
+  },
   provider: ModelProvider.Hunyuan,
 });
diff --git a/src/libs/agent-runtime/qwen/index.ts b/src/libs/agent-runtime/qwen/index.ts
index 0d6a7dfc4b6a..694d0a532c22 100644
--- a/src/libs/agent-runtime/qwen/index.ts
+++ b/src/libs/agent-runtime/qwen/index.ts
@@ -49,7 +49,7 @@ export const LobeQwenAI = LobeOpenAICompatibleFactory({
               : undefined,
         stream: !payload.tools,
         temperature: (temperature !== undefined && temperature >= 0 && temperature < 2) ? temperature : undefined,
-        ...(model.startsWith('qwen-vl') ? {
+        ...(model.startsWith('qvq') || model.startsWith('qwen-vl') ? {
           top_p: (top_p !== undefined && top_p > 0 && top_p <= 1) ? top_p : undefined,
         } : {
           top_p: (top_p !== undefined && top_p > 0 && top_p < 1) ? top_p : undefined,
@@ -67,7 +67,7 @@ export const LobeQwenAI = LobeOpenAICompatibleFactory({
   debug: {
     chatCompletion: () => process.env.DEBUG_QWEN_CHAT_COMPLETION === '1',
   },
-    models: {
+  models: {
     transformModel: (m) => {
       const functionCallKeywords = [
         'qwen-max',
@@ -76,13 +76,18 @@ export const LobeQwenAI = LobeOpenAICompatibleFactory({
         'qwen2.5',
       ];
 
+      const visionKeywords = [
+        'qvq',
+        'vl',
+      ];
+
       const model = m as unknown as QwenModelCard;
 
       return {
         enabled: LOBE_DEFAULT_MODEL_LIST.find((m) => model.id.endsWith(m.id))?.enabled || false,
         functionCall: functionCallKeywords.some(keyword => model.id.toLowerCase().includes(keyword)),
         id: model.id,
-        vision: model.id.toLowerCase().includes('vl'),
+        vision: visionKeywords.some(keyword => model.id.toLowerCase().includes(keyword)),
       };
     },
   },
diff --git a/src/libs/agent-runtime/stepfun/index.ts b/src/libs/agent-runtime/stepfun/index.ts
index 2078cbc3c3c6..e4e9b4da5b8b 100644
--- a/src/libs/agent-runtime/stepfun/index.ts
+++ b/src/libs/agent-runtime/stepfun/index.ts
@@ -25,7 +25,13 @@ export const LobeStepfunAI = LobeOpenAICompatibleFactory({
       // ref: https://platform.stepfun.com/docs/llm/modeloverview
       const functionCallKeywords = [
         'step-1-',
+        'step-1o-',
+        'step-1v-',
         'step-2-',
+      ];
+
+      const visionKeywords = [
+        'step-1o-',
         'step-1v-',
       ];
 
@@ -35,7 +41,7 @@ export const LobeStepfunAI = LobeOpenAICompatibleFactory({
         enabled: LOBE_DEFAULT_MODEL_LIST.find((m) => model.id.endsWith(m.id))?.enabled || false,
         functionCall: functionCallKeywords.some(keyword => model.id.toLowerCase().includes(keyword)),
         id: model.id,
-        vision: model.id.toLowerCase().includes('v'),
+        vision: visionKeywords.some(keyword => model.id.toLowerCase().includes(keyword)),
       };
     },
   },
