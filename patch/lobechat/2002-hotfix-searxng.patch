diff --git a/src/server/modules/SearXNG.ts b/src/server/modules/SearXNG.ts
index 9bc6000cef5ea..7550897aec81c 100644
--- a/src/server/modules/SearXNG.ts
+++ b/src/server/modules/SearXNG.ts
@@ -10,13 +10,17 @@ export class SearXNGClient {
     this.baseUrl = baseUrl;
   }
 
-  async search(query: string, engines?: string[], time_range?: string): Promise<SearchResponse> {
+  async search(query: string, optionalParams: Record<string, any> = {}): Promise<SearchResponse> {
     try {
+      const formatParams = Object.entries(optionalParams).reduce<Record<string, any>>((acc, [key, value]) => {
+        acc[key] = Array.isArray(value) ? value.join(',') : value;
+        return acc;
+      }, {});
+
       const searchParams = qs.stringify({
-        engines: engines?.join(','),
+        ...formatParams,
         format: 'json',
         q: query,
-        ...( time_range !== 'anytime' ? { time_range: time_range } : {} ),
       });
 
       const response = await fetch(urlJoin(this.baseUrl, `/search?${searchParams}`));
diff --git a/src/server/routers/tools/__test__/search.test.ts b/src/server/routers/tools/__test__/search.test.ts
index a621f19d93a46..41ba8b2bcee4f 100644
--- a/src/server/routers/tools/__test__/search.test.ts
+++ b/src/server/routers/tools/__test__/search.test.ts
@@ -99,7 +99,7 @@ describe('searchRouter', () => {
 
       const result = await caller.query({
         query: 'test query',
-        searchEngine: ['google'],
+        searchEngines: ['google'],
       });
 
       expect(result).toEqual(mockSearchResult);
diff --git a/src/server/routers/tools/search.ts b/src/server/routers/tools/search.ts
index 3d5f5aeaf1316..828cb22b08c55 100644
--- a/src/server/routers/tools/search.ts
+++ b/src/server/routers/tools/search.ts
@@ -44,7 +44,7 @@ export const searchRouter = router({
     .input(
       z.object({
         query: z.string(),
-        searchEngine: z.array(z.string()).optional(),
+        searchEngines: z.array(z.string()).optional(),
         searchTimeRange: z.string().optional(),
       }),
     )
@@ -56,7 +56,10 @@ export const searchRouter = router({
       const client = new SearXNGClient(toolsEnv.SEARXNG_URL);
 
       try {
-        return await client.search(input.query, input.searchEngine, input.searchTimeRange);
+        return await client.search(input.query, {
+          engines: input.searchEngines,
+          time_range: input.searchTimeRange,
+        });
       } catch (e) {
         console.error(e);
 
diff --git a/src/services/search.ts b/src/services/search.ts
index 50c404ca4f14d..2e069c1df01d9 100644
--- a/src/services/search.ts
+++ b/src/services/search.ts
@@ -1,8 +1,9 @@
 import { toolsClient } from '@/libs/trpc/client';
+import { SearchQuery } from '@/types/tool/search';
 
 class SearchService {
-  search(query: string, searchEngine?: string[], searchTimeRange?: string) {
-    return toolsClient.search.query.query({ query, searchEngine, searchTimeRange });
+  search(parmas: SearchQuery) {
+    return toolsClient.search.query.query(parmas);
   }
 
   crawlPage(url: string) {
diff --git a/src/store/chat/slices/builtinTool/actions/searXNG.test.ts b/src/store/chat/slices/builtinTool/actions/searXNG.test.ts
index 22ae559fdd6fd..bc3cb2a66669b 100644
--- a/src/store/chat/slices/builtinTool/actions/searXNG.test.ts
+++ b/src/store/chat/slices/builtinTool/actions/searXNG.test.ts
@@ -73,7 +73,9 @@ describe('searXNG actions', () => {
       const messageId = 'test-message-id';
       const query: SearchQuery = {
         query: 'test query',
-        searchEngines: ['google'],
+        optionalParams: {
+          searchEngines: ['google'],
+        },
       };
 
       await act(async () => {
@@ -142,8 +144,10 @@ describe('searXNG actions', () => {
       const messageId = 'test-message-id';
       const query: SearchQuery = {
         query: 'test query',
-        searchEngines: ['custom-engine'],
-        searchTimeRange: 'year',
+        optionalParams: {
+          searchEngines: ['custom-engine'],
+          searchTimeRange: 'year',
+        },
       };
 
       await act(async () => {
diff --git a/src/store/chat/slices/builtinTool/actions/searXNG.ts b/src/store/chat/slices/builtinTool/actions/searXNG.ts
index 162ef6bfdf933..1486b749d3fbb 100644
--- a/src/store/chat/slices/builtinTool/actions/searXNG.ts
+++ b/src/store/chat/slices/builtinTool/actions/searXNG.ts
@@ -141,12 +141,12 @@ export const searchSlice: StateCreator<
     get().toggleSearchLoading(id, true);
     let data: SearchResponse | undefined;
     try {
-      data = await searchService.search(params.query, params.searchEngines, params.searchTimeRange);
+      data = await searchService.search(params);
 
       // 如果没有搜索到结果，那么尝试使用默认的搜索引擎再搜一次
-      if (data?.results.length === 0 && (params.searchEngines && params.searchEngines?.length > 0 || params.searchTimeRange)) {
-        data = await searchService.search(params.query);
-        get().updatePluginArguments(id, { ...params, searchEngines: undefined, searchTimeRange: undefined });
+      if (data?.results.length === 0 && (params.optionalParams?.searchEngines && params.optionalParams?.searchEngines?.length > 0 || params.optionalParams?.searchTimeRange)) {
+        data = await searchService.search(params);
+        get().updatePluginArguments(id, { ...params, optionalParams: { searchEngines: undefined, searchTimeRange: undefined } });
       }
 
       await get().updatePluginState(id, data);
diff --git a/src/tools/web-browsing/Portal/Search/index.tsx b/src/tools/web-browsing/Portal/Search/index.tsx
index aee6ad968cdb0..5c2f3b37e2cdc 100644
--- a/src/tools/web-browsing/Portal/Search/index.tsx
+++ b/src/tools/web-browsing/Portal/Search/index.tsx
@@ -19,7 +19,7 @@ interface InspectorUIProps {
 
 const Inspector = memo<InspectorUIProps>(({ query: args, messageId, response }) => {
   const engines = uniq((response.results || []).map((result) => result.engine));
-  const defaultEngines = engines.length > 0 ? engines : args.searchEngines || [];
+  const defaultEngines = engines.length > 0 ? engines : args.optionalParams?.searchEngines || [];
   const loading = useChatStore(chatToolSelectors.isSearXNGSearching(messageId));
 
   if (loading) {
diff --git a/src/tools/web-browsing/Render/Search/SearchQuery/index.tsx b/src/tools/web-browsing/Render/Search/SearchQuery/index.tsx
index e55ab51a3525a..a8742552fcaad 100644
--- a/src/tools/web-browsing/Render/Search/SearchQuery/index.tsx
+++ b/src/tools/web-browsing/Render/Search/SearchQuery/index.tsx
@@ -29,7 +29,7 @@ const SearchQueryView = memo<SearchQueryViewProps>(
     const { t } = useTranslation('common');
 
     const engines = uniq(searchResults.map((result) => result.engine));
-    const defaultEngines = engines.length > 0 ? engines : args.searchEngines || [];
+    const defaultEngines = engines.length > 0 ? engines : args.optionalParams?.searchEngines || [];
 
     return !pluginState ? (
       <Flexbox align={'center'} distribution={'space-between'} height={32} horizontal>
diff --git a/src/tools/web-browsing/Render/Search/SearchResult/index.tsx b/src/tools/web-browsing/Render/Search/SearchResult/index.tsx
index 2157afecde1d3..3900823c62bbd 100644
--- a/src/tools/web-browsing/Render/Search/SearchResult/index.tsx
+++ b/src/tools/web-browsing/Render/Search/SearchResult/index.tsx
@@ -32,7 +32,7 @@ const SearchResult = memo<SearchResultProps>(
     const { t } = useTranslation(['tool', 'common']);
 
     const engines = uniq(searchResults.map((result) => result.engine));
-    const defaultEngines = engines.length > 0 ? engines : args.searchEngines || [];
+    const defaultEngines = engines.length > 0 ? engines : args.optionalParams?.searchEngines || [];
     const isMobile = useIsMobile();
 
     if (loading || !pluginState)
diff --git a/src/tools/web-browsing/components/SearchBar.tsx b/src/tools/web-browsing/components/SearchBar.tsx
index 0b893ed9f97ff..d85d6d33d7e0a 100644
--- a/src/tools/web-browsing/components/SearchBar.tsx
+++ b/src/tools/web-browsing/components/SearchBar.tsx
@@ -46,8 +46,10 @@ const SearchBar = memo<SearchBarProps>(
     const updateAndSearch = async () => {
       const data: SearchQuery = {
         query,
-        searchEngines: engines,
-        searchTimeRange: time_range,
+        optionalParams: {
+          searchEngines: engines,
+          searchTimeRange: time_range,
+        }
       };
       onSearch?.(data);
       await reSearchWithSearXNG(messageId, data, { aiSummary });
diff --git a/src/types/tool/search.ts b/src/types/tool/search.ts
index bfda96bc748ef..9e646abb99aa8 100644
--- a/src/types/tool/search.ts
+++ b/src/types/tool/search.ts
@@ -1,7 +1,9 @@
 export interface SearchQuery {
   query: string;
-  searchEngines?: string[];
-  searchTimeRange?: string;
+  optionalParams?: {
+    searchEngines?: string[];
+    searchTimeRange?: string;
+  }
 }
 
 export const SEARCH_SEARXNG_NOT_CONFIG = 'SearXNG is not configured';
