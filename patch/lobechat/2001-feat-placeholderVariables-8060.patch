diff --git a/locales/ar/setting.json b/locales/ar/setting.json
index 831fba90a796c..d674b58ebc822 100644
--- a/locales/ar/setting.json
+++ b/locales/ar/setting.json
@@ -220,7 +220,7 @@
     },
     "inputTemplate": {
       "desc": "سيتم ملء أحدث رسالة من المستخدم في هذا القالب",
-      "placeholder": "القالب المُعالج مسبقًا {{text}} سيتم استبداله بالمعلومات المُدخلة في الوقت الحقيقي",
+      "placeholder": "القالب المُعالج مسبقًا {{input_template}} سيتم استبداله بالمعلومات المُدخلة في الوقت الحقيقي",
       "title": "معالجة مُدخلات المستخدم"
     },
     "submit": "تحديث تفضيلات الدردشة",
diff --git a/locales/bg-BG/setting.json b/locales/bg-BG/setting.json
index 6790cd693f3af..ebceb3b47283a 100644
--- a/locales/bg-BG/setting.json
+++ b/locales/bg-BG/setting.json
@@ -220,7 +220,7 @@
     },
     "inputTemplate": {
       "desc": "Последното съобщение на потребителя ще бъде попълнено в този шаблон",
-      "placeholder": "Шаблонът за предварителна обработка {{text}} ще бъде заменен с информация за въвеждане в реално време",
+      "placeholder": "Шаблонът за предварителна обработка {{input_template}} ще бъде заменен с информация за въвеждане в реално време",
       "title": "Предварителна обработка на потребителския вход"
     },
     "submit": "Актуализиране на предпочитанията за чат",
diff --git a/locales/de-DE/setting.json b/locales/de-DE/setting.json
index 05c65d658ab7c..070d7fccc01c5 100644
--- a/locales/de-DE/setting.json
+++ b/locales/de-DE/setting.json
@@ -220,7 +220,7 @@
     },
     "inputTemplate": {
       "desc": "Die neueste Benutzernachricht wird in dieses Template eingefügt",
-      "placeholder": "Vorlagen-{{text}} werden durch Echtzeit-Eingabeinformationen ersetzt",
+      "placeholder": "Vorlagen-{{input_template}} werden durch Echtzeit-Eingabeinformationen ersetzt",
       "title": "Benutzereingabe-Vorverarbeitung"
     },
     "submit": "Chat-Präferenzen aktualisieren",
diff --git a/locales/en-US/setting.json b/locales/en-US/setting.json
index fd780f5c7ddc2..62d8ef2f24014 100644
--- a/locales/en-US/setting.json
+++ b/locales/en-US/setting.json
@@ -220,7 +220,7 @@
     },
     "inputTemplate": {
       "desc": "The user's latest message will be filled into this template",
-      "placeholder": "Preprocessing template {{text}} will be replaced with real-time input information",
+      "placeholder": "Preprocessing template {{input_template}} will be replaced with real-time input information",
       "title": "User Input Preprocessing"
     },
     "submit": "Update Chat Preferences",
diff --git a/locales/es-ES/setting.json b/locales/es-ES/setting.json
index 65bc94ab869bd..a8f221644c588 100644
--- a/locales/es-ES/setting.json
+++ b/locales/es-ES/setting.json
@@ -220,7 +220,7 @@
     },
     "inputTemplate": {
       "desc": "El último mensaje del usuario se completará en esta plantilla",
-      "placeholder": "La plantilla de preprocesamiento {{text}} se reemplazará por la información de entrada en tiempo real",
+      "placeholder": "La plantilla de preprocesamiento {{input_template}} se reemplazará por la información de entrada en tiempo real",
       "title": "Preprocesamiento de entrada del usuario"
     },
     "submit": "Actualizar preferencias de chat",
diff --git a/locales/fa-IR/setting.json b/locales/fa-IR/setting.json
index 131be75b6c88c..30438936bbccf 100644
--- a/locales/fa-IR/setting.json
+++ b/locales/fa-IR/setting.json
@@ -220,7 +220,7 @@
     },
     "inputTemplate": {
       "desc": "آخرین پیام کاربر در این قالب پر می‌شود",
-      "placeholder": "قالب پیش‌پردازش {{text}} با اطلاعات ورودی لحظه‌ای جایگزین می‌شود",
+      "placeholder": "قالب پیش‌پردازش {{input_template}} با اطلاعات ورودی لحظه‌ای جایگزین می‌شود",
       "title": "پیش‌پردازش ورودی کاربر"
     },
     "submit": "به‌روزرسانی ترجیحات چت",
diff --git a/locales/fr-FR/setting.json b/locales/fr-FR/setting.json
index a8f1681cb4a33..4a8bd8e2a5be4 100644
--- a/locales/fr-FR/setting.json
+++ b/locales/fr-FR/setting.json
@@ -220,7 +220,7 @@
     },
     "inputTemplate": {
       "desc": "Le dernier message de l'utilisateur sera rempli dans ce modèle",
-      "placeholder": "Le modèle de prétraitement {{text}} sera remplacé par les informations d'entrée en temps réel",
+      "placeholder": "Le modèle de prétraitement {{input_template}} sera remplacé par les informations d'entrée en temps réel",
       "title": "Modèle de prétraitement de l'entrée utilisateur"
     },
     "submit": "Mettre à jour les préférences de chat",
diff --git a/locales/it-IT/setting.json b/locales/it-IT/setting.json
index a8a0cb31ceecf..e261a660d48fc 100644
--- a/locales/it-IT/setting.json
+++ b/locales/it-IT/setting.json
@@ -220,7 +220,7 @@
     },
     "inputTemplate": {
       "desc": "Il template verrà popolato con l'ultimo messaggio dell'utente",
-      "placeholder": "Il modello di input {{text}} verrà sostituito con le informazioni in tempo reale",
+      "placeholder": "Il modello di input {{input_template}} verrà sostituito con le informazioni in tempo reale",
       "title": "Pre-elaborazione dell'input dell'utente"
     },
     "submit": "Aggiorna preferenze chat",
diff --git a/locales/ja-JP/setting.json b/locales/ja-JP/setting.json
index 527464d9c9634..7e0fc0da612d6 100644
--- a/locales/ja-JP/setting.json
+++ b/locales/ja-JP/setting.json
@@ -220,7 +220,7 @@
     },
     "inputTemplate": {
       "desc": "ユーザーの最新メッセージがこのテンプレートに埋め込まれます",
-      "placeholder": "入力テンプレート {{text}} はリアルタイムの入力情報に置き換えられます",
+      "placeholder": "入力テンプレート {{input_template}} はリアルタイムの入力情報に置き換えられます",
       "title": "ユーザー入力のプリプロセス"
     },
     "submit": "チャットの好みを更新",
diff --git a/locales/ko-KR/setting.json b/locales/ko-KR/setting.json
index c8ae7d718a5a6..20176f9bd326c 100644
--- a/locales/ko-KR/setting.json
+++ b/locales/ko-KR/setting.json
@@ -220,7 +220,7 @@
     },
     "inputTemplate": {
       "desc": "사용자의 최신 메시지가이 템플릿에 채워집니다",
-      "placeholder": "입력 템플릿 {{text}}은 실시간 입력 정보로 대체됩니다",
+      "placeholder": "입력 템플릿 {{input_template}}은 실시간 입력 정보로 대체됩니다",
       "title": "사용자 입력 전처리"
     },
     "submit": "채팅 선호도 업데이트",
diff --git a/locales/nl-NL/setting.json b/locales/nl-NL/setting.json
index 5b96d6cd738c0..3eaa5a76f5672 100644
--- a/locales/nl-NL/setting.json
+++ b/locales/nl-NL/setting.json
@@ -220,7 +220,7 @@
     },
     "inputTemplate": {
       "desc": "De meest recente gebruikersboodschap wordt ingevuld in dit sjabloon",
-      "placeholder": "Voorbewerkingssjabloon {{text}} wordt vervangen door realtime invoer",
+      "placeholder": "Voorbewerkingssjabloon {{input_template}} wordt vervangen door realtime invoer",
       "title": "Voorbewerking van gebruikersinvoer"
     },
     "submit": "Chatvoorkeuren bijwerken",
diff --git a/locales/pl-PL/setting.json b/locales/pl-PL/setting.json
index 9a53a9764e6f4..5812acfb3a030 100644
--- a/locales/pl-PL/setting.json
+++ b/locales/pl-PL/setting.json
@@ -220,7 +220,7 @@
     },
     "inputTemplate": {
       "desc": "Ostatnia wiadomość użytkownika zostanie wypełniona w tym szablonie",
-      "placeholder": "Szablon wejściowy {{text}} zostanie zastąpiony rzeczywistą wiadomością",
+      "placeholder": "Szablon wejściowy {{input_template}} zostanie zastąpiony rzeczywistą wiadomością",
       "title": "Szablon wejściowy"
     },
     "submit": "Zaktualizuj preferencje czatu",
diff --git a/locales/pt-BR/setting.json b/locales/pt-BR/setting.json
index 5a6c1f1832af5..0a4816fd18280 100644
--- a/locales/pt-BR/setting.json
+++ b/locales/pt-BR/setting.json
@@ -220,7 +220,7 @@
     },
     "inputTemplate": {
       "desc": "A última mensagem do usuário será preenchida neste modelo",
-      "placeholder": "O modelo de pré-processamento {{text}} será substituído pela entrada em tempo real",
+      "placeholder": "O modelo de pré-processamento {{input_template}} será substituído pela entrada em tempo real",
       "title": "Pré-processamento de entrada do usuário"
     },
     "submit": "Atualizar preferências de chat",
diff --git a/locales/ru-RU/setting.json b/locales/ru-RU/setting.json
index 1769602985d1c..e2571a99368fa 100644
--- a/locales/ru-RU/setting.json
+++ b/locales/ru-RU/setting.json
@@ -220,7 +220,7 @@
     },
     "inputTemplate": {
       "desc": "Последнее сообщение пользователя будет использовано в этом шаблоне",
-      "placeholder": "Шаблон ввода {{text}} будет заменен на реальные данные",
+      "placeholder": "Шаблон ввода {{input_template}} будет заменен на реальные данные",
       "title": "Шаблон ввода пользователя"
     },
     "submit": "Обновить предпочтения чата",
diff --git a/locales/tr-TR/setting.json b/locales/tr-TR/setting.json
index 3b792ea1fc60c..9d065a5afdddb 100644
--- a/locales/tr-TR/setting.json
+++ b/locales/tr-TR/setting.json
@@ -220,7 +220,7 @@
     },
     "inputTemplate": {
       "desc": "Kullanıcının son mesajı bu şablona doldurulur",
-      "placeholder": "Ön işleme şablonu {{text}}, gerçek zamanlı giriş bilgileri ile değiştirilir",
+      "placeholder": "Ön işleme şablonu {{input_template}}, gerçek zamanlı giriş bilgileri ile değiştirilir",
       "title": "Kullanıcı Girişi Ön İşleme"
     },
     "submit": "Sohbet tercihlerini güncelle",
diff --git a/locales/vi-VN/setting.json b/locales/vi-VN/setting.json
index c3b2a86b81de2..1ab7b5fdd8967 100644
--- a/locales/vi-VN/setting.json
+++ b/locales/vi-VN/setting.json
@@ -220,7 +220,7 @@
     },
     "inputTemplate": {
       "desc": "Tin nhắn mới nhất của người dùng sẽ được điền vào mẫu này",
-      "placeholder": "Mẫu xử lý trước {{text}} sẽ được thay thế bằng thông tin nhập thời gian thực",
+      "placeholder": "Mẫu xử lý trước {{input_template}} sẽ được thay thế bằng thông tin nhập thời gian thực",
       "title": "Mẫu xử lý đầu vào của người dùng"
     },
     "submit": "Cập nhật sở thích trò chuyện",
diff --git a/locales/zh-CN/setting.json b/locales/zh-CN/setting.json
index 052e95f61c302..29b71550a9515 100644
--- a/locales/zh-CN/setting.json
+++ b/locales/zh-CN/setting.json
@@ -220,7 +220,7 @@
     },
     "inputTemplate": {
       "desc": "用户最新的一条消息会填充到此模板",
-      "placeholder": "预处理模版 {{text}} 将替换为实时输入信息",
+      "placeholder": "预处理模版 {{input_template}} 将替换为实时输入信息",
       "title": "用户输入预处理"
     },
     "submit": "更新聊天偏好",
diff --git a/locales/zh-TW/setting.json b/locales/zh-TW/setting.json
index ca994812f8c03..cd825daf63df7 100644
--- a/locales/zh-TW/setting.json
+++ b/locales/zh-TW/setting.json
@@ -220,7 +220,7 @@
     },
     "inputTemplate": {
       "desc": "使用者最新的一條訊息會填充到此模板",
-      "placeholder": "預處理模板 {{text}} 將替換為實時輸入資訊",
+      "placeholder": "預處理模板 {{input_template}} 將替換為實時輸入資訊",
       "title": "使用者輸入預處理"
     },
     "submit": "更新聊天偏好",
diff --git a/src/locales/default/setting.ts b/src/locales/default/setting.ts
index 9b2e7fdc3aa49..67c44c7f6e21d 100644
--- a/src/locales/default/setting.ts
+++ b/src/locales/default/setting.ts
@@ -224,7 +224,7 @@ export default {
     },
     inputTemplate: {
       desc: '用户最新的一条消息会填充到此模板',
-      placeholder: '预处理模版 {{text}} 将替换为实时输入信息',
+      placeholder: '预处理模版 {{input_template}} 将替换为实时输入信息',
       title: '用户输入预处理',
     },
     submit: '更新聊天偏好',
diff --git a/src/services/chat.ts b/src/services/chat.ts
index 553f2ec299071..eaa2686017c6b 100644
--- a/src/services/chat.ts
+++ b/src/services/chat.ts
@@ -41,6 +41,7 @@ import { createErrorResponse } from '@/utils/errorResponse';
 import { FetchSSEOptions, fetchSSE, getMessageError } from '@/utils/fetch';
 import { genToolCallingName } from '@/utils/toolCall';
 import { createTraceHeader, getTraceId } from '@/utils/trace';
+import { parsePlaceholderVariablesMessages } from '@/utils/parserPlaceholder';
 
 import { createHeaderWithAuth, createPayloadWithKeyVaults } from './_auth';
 import { API_ENDPOINTS } from './_url';
@@ -189,11 +190,14 @@ class ChatService {
       pluginIds.push(WebBrowsingManifest.identifier);
     }
 
-    // ============  1. preprocess messages   ============ //
+    // ============  1. preprocess placeholder variables   ============ //
+    const parsedMessages = parsePlaceholderVariablesMessages(messages);
+
+    // ============  2. preprocess messages   ============ //
 
     const oaiMessages = this.processMessages(
       {
-        messages,
+        messages: parsedMessages,
         model: payload.model,
         provider: payload.provider!,
         tools: pluginIds,
@@ -201,14 +205,14 @@ class ChatService {
       options,
     );
 
-    // ============  2. preprocess tools   ============ //
+    // ============  3. preprocess tools   ============ //
 
     const tools = this.prepareTools(pluginIds, {
       model: payload.model,
       provider: payload.provider!,
     });
 
-    // ============  3. process extend params   ============ //
+    // ============  4. process extend params   ============ //
 
     let extendParams: Record<string, any> = {};
 
diff --git a/src/store/chat/slices/aiChat/actions/generateAIChat.ts b/src/store/chat/slices/aiChat/actions/generateAIChat.ts
index 09dabd22394fa..32660a57c15dd 100644
--- a/src/store/chat/slices/aiChat/actions/generateAIChat.ts
+++ b/src/store/chat/slices/aiChat/actions/generateAIChat.ts
@@ -1,7 +1,6 @@
 /* eslint-disable sort-keys-fix/sort-keys-fix, typescript-sort-keys/interface */
 // Disable the auto sort key eslint rule to make the code more logic and readable
 import { produce } from 'immer';
-import { template } from 'lodash-es';
 import { StateCreator } from 'zustand/vanilla';
 
 import { LOADING_FLAT, MESSAGE_CANCEL_FLAT } from '@/const/message';
@@ -495,8 +494,6 @@ export const generateAIChat: StateCreator<
     const agentConfig = agentSelectors.currentAgentConfig(getAgentStoreState());
     const chatConfig = agentChatConfigSelectors.currentChatConfig(getAgentStoreState());
 
-    const compiler = template(chatConfig.inputTemplate, { interpolate: /{{([\S\s]+?)}}/g });
-
     // ================================== //
     //   messages uniformly preprocess    //
     // ================================== //
@@ -511,29 +508,12 @@ export const generateAIChat: StateCreator<
       historyCount,
     });
 
-    // 2. replace inputMessage template
-    preprocessMsgs = !chatConfig.inputTemplate
-      ? preprocessMsgs
-      : preprocessMsgs.map((m) => {
-          if (m.role === 'user') {
-            try {
-              return { ...m, content: compiler({ text: m.content }) };
-            } catch (error) {
-              console.error(error);
-
-              return m;
-            }
-          }
-
-          return m;
-        });
-
-    // 3. add systemRole
+    // 2. add systemRole
     if (agentConfig.systemRole) {
       preprocessMsgs.unshift({ content: agentConfig.systemRole, role: 'system' } as ChatMessage);
     }
 
-    // 4. handle max_tokens
+    // 3. handle max_tokens
     agentConfig.params.max_tokens = chatConfig.enableMaxTokens
       ? agentConfig.params.max_tokens
       : undefined;
diff --git a/src/store/user/slices/auth/selectors.ts b/src/store/user/slices/auth/selectors.ts
index 3caed3e49706c..1648c5c798a7e 100644
--- a/src/store/user/slices/auth/selectors.ts
+++ b/src/store/user/slices/auth/selectors.ts
@@ -23,14 +23,15 @@ const nickName = (s: UserStore) => {
 };
 
 const username = (s: UserStore) => {
+  const defaultUserName = s.user?.username || s.user?.fullName;
   if (!enableAuth) {
     if (isDesktop) {
-      return s.user?.username;
+      return defaultUserName;
     }
     return DEFAULT_USERNAME;
   }
 
-  if (s.isSignedIn) return s.user?.username;
+  if (s.isSignedIn) return defaultUserName;
 
   return 'anonymous';
 };
diff --git a/src/utils/parserPlaceholder.ts b/src/utils/parserPlaceholder.ts
new file mode 100644
index 0000000000000..96a143f6fbd1b
--- /dev/null
+++ b/src/utils/parserPlaceholder.ts
@@ -0,0 +1,188 @@
+import { template } from 'lodash-es';
+
+import { v4 as uuidv4 } from 'uuid';
+
+import { useUserStore } from '@/store/user';
+import { userProfileSelectors } from '@/store/user/selectors';
+
+import { getAgentStoreState } from '@/store/agent/store';
+import { agentChatConfigSelectors } from '@/store/agent/selectors';
+
+const placeholderVariablesRegex = /{{(.*?)}}/g;
+
+/* eslint-disable sort-keys-fix/sort-keys-fix */
+export const VARIABLE_GENERATORS = {
+  /**
+  * 时间类模板变量
+  *
+  * | Value | Example |
+  * |-------|---------|
+  * | `{{date}}` | 12/25/2023 |
+  * | `{{datetime}}` | 12/25/2023, 2:30:45 PM |
+  * | `{{day}}` | 25 |
+  * | `{{hour}}` | 14 |
+  * | `{{iso}}` | 2023-12-25T14:30:45.123Z |
+  * | `{{locale}}` | zh-CN |
+  * | `{{minute}}` | 30 |
+  * | `{{month}}` | 12 |
+  * | `{{second}}` | 45 |
+  * | `{{time}}` | 2:30:45 PM |
+  * | `{{timestamp}}` | 1703538645123 |
+  * | `{{timezone}}` | America/New_York |
+  * | `{{weekday}}` | Monday |
+  * | `{{year}}` | 2023 |
+  *
+  */
+  date: () => new Date().toLocaleDateString(),
+  datetime: () => new Date().toLocaleString(),
+  day: () => new Date().getDate().toString().padStart(2, '0'),
+  hour: () => new Date().getHours().toString().padStart(2, '0'),
+  iso: () => new Date().toISOString(),
+  locale: () => Intl.DateTimeFormat().resolvedOptions().locale,
+  minute: () => new Date().getMinutes().toString().padStart(2, '0'),
+  month: () => (new Date().getMonth() + 1).toString().padStart(2, '0'),
+  second: () => new Date().getSeconds().toString().padStart(2, '0'),
+  time: () => new Date().toLocaleTimeString(),
+  timestamp: () => Date.now().toString(),
+  timezone: () => Intl.DateTimeFormat().resolvedOptions().timeZone,
+  weekday: () => new Date().toLocaleDateString('en-US', { weekday: 'long' }),
+  year: () => new Date().getFullYear().toString(),
+
+  /**
+  * 用户信息类模板变量
+  *
+  * | Value | Example |
+  * |-------|---------|
+  * | `{{nickname}}` | 社区版用户 |
+  * | `{{username}}` | LobeChat |
+  *
+  */
+  nickname: () => userProfileSelectors.nickName(useUserStore.getState()) ?? '',
+  username: () => userProfileSelectors.username(useUserStore.getState()) ?? '',
+
+  /**
+  * 随机值类模板变量
+  *
+  * | Value | Example |
+  * |-------|---------|
+  * | `{{random}}` | 100041 |
+  * | `{{random_bool}}` | true |
+  * | `{{random_float}}` | 76.02 |
+  * | `{{random_hex}}` | de0dbd |
+  * | `{{random_int}}` | 68 |
+  * | `{{random_string}}` | wqn9zfrqe7h |
+  *
+  */
+  random: () => Math.floor(Math.random() * 1_000_000 + 1).toString(),
+  random_bool: () => (Math.random() > 0.5 ? 'true' : 'false'),
+  random_float: () => (Math.random() * 100).toFixed(2),
+  random_hex: () => Math.floor(Math.random() * 16_777_215).toString(16).padStart(6, '0'),
+  random_int: () => Math.floor(Math.random() * 100 + 1).toString(),
+  random_string: () => Math.random().toString(36).slice(2, 15),
+  random_digit: () => Math.floor(Math.random() * 10).toString(),
+
+  /**
+  * UUID 类模板变量
+  *
+  * | Value | Example |
+  * |-------|---------|
+  * | `{{uuid}}` | dd90b35-669f-4e87-beb8-ac6877f6995d |
+  * | `{{uuid_short}}` | dd90b35 |
+  *
+  */
+  uuid: () => uuidv4(),
+  uuid_short: () => uuidv4().split('-')[0],
+
+  /**
+  * 平台类模板变量
+  *
+  * | Value | Example |
+  * |-------|---------|
+  * | `{{language}}` | zh-CN |
+  * | `{{platform}}` | MacIntel |
+  * | `{{user_agent}}` | Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36 Edg/132.0.0.0 |
+  *
+  */
+  language: () => typeof navigator !== 'undefined' ? navigator.language : '',
+  platform: () => typeof navigator !== 'undefined' ? navigator.platform : '',
+  user_agent: () => typeof navigator !== 'undefined' ? navigator.userAgent : '',
+
+  /**
+  * LobeChat 模板变量
+  *
+  * | Value | Example |
+  * |-------|---------|
+  * | `{{input_template}}` | Some contents |
+  *
+  */
+  input_template: () => agentChatConfigSelectors.currentChatConfig(getAgentStoreState()).inputTemplate || '',
+} as Record<string, () => string>;
+
+/**
+ * 从文本中提取所有 {{variable}} 占位符的变量名
+ * @param text 包含模板变量的字符串
+ * @returns 变量名数组，如 ['date', 'nickname']
+ */
+const extractPlaceholderVariables = (text: string): string[] => {
+  const matches = [...text.matchAll(placeholderVariablesRegex)];
+  return matches.map(m => m[1].trim());
+};
+
+/**
+ * 预留值解析函数 - 将模板变量替换为实际值
+ * @param text - 包含模板变量的文本
+ * @returns 替换后的文本
+ */
+export const parsePlaceholderVariables = (text: string): string => {
+  try {
+    const keys = extractPlaceholderVariables(text);
+    const variables: Record<string, string> = {};
+
+    for (const key of keys) {
+      const generator = VARIABLE_GENERATORS[key];
+      if (generator) {
+        variables[key] = generator();
+      }
+    }
+
+    const compiled = template(text, {
+      interpolate: placeholderVariablesRegex,
+    });
+
+    return compiled(variables);
+  } catch {
+    // 如果模板编译失败，返回原文本
+    return text;
+  }
+};
+
+/**
+ * 解析消息内容，替换占位符变量
+ * @param messages 原始消息数组
+ * @returns 处理后的消息数组
+ */
+export const parsePlaceholderVariablesMessages = (messages: any[]): any[] =>
+  messages.map(message => {
+    if (!message?.content) return message;
+
+    const { content } = message;
+
+    // 字符串类型直接处理
+    if (typeof content === 'string') {
+      return { ...message, content: parsePlaceholderVariables(content) };
+    }
+
+    // 数组类型处理其中的 text 元素
+    if (Array.isArray(content)) {
+      return {
+        ...message,
+        content: content.map(item => 
+          item?.type === 'text' 
+            ? { ...item, text: parsePlaceholderVariables(item.text) }
+            : item
+        )
+      };
+    }
+
+    return message;
+  });
