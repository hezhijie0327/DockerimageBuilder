diff --git a/src/libs/model-runtime/utils/openaiHelpers.ts b/src/libs/model-runtime/utils/openaiHelpers.ts
index a07bb96f82468..c19c821840b32 100644
--- a/src/libs/model-runtime/utils/openaiHelpers.ts
+++ b/src/libs/model-runtime/utils/openaiHelpers.ts
@@ -6,9 +6,73 @@ import { imageUrlToBase64 } from '@/utils/imageToBase64';
 
 import { parseDataUri } from './uriParser';
 
+import { v4 as uuidv4 } from 'uuid';
+
+//import { userProfileSelectors } from '@/store/user/selectors';
+
+/**
+ * 预留值解析函数 - 将模板变量替换为实际值
+ * 支持的预留值:
+ * 
+ * | Value | Example |
+ * |-------|---------|
+ * | `{{date}}` | 12/25/2023 |
+ * | `{{datetime}}` | 12/25/2023, 2:30:45 PM |
+ * | `{{day}}` | 25 |
+ * | `{{hour}}` | 14 |
+ * | `{{iso}}` | 2023-12-25T14:30:45.123Z |
+ * | `{{locale}}` | zh-CN |
+ * | `{{minute}}` | 30 |
+ * | `{{month}}` | 12 |
+ * | `{{random_hex}}` | de0dbd |
+ * | `{{random_int}}` | 68 |
+ * | `{{random}}` | 100041 |
+ * | `{{second}}` | 45 |
+ * | `{{time}}` | 2:30:45 PM |
+ * | `{{timestamp}}` | 1703538645123 |
+ * | `{{timezone}}` | America/New_York |
+ * | `{{username}}` | LobeChat |
+ * | `{{uuid}}` | dd90b35-669f-4e87-beb8-ac6877f6995d |
+ * | `{{weekday}}` | Monday |
+ * | `{{year}}` | 2023 |
+ * 
+ * @param text - 包含模板变量的文本
+ * @returns 替换后的文本
+ */
+const parseTemplateVariables = (text: string): string => {
+  const now = new Date();
+
+  const variables: Record<string, string> = {
+    date: now.toLocaleDateString(),
+    datetime: now.toLocaleString(),
+    day: now.getDate().toString().padStart(2, '0'),
+    hour: now.getHours().toString().padStart(2, '0'),
+    iso: now.toISOString(),
+    locale: Intl.DateTimeFormat().resolvedOptions().locale,
+    minute: now.getMinutes().toString().padStart(2, '0'),
+    month: (now.getMonth() + 1).toString().padStart(2, '0'),
+    random: Math.floor(Math.random() * 1_000_000 + 1).toString(),
+    random_hex: Math.floor(Math.random() * 16_777_215).toString(16).padStart(6, '0'),
+    random_int: Math.floor(Math.random() * 100 + 1).toString(),
+    second: now.getSeconds().toString().padStart(2, '0'),
+    time: now.toLocaleTimeString(),
+    timestamp: Date.now().toString(),
+    timezone: Intl.DateTimeFormat().resolvedOptions().timeZone,
+    //username: userProfileSelectors.username() || 'anonymous',
+    uuid: uuidv4(),
+    weekday: now.toLocaleDateString('en-US', { weekday: 'long' }),
+    year: now.getFullYear().toString(),
+  };
+
+  return text.replaceAll(/{{(\w+)}}/g, (match, key) => {
+    return variables[key] || match;
+  });
+};
+
 export const convertMessageContent = async (
   content: OpenAI.ChatCompletionContentPart,
 ): Promise<OpenAI.ChatCompletionContentPart> => {
+  // 处理图片URL转换
   if (content.type === 'image_url') {
     const { type } = parseDataUri(content.image_url.url);
 
@@ -21,6 +85,14 @@ export const convertMessageContent = async (
       };
     }
   }
+  
+  // 处理文本内容中的预留值
+  if (content.type === 'text' && typeof content.text === 'string') {
+    return {
+      ...content,
+      text: parseTemplateVariables(content.text),
+    };
+  }
 
   return content;
 };
@@ -31,7 +103,7 @@ export const convertOpenAIMessages = async (messages: OpenAI.ChatCompletionMessa
       ...message,
       content:
         typeof message.content === 'string'
-          ? message.content
+          ? parseTemplateVariables(message.content)
           : await Promise.all(
               (message.content || []).map((c) =>
                 convertMessageContent(c as OpenAI.ChatCompletionContentPart),
