diff --git a/locales/ar/setting.json b/locales/ar/setting.json
index 41c4b49f5385b..e1457c135da0d 100644
--- a/locales/ar/setting.json
+++ b/locales/ar/setting.json
@@ -220,7 +220,7 @@
     },
     "inputTemplate": {
       "desc": "سيتم ملء أحدث رسالة من المستخدم في هذا القالب",
-      "placeholder": "القالب المُعالج مسبقًا {{input_template}} سيتم استبداله بالمعلومات المُدخلة في الوقت الحقيقي",
+      "placeholder": "القالب المُعالج مسبقًا {{text}} سيتم استبداله بالمعلومات المُدخلة في الوقت الحقيقي",
       "title": "معالجة مُدخلات المستخدم"
     },
     "submit": "تحديث تفضيلات الدردشة",
diff --git a/locales/bg-BG/setting.json b/locales/bg-BG/setting.json
index ce31e57ec0b4a..cd4413078ec9e 100644
--- a/locales/bg-BG/setting.json
+++ b/locales/bg-BG/setting.json
@@ -220,7 +220,7 @@
     },
     "inputTemplate": {
       "desc": "Последното съобщение на потребителя ще бъде попълнено в този шаблон",
-      "placeholder": "Шаблонът за предварителна обработка {{input_template}} ще бъде заменен с информация за въвеждане в реално време",
+      "placeholder": "Шаблонът за предварителна обработка {{text}} ще бъде заменен с информация за въвеждане в реално време",
       "title": "Предварителна обработка на потребителския вход"
     },
     "submit": "Актуализиране на предпочитанията за чат",
diff --git a/locales/de-DE/setting.json b/locales/de-DE/setting.json
index 56da1ec1faea5..cac3475634cb0 100644
--- a/locales/de-DE/setting.json
+++ b/locales/de-DE/setting.json
@@ -220,7 +220,7 @@
     },
     "inputTemplate": {
       "desc": "Die neueste Benutzernachricht wird in dieses Template eingefügt",
-      "placeholder": "Vorlagen-{{input_template}} werden durch Echtzeit-Eingabeinformationen ersetzt",
+      "placeholder": "Vorlagen-{{text}} werden durch Echtzeit-Eingabeinformationen ersetzt",
       "title": "Benutzereingabe-Vorverarbeitung"
     },
     "submit": "Chat-Präferenzen aktualisieren",
diff --git a/locales/en-US/setting.json b/locales/en-US/setting.json
index d21189ceb861b..68b1543b42daf 100644
--- a/locales/en-US/setting.json
+++ b/locales/en-US/setting.json
@@ -220,7 +220,7 @@
     },
     "inputTemplate": {
       "desc": "The user's latest message will be filled into this template",
-      "placeholder": "Preprocessing template {{input_template}} will be replaced with real-time input information",
+      "placeholder": "Preprocessing template {{text}} will be replaced with real-time input information",
       "title": "User Input Preprocessing"
     },
     "submit": "Update Chat Preferences",
diff --git a/locales/es-ES/setting.json b/locales/es-ES/setting.json
index 7fec828a6f531..7ff78145946c4 100644
--- a/locales/es-ES/setting.json
+++ b/locales/es-ES/setting.json
@@ -220,7 +220,7 @@
     },
     "inputTemplate": {
       "desc": "El último mensaje del usuario se completará en esta plantilla",
-      "placeholder": "La plantilla de preprocesamiento {{input_template}} se reemplazará por la información de entrada en tiempo real",
+      "placeholder": "La plantilla de preprocesamiento {{text}} se reemplazará por la información de entrada en tiempo real",
       "title": "Preprocesamiento de entrada del usuario"
     },
     "submit": "Actualizar preferencias de chat",
diff --git a/locales/fa-IR/setting.json b/locales/fa-IR/setting.json
index 15c69b82b7be4..bf70213e1b74d 100644
--- a/locales/fa-IR/setting.json
+++ b/locales/fa-IR/setting.json
@@ -220,7 +220,7 @@
     },
     "inputTemplate": {
       "desc": "آخرین پیام کاربر در این قالب پر می‌شود",
-      "placeholder": "قالب پیش‌پردازش {{input_template}} با اطلاعات ورودی لحظه‌ای جایگزین می‌شود",
+      "placeholder": "قالب پیش‌پردازش {{text}} با اطلاعات ورودی لحظه‌ای جایگزین می‌شود",
       "title": "پیش‌پردازش ورودی کاربر"
     },
     "submit": "به‌روزرسانی ترجیحات چت",
diff --git a/locales/fr-FR/setting.json b/locales/fr-FR/setting.json
index f3b7ddaa1c4db..a3d8aedccad44 100644
--- a/locales/fr-FR/setting.json
+++ b/locales/fr-FR/setting.json
@@ -220,7 +220,7 @@
     },
     "inputTemplate": {
       "desc": "Le dernier message de l'utilisateur sera rempli dans ce modèle",
-      "placeholder": "Le modèle de prétraitement {{input_template}} sera remplacé par les informations d'entrée en temps réel",
+      "placeholder": "Le modèle de prétraitement {{text}} sera remplacé par les informations d'entrée en temps réel",
       "title": "Modèle de prétraitement de l'entrée utilisateur"
     },
     "submit": "Mettre à jour les préférences de chat",
diff --git a/locales/it-IT/setting.json b/locales/it-IT/setting.json
index fbd6d0736bbb1..41b835d3e72b8 100644
--- a/locales/it-IT/setting.json
+++ b/locales/it-IT/setting.json
@@ -220,7 +220,7 @@
     },
     "inputTemplate": {
       "desc": "Il template verrà popolato con l'ultimo messaggio dell'utente",
-      "placeholder": "Il modello di input {{input_template}} verrà sostituito con le informazioni in tempo reale",
+      "placeholder": "Il modello di input {{text}} verrà sostituito con le informazioni in tempo reale",
       "title": "Pre-elaborazione dell'input dell'utente"
     },
     "submit": "Aggiorna preferenze chat",
diff --git a/locales/ja-JP/setting.json b/locales/ja-JP/setting.json
index b054bd8e3ca9e..615e968155256 100644
--- a/locales/ja-JP/setting.json
+++ b/locales/ja-JP/setting.json
@@ -220,7 +220,7 @@
     },
     "inputTemplate": {
       "desc": "ユーザーの最新メッセージがこのテンプレートに埋め込まれます",
-      "placeholder": "入力テンプレート {{input_template}} はリアルタイムの入力情報に置き換えられます",
+      "placeholder": "入力テンプレート {{text}} はリアルタイムの入力情報に置き換えられます",
       "title": "ユーザー入力のプリプロセス"
     },
     "submit": "チャットの好みを更新",
diff --git a/locales/ko-KR/setting.json b/locales/ko-KR/setting.json
index f3976eb672f75..593ffcf22e278 100644
--- a/locales/ko-KR/setting.json
+++ b/locales/ko-KR/setting.json
@@ -220,7 +220,7 @@
     },
     "inputTemplate": {
       "desc": "사용자의 최신 메시지가이 템플릿에 채워집니다",
-      "placeholder": "입력 템플릿 {{input_template}}은 실시간 입력 정보로 대체됩니다",
+      "placeholder": "입력 템플릿 {{text}}은 실시간 입력 정보로 대체됩니다",
       "title": "사용자 입력 전처리"
     },
     "submit": "채팅 선호도 업데이트",
diff --git a/locales/nl-NL/setting.json b/locales/nl-NL/setting.json
index cdeea685ece05..04dc61aba41ba 100644
--- a/locales/nl-NL/setting.json
+++ b/locales/nl-NL/setting.json
@@ -220,7 +220,7 @@
     },
     "inputTemplate": {
       "desc": "De meest recente gebruikersboodschap wordt ingevuld in dit sjabloon",
-      "placeholder": "Voorbewerkingssjabloon {{input_template}} wordt vervangen door realtime invoer",
+      "placeholder": "Voorbewerkingssjabloon {{text}} wordt vervangen door realtime invoer",
       "title": "Voorbewerking van gebruikersinvoer"
     },
     "submit": "Chatvoorkeuren bijwerken",
diff --git a/locales/pl-PL/setting.json b/locales/pl-PL/setting.json
index a016f45088949..e63bb01ed89de 100644
--- a/locales/pl-PL/setting.json
+++ b/locales/pl-PL/setting.json
@@ -220,7 +220,7 @@
     },
     "inputTemplate": {
       "desc": "Ostatnia wiadomość użytkownika zostanie wypełniona w tym szablonie",
-      "placeholder": "Szablon wejściowy {{input_template}} zostanie zastąpiony rzeczywistą wiadomością",
+      "placeholder": "Szablon wejściowy {{text}} zostanie zastąpiony rzeczywistą wiadomością",
       "title": "Szablon wejściowy"
     },
     "submit": "Zaktualizuj preferencje czatu",
diff --git a/locales/pt-BR/setting.json b/locales/pt-BR/setting.json
index 66752ddbab281..28df286f03c3d 100644
--- a/locales/pt-BR/setting.json
+++ b/locales/pt-BR/setting.json
@@ -220,7 +220,7 @@
     },
     "inputTemplate": {
       "desc": "A última mensagem do usuário será preenchida neste modelo",
-      "placeholder": "O modelo de pré-processamento {{input_template}} será substituído pela entrada em tempo real",
+      "placeholder": "O modelo de pré-processamento {{text}} será substituído pela entrada em tempo real",
       "title": "Pré-processamento de entrada do usuário"
     },
     "submit": "Atualizar preferências de chat",
diff --git a/locales/ru-RU/setting.json b/locales/ru-RU/setting.json
index 80119bc4c7baf..8f24123cca22e 100644
--- a/locales/ru-RU/setting.json
+++ b/locales/ru-RU/setting.json
@@ -220,7 +220,7 @@
     },
     "inputTemplate": {
       "desc": "Последнее сообщение пользователя будет использовано в этом шаблоне",
-      "placeholder": "Шаблон ввода {{input_template}} будет заменен на реальные данные",
+      "placeholder": "Шаблон ввода {{text}} будет заменен на реальные данные",
       "title": "Шаблон ввода пользователя"
     },
     "submit": "Обновить предпочтения чата",
diff --git a/locales/tr-TR/setting.json b/locales/tr-TR/setting.json
index 7611e5aa69142..ea65d1b982aec 100644
--- a/locales/tr-TR/setting.json
+++ b/locales/tr-TR/setting.json
@@ -220,7 +220,7 @@
     },
     "inputTemplate": {
       "desc": "Kullanıcının son mesajı bu şablona doldurulur",
-      "placeholder": "Ön işleme şablonu {{input_template}}, gerçek zamanlı giriş bilgileri ile değiştirilir",
+      "placeholder": "Ön işleme şablonu {{text}}, gerçek zamanlı giriş bilgileri ile değiştirilir",
       "title": "Kullanıcı Girişi Ön İşleme"
     },
     "submit": "Sohbet tercihlerini güncelle",
diff --git a/locales/vi-VN/setting.json b/locales/vi-VN/setting.json
index dd83b5d9cb75c..72e351ab9412a 100644
--- a/locales/vi-VN/setting.json
+++ b/locales/vi-VN/setting.json
@@ -220,7 +220,7 @@
     },
     "inputTemplate": {
       "desc": "Tin nhắn mới nhất của người dùng sẽ được điền vào mẫu này",
-      "placeholder": "Mẫu xử lý trước {{input_template}} sẽ được thay thế bằng thông tin nhập thời gian thực",
+      "placeholder": "Mẫu xử lý trước {{text}} sẽ được thay thế bằng thông tin nhập thời gian thực",
       "title": "Mẫu xử lý đầu vào của người dùng"
     },
     "submit": "Cập nhật sở thích trò chuyện",
diff --git a/locales/zh-CN/setting.json b/locales/zh-CN/setting.json
index 9fdfa571a91bc..a7681294893e8 100644
--- a/locales/zh-CN/setting.json
+++ b/locales/zh-CN/setting.json
@@ -220,7 +220,7 @@
     },
     "inputTemplate": {
       "desc": "用户最新的一条消息会填充到此模板",
-      "placeholder": "预处理模版 {{input_template}} 将替换为实时输入信息",
+      "placeholder": "预处理模版 {{text}} 将替换为实时输入信息",
       "title": "用户输入预处理"
     },
     "submit": "更新聊天偏好",
diff --git a/locales/zh-TW/setting.json b/locales/zh-TW/setting.json
index e2d9d3cc4afa9..6ceb7b1c89493 100644
--- a/locales/zh-TW/setting.json
+++ b/locales/zh-TW/setting.json
@@ -220,7 +220,7 @@
     },
     "inputTemplate": {
       "desc": "使用者最新的一條訊息會填充到此模板",
-      "placeholder": "預處理模板 {{input_template}} 將替換為實時輸入資訊",
+      "placeholder": "預處理模板 {{text}} 將替換為實時輸入資訊",
       "title": "使用者輸入預處理"
     },
     "submit": "更新聊天偏好",
diff --git a/src/locales/default/setting.ts b/src/locales/default/setting.ts
index e6b0f7936df45..5a85bd061c680 100644
--- a/src/locales/default/setting.ts
+++ b/src/locales/default/setting.ts
@@ -224,7 +224,7 @@ export default {
     },
     inputTemplate: {
       desc: '用户最新的一条消息会填充到此模板',
-      placeholder: '预处理模版 {{input_template}} 将替换为实时输入信息',
+      placeholder: '预处理模版 {{text}} 将替换为实时输入信息',
       title: '用户输入预处理',
     },
     submit: '更新聊天偏好',
diff --git a/src/store/chat/slices/aiChat/actions/generateAIChat.ts b/src/store/chat/slices/aiChat/actions/generateAIChat.ts
index 25d2f3314f685..9f7067b1423e2 100644
--- a/src/store/chat/slices/aiChat/actions/generateAIChat.ts
+++ b/src/store/chat/slices/aiChat/actions/generateAIChat.ts
@@ -1,6 +1,7 @@
 /* eslint-disable sort-keys-fix/sort-keys-fix, typescript-sort-keys/interface */
 // Disable the auto sort key eslint rule to make the code more logic and readable
 import { produce } from 'immer';
+import { template } from 'lodash-es';
 import { StateCreator } from 'zustand/vanilla';
 
 import { LOADING_FLAT, MESSAGE_CANCEL_FLAT } from '@/const/message';
@@ -507,6 +508,10 @@ export const generateAIChat: StateCreator<
     const agentConfig = agentSelectors.currentAgentConfig(getAgentStoreState());
     const chatConfig = agentChatConfigSelectors.currentChatConfig(getAgentStoreState());
 
+    const compiler = template(chatConfig.inputTemplate, {
+      interpolate: /{{\s*(text)\s*}}/g
+    });
+
     // ================================== //
     //   messages uniformly preprocess    //
     // ================================== //
@@ -521,17 +526,34 @@ export const generateAIChat: StateCreator<
       historyCount,
     });
 
-    // 2. add systemRole
+    // 2. replace inputMessage template
+    preprocessMsgs = !chatConfig.inputTemplate
+    ? preprocessMsgs
+    : preprocessMsgs.map((m) => {
+        if (m.role === 'user') {
+          try {
+            return { ...m, content: compiler({ text: m.content }) };
+          } catch (error) {
+            console.error(error);
+
+            return m;
+          }
+        }
+
+        return m;
+      });
+
+    // 3. add systemRole
     if (agentConfig.systemRole) {
       preprocessMsgs.unshift({ content: agentConfig.systemRole, role: 'system' } as ChatMessage);
     }
 
-    // 3. handle max_tokens
+    // 4. handle max_tokens
     agentConfig.params.max_tokens = chatConfig.enableMaxTokens
       ? agentConfig.params.max_tokens
       : undefined;
 
-    // 4. handle reasoning_effort
+    // 5. handle reasoning_effort
     agentConfig.params.reasoning_effort = chatConfig.enableReasoningEffort
       ? agentConfig.params.reasoning_effort
       : undefined;
diff --git a/src/utils/client/parserPlaceholder.test.ts b/src/utils/client/parserPlaceholder.test.ts
index 893d5a593b98a..b0343d4c7210a 100644
--- a/src/utils/client/parserPlaceholder.test.ts
+++ b/src/utils/client/parserPlaceholder.test.ts
@@ -21,18 +21,6 @@ vi.mock('@/store/user/selectors', () => ({
   },
 }));
 
-vi.mock('@/store/agent/store', () => ({
-  getAgentStoreState: () => ({}),
-}));
-
-vi.mock('@/store/agent/selectors', () => ({
-  agentChatConfigSelectors: {
-    currentChatConfig: () => ({
-      inputTemplate: 'Hello {{username}}!',
-    }),
-  },
-}));
-
 describe('parsePlaceholderVariablesMessages', () => {
   beforeEach(() => {
     // Mock Date for consistent testing
@@ -238,15 +226,6 @@ describe('parsePlaceholderVariablesMessages', () => {
       // Unknown variables should remain unchanged
       expect(result[0].content).toBe('Hello {{unknown_variable}}!');
     });
-
-    it('should handle nested variables (input_template)', () => {
-      const messages = [{ id: '1', content: 'Template: {{input_template}}' }];
-
-      const result = parsePlaceholderVariablesMessages(messages);
-
-      // Should resolve nested variables in input_template
-      expect(result[0].content).toBe('Template: Hello testuser!');
-    });
   });
 
   describe('specific variable types', () => {
diff --git a/src/utils/client/parserPlaceholder.ts b/src/utils/client/parserPlaceholder.ts
index 8dec950369abd..05e52db58d284 100644
--- a/src/utils/client/parserPlaceholder.ts
+++ b/src/utils/client/parserPlaceholder.ts
@@ -5,9 +5,6 @@ import { uuid } from '@/utils/uuid';
 import { useUserStore } from '@/store/user';
 import { userProfileSelectors } from '@/store/user/selectors';
 
-import { getAgentStoreState } from '@/store/agent/store';
-import { agentChatConfigSelectors } from '@/store/agent/selectors';
-
 const placeholderVariablesRegex = /{{(.*?)}}/g;
 
 /* eslint-disable sort-keys-fix/sort-keys-fix */
@@ -108,16 +105,6 @@ export const VARIABLE_GENERATORS = {
   language: () => typeof navigator !== 'undefined' ? navigator.language : '',
   platform: () => typeof navigator !== 'undefined' ? navigator.platform : '',
   user_agent: () => typeof navigator !== 'undefined' ? navigator.userAgent : '',
-
-  /**
-  * LobeChat 模板变量
-  *
-  * | Value | Example |
-  * |-------|---------|
-  * | `{{input_template}}` | Some contents |
-  *
-  */
-  input_template: () => agentChatConfigSelectors.currentChatConfig(getAgentStoreState()).inputTemplate || '',
 } as Record<string, () => string>;
 
 /**
@@ -133,13 +120,13 @@ const extractPlaceholderVariables = (text: string): string[] => {
 /**
  * 将模板变量替换为实际值，并支持递归解析嵌套变量
  * @param text - 含变量的原始文本
- * @param depth - 递归深度，默认 1，设置更高可支持 {{input_template}} 中的 {{date}} 等
+ * @param depth - 递归深度，默认 1，设置更高可支持 {{text}} 中的 {{date}} 等
  * @returns 替换后的文本
  */
 export const parsePlaceholderVariables = (text: string, depth = 2): string => {
   let result = text;
 
-  // 递归解析，用于处理如 {{input_template}} 存在额外预设变量
+  // 递归解析，用于处理如 {{text}} 存在额外预设变量
   for (let i = 0; i < depth; i++) {
     try {
       const variables = Object.fromEntries(
