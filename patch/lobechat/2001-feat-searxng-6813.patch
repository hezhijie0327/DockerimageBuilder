diff --git a/locales/ar/tool.json b/locales/ar/tool.json
index 5d90399e9f570..46002c27a95b9 100644
--- a/locales/ar/tool.json
+++ b/locales/ar/tool.json
@@ -21,8 +21,16 @@
     },
     "searchEngine": "محرك البحث:",
     "searchResult": "عدد النتائج:",
+    "searchTimeRange": "نطاق الوقت:",
     "summary": "ملخص",
     "summaryTooltip": "تلخيص المحتوى الحالي",
+    "timeRange": {
+      "anytime": "في أي وقت",
+      "day": "خلال يوم واحد",
+      "month": "خلال شهر واحد",
+      "week": "خلال أسبوع واحد",
+      "year": "خلال سنة واحدة"
+    },
     "viewMoreResults": "عرض المزيد من {{results}} نتيجة"
   }
 }
diff --git a/locales/bg-BG/tool.json b/locales/bg-BG/tool.json
index 5591223d2e9ea..f474eb98977e0 100644
--- a/locales/bg-BG/tool.json
+++ b/locales/bg-BG/tool.json
@@ -21,8 +21,16 @@
     },
     "searchEngine": "Търсачка:",
     "searchResult": "Брой резултати:",
+    "searchTimeRange": "Времеви диапазон:",
     "summary": "Резюме",
     "summaryTooltip": "Резюме на текущото съдържание",
+    "timeRange": {
+      "anytime": "Без ограничения на времето",
+      "day": "В рамките на един ден",
+      "month": "В рамките на един месец",
+      "week": "В рамките на една седмица",
+      "year": "В рамките на една година"
+    },
     "viewMoreResults": "Вижте още {{results}} резултата"
   }
 }
diff --git a/locales/de-DE/tool.json b/locales/de-DE/tool.json
index 24f5bc750e18d..155cc9f0700c5 100644
--- a/locales/de-DE/tool.json
+++ b/locales/de-DE/tool.json
@@ -21,8 +21,16 @@
     },
     "searchEngine": "Suchmaschine:",
     "searchResult": "Anzahl der Suchergebnisse:",
+    "searchTimeRange": "Zeitspanne:",
     "summary": "Zusammenfassung",
     "summaryTooltip": "Aktuellen Inhalt zusammenfassen",
+    "timeRange": {
+      "anytime": "Keine Zeitbeschränkung",
+      "day": "Innerhalb eines Tages",
+      "month": "Innerhalb eines Monats",
+      "week": "Innerhalb einer Woche",
+      "year": "Innerhalb eines Jahres"
+    },
     "viewMoreResults": "Weitere {{results}} Ergebnisse anzeigen"
   }
 }
diff --git a/locales/en-US/tool.json b/locales/en-US/tool.json
index 0798577aefb42..e9fedc68eb8a1 100644
--- a/locales/en-US/tool.json
+++ b/locales/en-US/tool.json
@@ -21,8 +21,16 @@
     },
     "searchEngine": "Search engine:",
     "searchResult": "Number of searches:",
+    "searchTimeRange": "Time Range:",
     "summary": "Summary",
     "summaryTooltip": "Summarize the current content",
+    "timeRange": {
+      "anytime": "Anytime",
+      "day": "Within a day",
+      "month": "Within a month",
+      "week": "Within a week",
+      "year": "Within a year"
+    },
     "viewMoreResults": "View {{results}} more results"
   }
 }
diff --git a/locales/es-ES/tool.json b/locales/es-ES/tool.json
index ba38af7e6b4c6..7220b03436ac6 100644
--- a/locales/es-ES/tool.json
+++ b/locales/es-ES/tool.json
@@ -21,8 +21,16 @@
     },
     "searchEngine": "Motor de búsqueda:",
     "searchResult": "Número de búsquedas:",
+    "searchTimeRange": "Rango de tiempo:",
     "summary": "Resumen",
     "summaryTooltip": "Resumir el contenido actual",
+    "timeRange": {
+      "anytime": "Sin límite de tiempo",
+      "day": "En un día",
+      "month": "En un mes",
+      "week": "En una semana",
+      "year": "En un año"
+    },
     "viewMoreResults": "Ver más {{results}} resultados"
   }
 }
diff --git a/locales/fa-IR/tool.json b/locales/fa-IR/tool.json
index f728c1c6c04f4..d07efe641d1e3 100644
--- a/locales/fa-IR/tool.json
+++ b/locales/fa-IR/tool.json
@@ -21,8 +21,16 @@
     },
     "searchEngine": "موتور جستجو:",
     "searchResult": "تعداد جستجو:",
+    "searchTimeRange": "محدوده زمانی:",
     "summary": "خلاصه",
     "summaryTooltip": "خلاصه محتوای فعلی",
+    "timeRange": {
+      "anytime": "بدون محدودیت زمانی",
+      "day": "در یک روز",
+      "month": "در یک ماه",
+      "week": "در یک هفته",
+      "year": "در یک سال"
+    },
     "viewMoreResults": "مشاهده {{results}} نتیجه بیشتر"
   }
 }
diff --git a/locales/fr-FR/tool.json b/locales/fr-FR/tool.json
index 3aa6bf3ba763c..8c275c7333b96 100644
--- a/locales/fr-FR/tool.json
+++ b/locales/fr-FR/tool.json
@@ -21,8 +21,16 @@
     },
     "searchEngine": "Moteur de recherche :",
     "searchResult": "Nombre de recherches :",
+    "searchTimeRange": "Plage horaire :",
     "summary": "Résumé",
     "summaryTooltip": "Résumer le contenu actuel",
+    "timeRange": {
+      "anytime": "Temps illimité",
+      "day": "Dans la journée",
+      "month": "Dans le mois",
+      "week": "Dans la semaine",
+      "year": "Dans l'année"
+    },
     "viewMoreResults": "Voir {{results}} résultats supplémentaires"
   }
 }
diff --git a/locales/it-IT/tool.json b/locales/it-IT/tool.json
index 12339bbec0df7..74e99525696cd 100644
--- a/locales/it-IT/tool.json
+++ b/locales/it-IT/tool.json
@@ -21,8 +21,16 @@
     },
     "searchEngine": "Motore di ricerca:",
     "searchResult": "Numero di ricerche:",
+    "searchTimeRange": "Intervallo di tempo:",
     "summary": "Riepilogo",
     "summaryTooltip": "Riepiloga il contenuto attuale",
+    "timeRange": {
+      "anytime": "Nessun limite di tempo",
+      "day": "Entro un giorno",
+      "month": "Entro un mese",
+      "week": "Entro una settimana",
+      "year": "Entro un anno"
+    },
     "viewMoreResults": "Visualizza altri {{results}} risultati"
   }
 }
diff --git a/locales/ja-JP/tool.json b/locales/ja-JP/tool.json
index 30804a81b1602..1dc61f4448957 100644
--- a/locales/ja-JP/tool.json
+++ b/locales/ja-JP/tool.json
@@ -21,8 +21,16 @@
     },
     "searchEngine": "検索エンジン：",
     "searchResult": "検索結果の数：",
+    "searchTimeRange": "時間範囲：",
     "summary": "要約",
     "summaryTooltip": "現在の内容を要約",
+    "timeRange": {
+      "anytime": "時間制限なし",
+      "day": "1日以内",
+      "month": "1ヶ月以内",
+      "week": "1週間以内",
+      "year": "1年以内"
+    },
     "viewMoreResults": "さらに {{results}} 件の結果を見る"
   }
 }
diff --git a/locales/ko-KR/tool.json b/locales/ko-KR/tool.json
index 510c3ef871f38..5eb7435a53be4 100644
--- a/locales/ko-KR/tool.json
+++ b/locales/ko-KR/tool.json
@@ -21,8 +21,16 @@
     },
     "searchEngine": "검색 엔진：",
     "searchResult": "검색 수：",
+    "searchTimeRange": "시간 범위:",
     "summary": "요약",
     "summaryTooltip": "현재 내용 요약",
+    "timeRange": {
+      "anytime": "시간 제한 없음",
+      "day": "하루 이내",
+      "month": "한 달 이내",
+      "week": "일주일 이내",
+      "year": "일년 이내"
+    },
     "viewMoreResults": "{{results}}개의 결과 더 보기"
   }
 }
diff --git a/locales/nl-NL/tool.json b/locales/nl-NL/tool.json
index 996bef4d730b9..f13a16b22515c 100644
--- a/locales/nl-NL/tool.json
+++ b/locales/nl-NL/tool.json
@@ -21,8 +21,16 @@
     },
     "searchEngine": "Zoekmachine:",
     "searchResult": "Aantal zoekresultaten:",
+    "searchTimeRange": "Tijdspanne:",
     "summary": "Samenvatting",
     "summaryTooltip": "Samenvatting van de huidige inhoud",
+    "timeRange": {
+      "anytime": "Geen tijdslimiet",
+      "day": "Binnen een dag",
+      "month": "Binnen een maand",
+      "week": "Binnen een week",
+      "year": "Binnen een jaar"
+    },
     "viewMoreResults": "Bekijk meer {{results}} resultaten"
   }
 }
diff --git a/locales/pl-PL/tool.json b/locales/pl-PL/tool.json
index 1a55136eb419e..f5e5b6872c559 100644
--- a/locales/pl-PL/tool.json
+++ b/locales/pl-PL/tool.json
@@ -21,8 +21,16 @@
     },
     "searchEngine": "Silnik wyszukiwania:",
     "searchResult": "Liczba wyników:",
+    "searchTimeRange": "Zakres czasu:",
     "summary": "Podsumowanie",
     "summaryTooltip": "Podsumuj bieżącą treść",
+    "timeRange": {
+      "anytime": "Bez ograniczeń czasowych",
+      "day": "W ciągu jednego dnia",
+      "month": "W ciągu jednego miesiąca",
+      "week": "W ciągu jednego tygodnia",
+      "year": "W ciągu jednego roku"
+    },
     "viewMoreResults": "Zobacz więcej {{results}} wyników"
   }
 }
diff --git a/locales/pt-BR/tool.json b/locales/pt-BR/tool.json
index 90d0599209a3e..c2615a18f2cad 100644
--- a/locales/pt-BR/tool.json
+++ b/locales/pt-BR/tool.json
@@ -21,8 +21,16 @@
     },
     "searchEngine": "Motor de busca:",
     "searchResult": "Número de pesquisas:",
+    "searchTimeRange": "Intervalo de tempo:",
     "summary": "Resumo",
     "summaryTooltip": "Resumir o conteúdo atual",
+    "timeRange": {
+      "anytime": "Sem restrição de tempo",
+      "day": "Dentro de um dia",
+      "month": "Dentro de um mês",
+      "week": "Dentro de uma semana",
+      "year": "Dentro de um ano"
+    },
     "viewMoreResults": "Ver mais {{results}} resultados"
   }
 }
diff --git a/locales/ru-RU/tool.json b/locales/ru-RU/tool.json
index aa187561e7714..80183217bcfe1 100644
--- a/locales/ru-RU/tool.json
+++ b/locales/ru-RU/tool.json
@@ -21,8 +21,16 @@
     },
     "searchEngine": "Поисковая система:",
     "searchResult": "Количество результатов:",
+    "searchTimeRange": "Временной диапазон:",
     "summary": "Резюме",
     "summaryTooltip": "Суммировать текущее содержимое",
+    "timeRange": {
+      "anytime": "Без ограничения по времени",
+      "day": "За день",
+      "month": "За месяц",
+      "week": "За неделю",
+      "year": "За год"
+    },
     "viewMoreResults": "Посмотреть еще {{results}} результатов"
   }
 }
diff --git a/locales/tr-TR/tool.json b/locales/tr-TR/tool.json
index 43d1e4fbb2b1f..c1050c82f317c 100644
--- a/locales/tr-TR/tool.json
+++ b/locales/tr-TR/tool.json
@@ -21,8 +21,16 @@
     },
     "searchEngine": "Arama motoru:",
     "searchResult": "Arama sayısı:",
+    "searchTimeRange": "Zaman aralığı:",
     "summary": "Özet",
     "summaryTooltip": "Mevcut içeriği özetle",
+    "timeRange": {
+      "anytime": "Zaman sınırlı değil",
+      "day": "Bir gün içinde",
+      "month": "Bir ay içinde",
+      "week": "Bir hafta içinde",
+      "year": "Bir yıl içinde"
+    },
     "viewMoreResults": "Daha fazla {{results}} sonuç görüntüle"
   }
 }
diff --git a/locales/vi-VN/tool.json b/locales/vi-VN/tool.json
index 88f63c51e81fd..a6a560869766f 100644
--- a/locales/vi-VN/tool.json
+++ b/locales/vi-VN/tool.json
@@ -21,8 +21,16 @@
     },
     "searchEngine": "Công cụ tìm kiếm:",
     "searchResult": "Số lượng tìm kiếm:",
+    "searchTimeRange": "Khoảng thời gian:",
     "summary": "Tóm tắt",
     "summaryTooltip": "Tóm tắt nội dung hiện tại",
+    "timeRange": {
+      "anytime": "Không giới hạn thời gian",
+      "day": "Trong một ngày",
+      "month": "Trong một tháng",
+      "week": "Trong một tuần",
+      "year": "Trong một năm"
+    },
     "viewMoreResults": "Xem thêm {{results}} kết quả"
   }
 }
diff --git a/locales/zh-CN/tool.json b/locales/zh-CN/tool.json
index ae58008fda2e8..37d46cf3cd572 100644
--- a/locales/zh-CN/tool.json
+++ b/locales/zh-CN/tool.json
@@ -21,8 +21,16 @@
     },
     "searchEngine": "搜索引擎：",
     "searchResult": "搜索数量：",
+    "searchTimeRange": "时间范围：",
     "summary": "总结",
     "summaryTooltip": "总结当前内容",
+    "timeRange": {
+      "anytime": "时间不限",
+      "day": "一天内",
+      "month": "一月内",
+      "week": "一周内",
+      "year": "一年内"
+    },
     "viewMoreResults": "查看更多 {{results}} 个结果"
   }
 }
diff --git a/locales/zh-TW/tool.json b/locales/zh-TW/tool.json
index 8328746021e52..7fcd59accd9da 100644
--- a/locales/zh-TW/tool.json
+++ b/locales/zh-TW/tool.json
@@ -21,8 +21,16 @@
     },
     "searchEngine": "搜尋引擎：",
     "searchResult": "搜尋數量：",
+    "searchTimeRange": "時間範圍：",
     "summary": "總結",
     "summaryTooltip": "總結當前內容",
+    "timeRange": {
+      "anytime": "時間不限",
+      "day": "一天內",
+      "month": "一個月內",
+      "week": "一周內",
+      "year": "一年內"
+    },
     "viewMoreResults": "查看更多 {{results}} 個結果"
   }
 }
diff --git a/src/locales/default/tool.ts b/src/locales/default/tool.ts
index 5bf24f48730c2..e360826843bbf 100644
--- a/src/locales/default/tool.ts
+++ b/src/locales/default/tool.ts
@@ -21,8 +21,16 @@ export default {
     },
     searchEngine: '搜索引擎：',
     searchResult: '搜索数量：',
+    searchTimeRange: '时间范围：',
     summary: '总结',
     summaryTooltip: '总结当前内容',
+    timeRange: {
+      anytime: '时间不限',
+      day: '一天内',
+      month: '一月内',
+      week: '一周内',
+      year: '一年内',
+    },
     viewMoreResults: '查看更多 {{results}} 个结果',
   },
 };
diff --git a/src/server/modules/SearXNG.ts b/src/server/modules/SearXNG.ts
index d2f5872bbce07..d7f8a89ff93f4 100644
--- a/src/server/modules/SearXNG.ts
+++ b/src/server/modules/SearXNG.ts
@@ -10,10 +10,18 @@ export class SearXNGClient {
     this.baseUrl = baseUrl;
   }
 
-  async search(query: string, engines?: string[]): Promise<SearchResponse> {
+  async search(query: string, optionalParams: Record<string, any> = {}): Promise<SearchResponse> {
     try {
+      const { time_range, ...otherParams } = optionalParams;
+
+      const processedParams = Object.entries(otherParams).reduce<Record<string, any>>((acc, [key, value]) => {
+        acc[key] = Array.isArray(value) ? value.join(',') : value;
+        return acc;
+      }, {});
+
       const searchParams = qs.stringify({
-        engines: engines?.join(','),
+        ...processedParams,
+        ...(time_range !== 'anytime' && { time_range }),
         format: 'json',
         q: query,
       });
diff --git a/src/server/routers/tools/__test__/search.test.ts b/src/server/routers/tools/__test__/search.test.ts
index a621f19d93a46..5f8ae428d3ea7 100644
--- a/src/server/routers/tools/__test__/search.test.ts
+++ b/src/server/routers/tools/__test__/search.test.ts
@@ -98,8 +98,10 @@ describe('searchRouter', () => {
       const caller = searchRouter.createCaller(mockContext as any);
 
       const result = await caller.query({
+        optionalParams: {
+          searchEngines: ['google'],
+        },
         query: 'test query',
-        searchEngine: ['google'],
       });
 
       expect(result).toEqual(mockSearchResult);
diff --git a/src/server/routers/tools/search.ts b/src/server/routers/tools/search.ts
index fdefd8025cfa7..ad2fa801b6152 100644
--- a/src/server/routers/tools/search.ts
+++ b/src/server/routers/tools/search.ts
@@ -43,8 +43,11 @@ export const searchRouter = router({
   query: searchProcedure
     .input(
       z.object({
+        optionalParams: z.object({
+          searchEngines: z.array(z.string()).optional(),
+          searchTimeRange: z.string().optional(),
+        }).optional(),
         query: z.string(),
-        searchEngine: z.array(z.string()).optional(),
       }),
     )
     .query(async ({ input }) => {
@@ -55,7 +58,10 @@ export const searchRouter = router({
       const client = new SearXNGClient(toolsEnv.SEARXNG_URL);
 
       try {
-        return await client.search(input.query, input.searchEngine);
+        return await client.search(input.query, {
+          engines: input.optionalParams?.searchEngines,
+          time_range: input.optionalParams?.searchTimeRange,
+        });
       } catch (e) {
         console.error(e);
 
diff --git a/src/services/search.ts b/src/services/search.ts
index 382979b452d31..366664a4a1ec5 100644
--- a/src/services/search.ts
+++ b/src/services/search.ts
@@ -1,8 +1,8 @@
 import { toolsClient } from '@/libs/trpc/client';
 
 class SearchService {
-  search(query: string, searchEngine?: string[]) {
-    return toolsClient.search.query.query({ query, searchEngine });
+  search(query: string, optionalParams?: object) {
+    return toolsClient.search.query.query({ optionalParams, query});
   }
 
   crawlPage(url: string) {
diff --git a/src/store/chat/slices/builtinTool/actions/searXNG.test.ts b/src/store/chat/slices/builtinTool/actions/searXNG.test.ts
index d95215d26dd4a..5ae5acc735ea7 100644
--- a/src/store/chat/slices/builtinTool/actions/searXNG.test.ts
+++ b/src/store/chat/slices/builtinTool/actions/searXNG.test.ts
@@ -72,8 +72,10 @@ describe('searXNG actions', () => {
 
       const messageId = 'test-message-id';
       const query: SearchQuery = {
+        optionalParams: {
+          searchEngines: ['google'],
+        },
         query: 'test query',
-        searchEngines: ['google'],
       };
 
       await act(async () => {
@@ -88,7 +90,9 @@ describe('searXNG actions', () => {
         },
       ];
 
-      expect(searchService.search).toHaveBeenCalledWith('test query', ['google']);
+      expect( searchService.search ).toHaveBeenCalledWith('test query', {
+        searchEngines: [ 'google' ]
+      });
       expect(result.current.searchLoading[messageId]).toBe(false);
       expect(result.current.internal_updateMessageContent).toHaveBeenCalledWith(
         messageId,
@@ -133,6 +137,7 @@ describe('searXNG actions', () => {
       };
 
       (searchService.search as Mock)
+        .mockResolvedValueOnce(emptyResponse)
         .mockResolvedValueOnce(emptyResponse)
         .mockResolvedValueOnce(retryResponse);
 
@@ -141,20 +146,35 @@ describe('searXNG actions', () => {
 
       const messageId = 'test-message-id';
       const query: SearchQuery = {
+        optionalParams: {
+          searchEngines: ['custom-engine'],
+          searchTimeRange: 'year',
+        },
         query: 'test query',
-        searchEngines: ['custom-engine'],
       };
 
       await act(async () => {
         await searchWithSearXNG(messageId, query);
       });
 
-      expect(searchService.search).toHaveBeenCalledTimes(2);
-      expect(searchService.search).toHaveBeenNthCalledWith(1, 'test query', ['custom-engine']);
-      expect(searchService.search).toHaveBeenNthCalledWith(2, 'test query');
+      expect(searchService.search).toHaveBeenCalledTimes(3);
+      expect(searchService.search).toHaveBeenNthCalledWith(1, "test query", {
+          "searchEngines": [ "custom-engine" ],
+          "searchTimeRange": "year",
+      });
+      expect(searchService.search).toHaveBeenNthCalledWith(2, "test query", {
+          "searchTimeRange": "year",
+      });
+      expect(result.current.updatePluginArguments).toHaveBeenCalledWith(messageId, {
+        optionalParams: {
+          "searchTimeRange": "year",
+        },
+        query: 'test query',
+      });
+      expect(searchService.search).toHaveBeenNthCalledWith(3, "test query");
       expect(result.current.updatePluginArguments).toHaveBeenCalledWith(messageId, {
+        optionalParams: undefined,
         query: 'test query',
-        searchEngines: undefined,
       });
     });
 
diff --git a/src/store/chat/slices/builtinTool/actions/searXNG.ts b/src/store/chat/slices/builtinTool/actions/searXNG.ts
index 28b85d9d9573c..f77a0a4828d88 100644
--- a/src/store/chat/slices/builtinTool/actions/searXNG.ts
+++ b/src/store/chat/slices/builtinTool/actions/searXNG.ts
@@ -141,12 +141,26 @@ export const searchSlice: StateCreator<
     get().toggleSearchLoading(id, true);
     let data: SearchResponse | undefined;
     try {
-      data = await searchService.search(params.query, params.searchEngines);
+      // 首次查询
+      data = await searchService.search(params.query, params.optionalParams);
+
+      // 如果没有搜索到结果，则执行第一次重试（移除搜索引擎限制）
+      if (data?.results.length === 0 && params.optionalParams?.searchEngines && params.optionalParams?.searchEngines?.length > 0) {
+        const paramsExcludeSearchEngines = {
+          ...params,
+          optionalParams: {
+            ...params.optionalParams,
+            searchEngines: undefined
+          }
+        };
+        data = await searchService.search(params.query, paramsExcludeSearchEngines.optionalParams);
+        get().updatePluginArguments(id, paramsExcludeSearchEngines);
+      }
 
-      // 如果没有搜索到结果，那么尝试使用默认的搜索引擎再搜一次
-      if (data?.results.length === 0 && params.searchEngines && params.searchEngines?.length > 0) {
+      // 如果仍然没有搜索到结果，则执行第二次重试（移除所有限制）
+      if (data?.results.length === 0) {
         data = await searchService.search(params.query);
-        get().updatePluginArguments(id, { ...params, searchEngines: undefined });
+        get().updatePluginArguments(id, { ...params, optionalParams: undefined });
       }
 
       await get().updatePluginState(id, data);
diff --git a/src/tools/web-browsing/Portal/Search/index.tsx b/src/tools/web-browsing/Portal/Search/index.tsx
index aee6ad968cdb0..5c2f3b37e2cdc 100644
--- a/src/tools/web-browsing/Portal/Search/index.tsx
+++ b/src/tools/web-browsing/Portal/Search/index.tsx
@@ -19,7 +19,7 @@ interface InspectorUIProps {
 
 const Inspector = memo<InspectorUIProps>(({ query: args, messageId, response }) => {
   const engines = uniq((response.results || []).map((result) => result.engine));
-  const defaultEngines = engines.length > 0 ? engines : args.searchEngines || [];
+  const defaultEngines = engines.length > 0 ? engines : args.optionalParams?.searchEngines || [];
   const loading = useChatStore(chatToolSelectors.isSearXNGSearching(messageId));
 
   if (loading) {
diff --git a/src/tools/web-browsing/Render/Search/SearchQuery/index.tsx b/src/tools/web-browsing/Render/Search/SearchQuery/index.tsx
index e55ab51a3525a..a8742552fcaad 100644
--- a/src/tools/web-browsing/Render/Search/SearchQuery/index.tsx
+++ b/src/tools/web-browsing/Render/Search/SearchQuery/index.tsx
@@ -29,7 +29,7 @@ const SearchQueryView = memo<SearchQueryViewProps>(
     const { t } = useTranslation('common');
 
     const engines = uniq(searchResults.map((result) => result.engine));
-    const defaultEngines = engines.length > 0 ? engines : args.searchEngines || [];
+    const defaultEngines = engines.length > 0 ? engines : args.optionalParams?.searchEngines || [];
 
     return !pluginState ? (
       <Flexbox align={'center'} distribution={'space-between'} height={32} horizontal>
diff --git a/src/tools/web-browsing/Render/Search/SearchResult/index.tsx b/src/tools/web-browsing/Render/Search/SearchResult/index.tsx
index 2157afecde1d3..3900823c62bbd 100644
--- a/src/tools/web-browsing/Render/Search/SearchResult/index.tsx
+++ b/src/tools/web-browsing/Render/Search/SearchResult/index.tsx
@@ -32,7 +32,7 @@ const SearchResult = memo<SearchResultProps>(
     const { t } = useTranslation(['tool', 'common']);
 
     const engines = uniq(searchResults.map((result) => result.engine));
-    const defaultEngines = engines.length > 0 ? engines : args.searchEngines || [];
+    const defaultEngines = engines.length > 0 ? engines : args.optionalParams?.searchEngines || [];
     const isMobile = useIsMobile();
 
     if (loading || !pluginState)
diff --git a/src/tools/web-browsing/components/SearchBar.tsx b/src/tools/web-browsing/components/SearchBar.tsx
index 2b630831d207f..849df2063e594 100644
--- a/src/tools/web-browsing/components/SearchBar.tsx
+++ b/src/tools/web-browsing/components/SearchBar.tsx
@@ -1,5 +1,5 @@
 import { Icon, Tooltip } from '@lobehub/ui';
-import { Button, Checkbox, Input, Select, Space, Typography } from 'antd';
+import { Button, Checkbox, Input, Radio, Select, Space, Typography } from 'antd';
 import { SearchIcon } from 'lucide-react';
 import { ReactNode, memo, useState } from 'react';
 import { useTranslation } from 'react-i18next';
@@ -17,6 +17,7 @@ interface SearchBarProps {
   aiSummary?: boolean;
   defaultEngines?: string[];
   defaultQuery: string;
+  defaultTimeRange?: string;
   messageId: string;
   onSearch?: (searchQuery: SearchQuery) => void;
   searchAddon?: ReactNode;
@@ -26,6 +27,7 @@ interface SearchBarProps {
 const SearchBar = memo<SearchBarProps>(
   ({
     defaultEngines = [],
+    defaultTimeRange,
     aiSummary = true,
     defaultQuery,
     tooltip = true,
@@ -37,11 +39,18 @@ const SearchBar = memo<SearchBarProps>(
     const loading = useChatStore(chatToolSelectors.isSearXNGSearching(messageId));
     const [query, setQuery] = useState(defaultQuery);
     const [engines, setEngines] = useState(defaultEngines);
+    const [time_range, setTimeRange] = useState(defaultTimeRange);
     const isMobile = useIsMobile();
     const [reSearchWithSearXNG] = useChatStore((s) => [s.reSearchWithSearXNG]);
 
     const updateAndSearch = async () => {
-      const data: SearchQuery = { query, searchEngines: engines };
+      const data: SearchQuery = {
+        optionalParams: {
+          searchEngines: engines,
+          searchTimeRange: time_range,
+        },
+        query,
+      };
       onSearch?.(data);
       await reSearchWithSearXNG(messageId, data, { aiSummary });
     };
@@ -127,6 +136,24 @@ const SearchBar = memo<SearchBarProps>(
             />
           </Flexbox>
         )}
+
+        <Flexbox align={'center'} gap={16} horizontal wrap={'wrap'}>
+          <Typography.Text type={'secondary'}>
+            {t('search.searchTimeRange')}
+          </Typography.Text>
+          <Radio.Group
+            onChange={(e) => setTimeRange(e.target.value)}
+            optionType="button"
+            options={[
+              { label: t('search.timeRange.anytime'), value: 'anytime' },
+              { label: t('search.timeRange.day'), value: 'day' },
+              { label: t('search.timeRange.week'), value: 'week' },
+              { label: t('search.timeRange.month'), value: 'month' },
+              { label: t('search.timeRange.year'), value: 'year' },
+            ]}
+            value={time_range}
+          />
+        </Flexbox>
       </Flexbox>
     );
   },
diff --git a/src/tools/web-browsing/index.ts b/src/tools/web-browsing/index.ts
index 7e32a75a70932..cdc5d6bf02729 100644
--- a/src/tools/web-browsing/index.ts
+++ b/src/tools/web-browsing/index.ts
@@ -18,37 +18,48 @@ export const WebBrowsingManifest: BuiltinToolManifest = {
       name: WebBrowsingApiName.searchWithSearXNG,
       parameters: {
         properties: {
+          optionalParams: {
+            description: "The optional params you can set:",
+            properties: {
+              searchEngines: {
+                description: 'The search engine you can use:',
+                items: {
+                  enum: [
+                    'google',
+                    'bilibili',
+                    'bing',
+                    'duckduckgo',
+                    'npm',
+                    'pypi',
+                    'github',
+                    'arxiv',
+                    'google scholar',
+                    'z-library',
+                    'reddit',
+                    'imdb',
+                    'brave',
+                    'wikipedia',
+                    'pinterest',
+                    'unsplash',
+                    'vimeo',
+                    'youtube',
+                  ],
+                  type: 'string',
+                },
+                type: 'array',
+              },
+              searchTimeRange: {
+                description: "The time range you can set:",
+                enum: ['anytime', 'day', 'week', 'month', 'year'],
+                type: 'string',
+              },
+            },
+            type: 'object',
+          },
           query: {
             description: 'The search query',
             type: 'string',
           },
-          searchEngines: {
-            description: 'The search engine you can use:',
-            items: {
-              enum: [
-                'google',
-                'bilibili',
-                'bing',
-                'duckduckgo',
-                'npm',
-                'pypi',
-                'github',
-                'arxiv',
-                'google scholar',
-                'z-library',
-                'reddit',
-                'imdb',
-                'brave',
-                'wikipedia',
-                'pinterest',
-                'unsplash',
-                'vimeo',
-                'youtube',
-              ],
-              type: 'string',
-            },
-            type: 'array',
-          },
         },
         required: ['query'],
         type: 'object',
diff --git a/src/tools/web-browsing/systemRole.ts b/src/tools/web-browsing/systemRole.ts
index 1a960d0476fcd..58a54153d6861 100644
--- a/src/tools/web-browsing/systemRole.ts
+++ b/src/tools/web-browsing/systemRole.ts
@@ -33,6 +33,15 @@ Choose search engines based on the query type:
 - For region-specific information, prefer search engines popular in that region
 </search_engine_selection>
 
+<search_time_range_selection>
+Only specify a time range if the query is time-sensitive:
+- For no time restriction: anytime
+- For the latest updates: day
+- For recent developments: week
+- For ongoing trends or updates: month
+- For long-term insights: year
+</search_time_range_selection>
+
 <citation_requirements>
 - Always cite sources using markdown footnote format (e.g., [^1])
 - List all referenced URLs at the end of your response
@@ -84,8 +93,23 @@ SearXNG is a metasearch engine that can leverage multiple search engines includi
      - Search for images: \`!images Wau Holland\`
      - Chain multiple modifiers: \`!map !ddg !wp paris\` (searches for "paris" in the map category, DuckDuckGo, and Wikipedia)
 
+     <search_categories_prefix>
+       - General Information: \`!general query\`
+       - News & Current Events: \`!news query\`
+       - Academic & Scientific Research: \`!science query\`
+       - Tech & IT Queries: \`!it query\`
+       - Images: \`!images query\`
+       - Videos: \`!videos query\`
+       - Geographic & Maps: \`!map query\`
+       - File Searches: \`!files query\`
+       - Social Media & Trends: \`!social_media query\`
+     </search_categories_prefix>
+
   2. Use \`:\` to select language:
      - Search Wikipedia in a specific language: \`:fr !wp Wau Holland\` (uses French)
+
+  3. Use \`site:\` to restrict results to a specific website:
+     - Search SearXNG from a specific website: \`site:github.com SearXNG\`
   </search_syntax>
 </searxng_description>
 
diff --git a/src/types/tool/search.ts b/src/types/tool/search.ts
index 66e7314f2aa66..4e4fccb4f0d7f 100644
--- a/src/types/tool/search.ts
+++ b/src/types/tool/search.ts
@@ -1,6 +1,9 @@
 export interface SearchQuery {
+  optionalParams?: {
+    searchEngines?: string[];
+    searchTimeRange?: string;
+  }
   query: string;
-  searchEngines?: string[];
 }
 
 export const SEARCH_SEARXNG_NOT_CONFIG = 'SearXNG is not configured';
