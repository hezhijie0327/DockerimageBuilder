diff --git a/locales/ar/tool.json b/locales/ar/tool.json
index 5d90399e9f570..3a3ee0602b1cc 100644
--- a/locales/ar/tool.json
+++ b/locales/ar/tool.json
@@ -19,8 +19,28 @@
       "placeholder": "الكلمات الرئيسية",
       "tooltip": "سيتم إعادة الحصول على نتائج البحث، وإنشاء رسالة ملخص جديدة"
     },
-    "searchEngine": "محرك البحث:",
+    "searchCategory": {
+      "placeholder": "ابحث عن الفئة",
+      "title": "فئة البحث:",
+      "value": {
+        "files": "ملفات",
+        "general": "عام",
+        "images": "صور",
+        "it": "تكنولوجيا المعلومات",
+        "map": "خريطة",
+        "music": "موسيقى",
+        "news": "أخبار",
+        "science": "علوم",
+        "social_media": "وسائل التواصل الاجتماعي",
+        "videos": "فيديوهات"
+      }
+    },
+    "searchEngine": {
+      "placeholder": "محرك البحث",
+      "title": "محرك البحث:"
+    },
     "searchResult": "عدد النتائج:",
+    "searchTimeRange": "نطاق الوقت:",
     "summary": "ملخص",
     "summaryTooltip": "تلخيص المحتوى الحالي",
     "viewMoreResults": "عرض المزيد من {{results}} نتيجة"
diff --git a/locales/bg-BG/tool.json b/locales/bg-BG/tool.json
index 5591223d2e9ea..538adea2b1153 100644
--- a/locales/bg-BG/tool.json
+++ b/locales/bg-BG/tool.json
@@ -19,8 +19,28 @@
       "placeholder": "Ключови думи",
       "tooltip": "Ще се извлекат отново резултатите от търсенето и ще се създаде ново резюме"
     },
-    "searchEngine": "Търсачка:",
+    "searchCategory": {
+      "placeholder": "Търсене на категория",
+      "title": "Категория за търсене:",
+      "value": {
+        "files": "Файлове",
+        "general": "Общи",
+        "images": "Снимки",
+        "it": "Информационни технологии",
+        "map": "Карта",
+        "music": "Музика",
+        "news": "Новини",
+        "science": "Наука",
+        "social_media": "Социални медии",
+        "videos": "Видеа"
+      }
+    },
+    "searchEngine": {
+      "placeholder": "Търсачка",
+      "title": "Търсачка:"
+    },
     "searchResult": "Брой резултати:",
+    "searchTimeRange": "Времеви диапазон:",
     "summary": "Резюме",
     "summaryTooltip": "Резюме на текущото съдържание",
     "viewMoreResults": "Вижте още {{results}} резултата"
diff --git a/locales/de-DE/tool.json b/locales/de-DE/tool.json
index 24f5bc750e18d..3265bb369b2a1 100644
--- a/locales/de-DE/tool.json
+++ b/locales/de-DE/tool.json
@@ -19,8 +19,28 @@
       "placeholder": "Schlüsselwörter",
       "tooltip": "Die Suchergebnisse werden erneut abgerufen und eine neue Zusammenfassungsnachricht wird erstellt"
     },
-    "searchEngine": "Suchmaschine:",
+    "searchCategory": {
+      "placeholder": "Kategorie suchen",
+      "title": "Kategorie suchen:",
+      "value": {
+        "files": "Dateien",
+        "general": "Allgemein",
+        "images": "Bilder",
+        "it": "Informationstechnologie",
+        "map": "Karten",
+        "music": "Musik",
+        "news": "Nachrichten",
+        "science": "Wissenschaft",
+        "social_media": "Soziale Medien",
+        "videos": "Videos"
+      }
+    },
+    "searchEngine": {
+      "placeholder": "Suchmaschine",
+      "title": "Suchmaschine:"
+    },
     "searchResult": "Anzahl der Suchergebnisse:",
+    "searchTimeRange": "Zeitspanne:",
     "summary": "Zusammenfassung",
     "summaryTooltip": "Aktuellen Inhalt zusammenfassen",
     "viewMoreResults": "Weitere {{results}} Ergebnisse anzeigen"
diff --git a/locales/en-US/tool.json b/locales/en-US/tool.json
index 0798577aefb42..a173d7c45a935 100644
--- a/locales/en-US/tool.json
+++ b/locales/en-US/tool.json
@@ -19,8 +19,28 @@
       "placeholder": "Keywords",
       "tooltip": "This will refresh the search results and create a new summary message"
     },
-    "searchEngine": "Search engine:",
+    "searchCategory": {
+      "placeholder": "Search Category",
+      "title": "Search Category:",
+      "value": {
+        "files": "Files",
+        "general": "General",
+        "images": "Images",
+        "it": "Information Technology",
+        "map": "Maps",
+        "music": "Music",
+        "news": "News",
+        "science": "Science",
+        "social_media": "Social Media",
+        "videos": "Videos"
+      }
+    },
+    "searchEngine": {
+      "placeholder": "Search Engine",
+      "title": "Search Engine:"
+    },
     "searchResult": "Number of searches:",
+    "searchTimeRange": "Time Range:",
     "summary": "Summary",
     "summaryTooltip": "Summarize the current content",
     "viewMoreResults": "View {{results}} more results"
diff --git a/locales/es-ES/tool.json b/locales/es-ES/tool.json
index ba38af7e6b4c6..c942401277c07 100644
--- a/locales/es-ES/tool.json
+++ b/locales/es-ES/tool.json
@@ -19,8 +19,28 @@
       "placeholder": "Palabras clave",
       "tooltip": "Se volverán a obtener los resultados de búsqueda y se creará un nuevo mensaje de resumen"
     },
-    "searchEngine": "Motor de búsqueda:",
+    "searchCategory": {
+      "placeholder": "Buscar categoría",
+      "title": "Categoría de búsqueda:",
+      "value": {
+        "files": "Archivos",
+        "general": "General",
+        "images": "Imágenes",
+        "it": "Tecnologías de la información",
+        "map": "Mapas",
+        "music": "Música",
+        "news": "Noticias",
+        "science": "Ciencia",
+        "social_media": "Redes sociales",
+        "videos": "Videos"
+      }
+    },
+    "searchEngine": {
+      "placeholder": "Motor de búsqueda",
+      "title": "Motor de búsqueda:"
+    },
     "searchResult": "Número de búsquedas:",
+    "searchTimeRange": "Rango de tiempo:",
     "summary": "Resumen",
     "summaryTooltip": "Resumir el contenido actual",
     "viewMoreResults": "Ver más {{results}} resultados"
diff --git a/locales/fa-IR/tool.json b/locales/fa-IR/tool.json
index f728c1c6c04f4..2b3f4a99962b0 100644
--- a/locales/fa-IR/tool.json
+++ b/locales/fa-IR/tool.json
@@ -19,8 +19,28 @@
       "placeholder": "کلمات کلیدی",
       "tooltip": "نتایج جستجو دوباره دریافت خواهد شد و یک پیام خلاصه جدید ایجاد خواهد شد"
     },
-    "searchEngine": "موتور جستجو:",
+    "searchCategory": {
+      "placeholder": "جستجوی دسته",
+      "title": "دسته جستجو:",
+      "value": {
+        "files": "فایل‌ها",
+        "general": "عمومی",
+        "images": "تصاویر",
+        "it": "فناوری اطلاعات",
+        "map": "نقشه",
+        "music": "موسیقی",
+        "news": "اخبار",
+        "science": "علم",
+        "social_media": "رسانه‌های اجتماعی",
+        "videos": "ویدیوها"
+      }
+    },
+    "searchEngine": {
+      "placeholder": "موتور جستجو",
+      "title": "موتور جستجو:"
+    },
     "searchResult": "تعداد جستجو:",
+    "searchTimeRange": "محدوده زمانی:",
     "summary": "خلاصه",
     "summaryTooltip": "خلاصه محتوای فعلی",
     "viewMoreResults": "مشاهده {{results}} نتیجه بیشتر"
diff --git a/locales/fr-FR/tool.json b/locales/fr-FR/tool.json
index 3aa6bf3ba763c..d7adeb52f4aa2 100644
--- a/locales/fr-FR/tool.json
+++ b/locales/fr-FR/tool.json
@@ -19,8 +19,28 @@
       "placeholder": "Mots-clés",
       "tooltip": "Cela va récupérer à nouveau les résultats de recherche et créer un nouveau message de résumé"
     },
-    "searchEngine": "Moteur de recherche :",
+    "searchCategory": {
+      "placeholder": "Catégorie de recherche",
+      "title": "Catégorie de recherche :",
+      "value": {
+        "files": "Fichiers",
+        "general": "Général",
+        "images": "Images",
+        "it": "Technologies de l'information",
+        "map": "Cartes",
+        "music": "Musique",
+        "news": "Actualités",
+        "science": "Science",
+        "social_media": "Médias sociaux",
+        "videos": "Vidéos"
+      }
+    },
+    "searchEngine": {
+      "placeholder": "Moteur de recherche",
+      "title": "Moteur de recherche :"
+    },
     "searchResult": "Nombre de recherches :",
+    "searchTimeRange": "Plage horaire :",
     "summary": "Résumé",
     "summaryTooltip": "Résumer le contenu actuel",
     "viewMoreResults": "Voir {{results}} résultats supplémentaires"
diff --git a/locales/it-IT/tool.json b/locales/it-IT/tool.json
index 12339bbec0df7..9d4d0248d434d 100644
--- a/locales/it-IT/tool.json
+++ b/locales/it-IT/tool.json
@@ -19,8 +19,28 @@
       "placeholder": "Parole chiave",
       "tooltip": "Ricaricherà i risultati di ricerca e creerà un nuovo messaggio di sintesi"
     },
-    "searchEngine": "Motore di ricerca:",
+    "searchCategory": {
+      "placeholder": "Cerca categoria",
+      "title": "Categoria di ricerca:",
+      "value": {
+        "files": "File",
+        "general": "Generale",
+        "images": "Immagini",
+        "it": "Tecnologia dell'informazione",
+        "map": "Mappa",
+        "music": "Musica",
+        "news": "Notizie",
+        "science": "Scienza",
+        "social_media": "Social media",
+        "videos": "Video"
+      }
+    },
+    "searchEngine": {
+      "placeholder": "Motore di ricerca",
+      "title": "Motore di ricerca:"
+    },
     "searchResult": "Numero di ricerche:",
+    "searchTimeRange": "Intervallo di tempo:",
     "summary": "Riepilogo",
     "summaryTooltip": "Riepiloga il contenuto attuale",
     "viewMoreResults": "Visualizza altri {{results}} risultati"
diff --git a/locales/ja-JP/tool.json b/locales/ja-JP/tool.json
index 30804a81b1602..771bbb98edb07 100644
--- a/locales/ja-JP/tool.json
+++ b/locales/ja-JP/tool.json
@@ -19,8 +19,28 @@
       "placeholder": "キーワード",
       "tooltip": "検索結果を再取得し、新しい要約メッセージを作成します"
     },
-    "searchEngine": "検索エンジン：",
+    "searchCategory": {
+      "placeholder": "カテゴリを検索",
+      "title": "カテゴリを検索：",
+      "value": {
+        "files": "ファイル",
+        "general": "一般",
+        "images": "画像",
+        "it": "情報技術",
+        "map": "地図",
+        "music": "音楽",
+        "news": "ニュース",
+        "science": "科学",
+        "social_media": "ソーシャルメディア",
+        "videos": "動画"
+      }
+    },
+    "searchEngine": {
+      "placeholder": "検索エンジン",
+      "title": "検索エンジン："
+    },
     "searchResult": "検索結果の数：",
+    "searchTimeRange": "時間範囲：",
     "summary": "要約",
     "summaryTooltip": "現在の内容を要約",
     "viewMoreResults": "さらに {{results}} 件の結果を見る"
diff --git a/locales/ko-KR/tool.json b/locales/ko-KR/tool.json
index 510c3ef871f38..2bb70a4a06e6e 100644
--- a/locales/ko-KR/tool.json
+++ b/locales/ko-KR/tool.json
@@ -19,8 +19,28 @@
       "placeholder": "키워드",
       "tooltip": "검색 결과를 다시 가져오고 새로운 요약 메시지를 생성합니다."
     },
-    "searchEngine": "검색 엔진：",
+    "searchCategory": {
+      "placeholder": "카테고리 검색",
+      "title": "카테고리 검색：",
+      "value": {
+        "files": "파일",
+        "general": "일반",
+        "images": "이미지",
+        "it": "정보 기술",
+        "map": "지도",
+        "music": "음악",
+        "news": "뉴스",
+        "science": "과학",
+        "social_media": "소셜 미디어",
+        "videos": "비디오"
+      }
+    },
+    "searchEngine": {
+      "placeholder": "검색 엔진",
+      "title": "검색 엔진："
+    },
     "searchResult": "검색 수：",
+    "searchTimeRange": "시간 범위:",
     "summary": "요약",
     "summaryTooltip": "현재 내용 요약",
     "viewMoreResults": "{{results}}개의 결과 더 보기"
diff --git a/locales/nl-NL/tool.json b/locales/nl-NL/tool.json
index 996bef4d730b9..24e6491aa3841 100644
--- a/locales/nl-NL/tool.json
+++ b/locales/nl-NL/tool.json
@@ -19,8 +19,28 @@
       "placeholder": "Zoekwoorden",
       "tooltip": "De zoekresultaten worden opnieuw opgehaald en er wordt een nieuwe samenvattingsbericht aangemaakt"
     },
-    "searchEngine": "Zoekmachine:",
+    "searchCategory": {
+      "placeholder": "Zoekcategorie",
+      "title": "Zoekcategorie:",
+      "value": {
+        "files": "Bestanden",
+        "general": "Algemeen",
+        "images": "Afbeeldingen",
+        "it": "Informatietechnologie",
+        "map": "Kaart",
+        "music": "Muziek",
+        "news": "Nieuws",
+        "science": "Wetenschap",
+        "social_media": "Sociale media",
+        "videos": "Video's"
+      }
+    },
+    "searchEngine": {
+      "placeholder": "Zoekmachine",
+      "title": "Zoekmachine:"
+    },
     "searchResult": "Aantal zoekresultaten:",
+    "searchTimeRange": "Tijdspanne:",
     "summary": "Samenvatting",
     "summaryTooltip": "Samenvatting van de huidige inhoud",
     "viewMoreResults": "Bekijk meer {{results}} resultaten"
diff --git a/locales/pl-PL/tool.json b/locales/pl-PL/tool.json
index 1a55136eb419e..01641a95d7df1 100644
--- a/locales/pl-PL/tool.json
+++ b/locales/pl-PL/tool.json
@@ -19,8 +19,28 @@
       "placeholder": "Słowa kluczowe",
       "tooltip": "Ponownie pobierze wyniki wyszukiwania i utworzy nową wiadomość podsumowującą"
     },
-    "searchEngine": "Silnik wyszukiwania:",
+    "searchCategory": {
+      "placeholder": "Wyszukaj kategorię",
+      "title": "Kategoria wyszukiwania:",
+      "value": {
+        "files": "Pliki",
+        "general": "Ogólne",
+        "images": "Obrazy",
+        "it": "Technologia informacyjna",
+        "map": "Mapa",
+        "music": "Muzyka",
+        "news": "Aktualności",
+        "science": "Nauka",
+        "social_media": "Media społecznościowe",
+        "videos": "Filmy"
+      }
+    },
+    "searchEngine": {
+      "placeholder": "Silnik wyszukiwania",
+      "title": "Silnik wyszukiwania:"
+    },
     "searchResult": "Liczba wyników:",
+    "searchTimeRange": "Zakres czasu:",
     "summary": "Podsumowanie",
     "summaryTooltip": "Podsumuj bieżącą treść",
     "viewMoreResults": "Zobacz więcej {{results}} wyników"
diff --git a/locales/pt-BR/tool.json b/locales/pt-BR/tool.json
index 90d0599209a3e..3a9e7c5549c69 100644
--- a/locales/pt-BR/tool.json
+++ b/locales/pt-BR/tool.json
@@ -19,8 +19,28 @@
       "placeholder": "Palavras-chave",
       "tooltip": "Isso irá recuperar os resultados da pesquisa novamente e criar uma nova mensagem de resumo"
     },
-    "searchEngine": "Motor de busca:",
+    "searchCategory": {
+      "placeholder": "Pesquisar categoria",
+      "title": "Categoria de pesquisa:",
+      "value": {
+        "files": "Arquivos",
+        "general": "Geral",
+        "images": "Imagens",
+        "it": "Tecnologia da Informação",
+        "map": "Mapa",
+        "music": "Música",
+        "news": "Notícias",
+        "science": "Ciência",
+        "social_media": "Mídias sociais",
+        "videos": "Vídeos"
+      }
+    },
+    "searchEngine": {
+      "placeholder": "Motor de busca",
+      "title": "Motor de busca:"
+    },
     "searchResult": "Número de pesquisas:",
+    "searchTimeRange": "Intervalo de tempo:",
     "summary": "Resumo",
     "summaryTooltip": "Resumir o conteúdo atual",
     "viewMoreResults": "Ver mais {{results}} resultados"
diff --git a/locales/ru-RU/tool.json b/locales/ru-RU/tool.json
index aa187561e7714..2cba98ef570fa 100644
--- a/locales/ru-RU/tool.json
+++ b/locales/ru-RU/tool.json
@@ -19,8 +19,28 @@
       "placeholder": "Ключевые слова",
       "tooltip": "Будет повторно получен результат поиска и создано новое резюме сообщения"
     },
-    "searchEngine": "Поисковая система:",
+    "searchCategory": {
+      "placeholder": "Поиск категории",
+      "title": "Категория поиска:",
+      "value": {
+        "files": "Файлы",
+        "general": "Общее",
+        "images": "Изображения",
+        "it": "Информационные технологии",
+        "map": "Карта",
+        "music": "Музыка",
+        "news": "Новости",
+        "science": "Наука",
+        "social_media": "Социальные медиа",
+        "videos": "Видео"
+      }
+    },
+    "searchEngine": {
+      "placeholder": "Поисковая система",
+      "title": "Поисковая система:"
+    },
     "searchResult": "Количество результатов:",
+    "searchTimeRange": "Временной диапазон:",
     "summary": "Резюме",
     "summaryTooltip": "Суммировать текущее содержимое",
     "viewMoreResults": "Посмотреть еще {{results}} результатов"
diff --git a/locales/tr-TR/tool.json b/locales/tr-TR/tool.json
index 43d1e4fbb2b1f..e62cf370fe7b5 100644
--- a/locales/tr-TR/tool.json
+++ b/locales/tr-TR/tool.json
@@ -19,8 +19,28 @@
       "placeholder": "Anahtar kelime",
       "tooltip": "Arama sonuçları yeniden alınacak ve yeni bir özet mesajı oluşturulacaktır"
     },
-    "searchEngine": "Arama motoru:",
+    "searchCategory": {
+      "placeholder": "Kategori Ara",
+      "title": "Kategori Ara:",
+      "value": {
+        "files": "Dosyalar",
+        "general": "Genel",
+        "images": "Görüntüler",
+        "it": "Bilgi Teknolojisi",
+        "map": "Harita",
+        "music": "Müzik",
+        "news": "Haberler",
+        "science": "Bilim",
+        "social_media": "Sosyal Medya",
+        "videos": "Videolar"
+      }
+    },
+    "searchEngine": {
+      "placeholder": "Arama Motoru",
+      "title": "Arama Motoru:"
+    },
     "searchResult": "Arama sayısı:",
+    "searchTimeRange": "Zaman aralığı:",
     "summary": "Özet",
     "summaryTooltip": "Mevcut içeriği özetle",
     "viewMoreResults": "Daha fazla {{results}} sonuç görüntüle"
diff --git a/locales/vi-VN/tool.json b/locales/vi-VN/tool.json
index 88f63c51e81fd..3c5c196629048 100644
--- a/locales/vi-VN/tool.json
+++ b/locales/vi-VN/tool.json
@@ -19,8 +19,28 @@
       "placeholder": "Từ khóa",
       "tooltip": "Sẽ lấy lại kết quả tìm kiếm và tạo một tin nhắn tóm tắt mới"
     },
-    "searchEngine": "Công cụ tìm kiếm:",
+    "searchCategory": {
+      "placeholder": "Tìm kiếm danh mục",
+      "title": "Danh mục tìm kiếm:",
+      "value": {
+        "files": "Tài liệu",
+        "general": "Chung",
+        "images": "Hình ảnh",
+        "it": "Công nghệ thông tin",
+        "map": "Bản đồ",
+        "music": "Âm nhạc",
+        "news": "Tin tức",
+        "science": "Khoa học",
+        "social_media": "Mạng xã hội",
+        "videos": "Video"
+      }
+    },
+    "searchEngine": {
+      "placeholder": "Công cụ tìm kiếm",
+      "title": "Công cụ tìm kiếm:"
+    },
     "searchResult": "Số lượng tìm kiếm:",
+    "searchTimeRange": "Khoảng thời gian:",
     "summary": "Tóm tắt",
     "summaryTooltip": "Tóm tắt nội dung hiện tại",
     "viewMoreResults": "Xem thêm {{results}} kết quả"
diff --git a/locales/zh-CN/tool.json b/locales/zh-CN/tool.json
index ae58008fda2e8..69c8cbb6ad868 100644
--- a/locales/zh-CN/tool.json
+++ b/locales/zh-CN/tool.json
@@ -19,8 +19,37 @@
       "placeholder": "关键词",
       "tooltip": "将会重新获取搜索结果，并创建一条新的总结消息"
     },
-    "searchEngine": "搜索引擎：",
+    "searchCategory": {
+      "placeholder": "搜索类别",
+      "title": "搜索类别：",
+      "value": {
+        "files": "文件",
+        "general": "通用",
+        "images": "图片",
+        "it": "信息技术",
+        "map": "地图",
+        "music": "音乐",
+        "news": "新闻",
+        "science": "科学",
+        "social_media": "社交媒体",
+        "videos": "视频"
+      }
+    },
+    "searchEngine": {
+      "placeholder": "搜索引擎",
+      "title": "搜索引擎："
+    },
     "searchResult": "搜索数量：",
+    "searchTimeRange": {
+      "title": "时间范围：",
+      "value": {
+        "anytime": "时间不限",
+        "day": "一天内",
+        "month": "一月内",
+        "week": "一周内",
+        "year": "一年内"
+      }
+    },
     "summary": "总结",
     "summaryTooltip": "总结当前内容",
     "viewMoreResults": "查看更多 {{results}} 个结果"
diff --git a/locales/zh-TW/tool.json b/locales/zh-TW/tool.json
index 8328746021e52..16c82368c19cb 100644
--- a/locales/zh-TW/tool.json
+++ b/locales/zh-TW/tool.json
@@ -19,8 +19,28 @@
       "placeholder": "關鍵字",
       "tooltip": "將會重新獲取搜尋結果，並建立一條新的總結消息"
     },
-    "searchEngine": "搜尋引擎：",
+    "searchCategory": {
+      "placeholder": "搜尋類別",
+      "title": "搜尋類別：",
+      "value": {
+        "files": "文件",
+        "general": "通用",
+        "images": "圖片",
+        "it": "資訊科技",
+        "map": "地圖",
+        "music": "音樂",
+        "news": "新聞",
+        "science": "科學",
+        "social_media": "社交媒體",
+        "videos": "影片"
+      }
+    },
+    "searchEngine": {
+      "placeholder": "搜尋引擎",
+      "title": "搜尋引擎："
+    },
     "searchResult": "搜尋數量：",
+    "searchTimeRange": "時間範圍：",
     "summary": "總結",
     "summaryTooltip": "總結當前內容",
     "viewMoreResults": "查看更多 {{results}} 個結果"
diff --git a/src/locales/default/tool.ts b/src/locales/default/tool.ts
index 5bf24f48730c2..a30632f80392e 100644
--- a/src/locales/default/tool.ts
+++ b/src/locales/default/tool.ts
@@ -19,8 +19,37 @@ export default {
       placeholder: '关键词',
       tooltip: '将会重新获取搜索结果，并创建一条新的总结消息',
     },
-    searchEngine: '搜索引擎：',
+    searchCategory: {
+      placeholder: '搜索类别',
+      title: '搜索类别：',
+      value: {
+        'files': '文件',
+        'general': '通用',
+        'images': '图片',
+        'it': '信息技术',
+        'map': '地图',
+        'music': '音乐',
+        'news': '新闻',
+        'science': '科学',
+        'social_media': '社交媒体',
+        'videos': '视频',
+      },
+    },
+    searchEngine: {
+      placeholder: '搜索引擎',
+      title: '搜索引擎：',
+    },
     searchResult: '搜索数量：',
+    searchTimeRange: {
+      title: '时间范围：',
+      value: {
+        anytime: '时间不限',
+        day: '一天内',
+        month: '一月内',
+        week: '一周内',
+        year: '一年内',
+      },
+    },
     summary: '总结',
     summaryTooltip: '总结当前内容',
     viewMoreResults: '查看更多 {{results}} 个结果',
diff --git a/src/server/modules/SearXNG.ts b/src/server/modules/SearXNG.ts
index d2f5872bbce07..d7f8a89ff93f4 100644
--- a/src/server/modules/SearXNG.ts
+++ b/src/server/modules/SearXNG.ts
@@ -10,10 +10,18 @@ export class SearXNGClient {
     this.baseUrl = baseUrl;
   }
 
-  async search(query: string, engines?: string[]): Promise<SearchResponse> {
+  async search(query: string, optionalParams: Record<string, any> = {}): Promise<SearchResponse> {
     try {
+      const { time_range, ...otherParams } = optionalParams;
+
+      const processedParams = Object.entries(otherParams).reduce<Record<string, any>>((acc, [key, value]) => {
+        acc[key] = Array.isArray(value) ? value.join(',') : value;
+        return acc;
+      }, {});
+
       const searchParams = qs.stringify({
-        engines: engines?.join(','),
+        ...processedParams,
+        ...(time_range !== 'anytime' && { time_range }),
         format: 'json',
         q: query,
       });
diff --git a/src/server/routers/tools/__test__/search.test.ts b/src/server/routers/tools/__test__/search.test.ts
index a621f19d93a46..5f8ae428d3ea7 100644
--- a/src/server/routers/tools/__test__/search.test.ts
+++ b/src/server/routers/tools/__test__/search.test.ts
@@ -98,8 +98,10 @@ describe('searchRouter', () => {
       const caller = searchRouter.createCaller(mockContext as any);
 
       const result = await caller.query({
+        optionalParams: {
+          searchEngines: ['google'],
+        },
         query: 'test query',
-        searchEngine: ['google'],
       });
 
       expect(result).toEqual(mockSearchResult);
diff --git a/src/server/routers/tools/search.ts b/src/server/routers/tools/search.ts
index fdefd8025cfa7..47a23caafa698 100644
--- a/src/server/routers/tools/search.ts
+++ b/src/server/routers/tools/search.ts
@@ -43,8 +43,12 @@ export const searchRouter = router({
   query: searchProcedure
     .input(
       z.object({
+        optionalParams: z.object({
+          searchCategories: z.array(z.string()).optional(),
+          searchEngines: z.array(z.string()).optional(),
+          searchTimeRange: z.string().optional(),
+        }).optional(),
         query: z.string(),
-        searchEngine: z.array(z.string()).optional(),
       }),
     )
     .query(async ({ input }) => {
@@ -55,7 +59,11 @@ export const searchRouter = router({
       const client = new SearXNGClient(toolsEnv.SEARXNG_URL);
 
       try {
-        return await client.search(input.query, input.searchEngine);
+        return await client.search(input.query, {
+          categories: input.optionalParams?.searchCategories,
+          engines: input.optionalParams?.searchEngines,
+          time_range: input.optionalParams?.searchTimeRange,
+        });
       } catch (e) {
         console.error(e);
 
diff --git a/src/services/search.ts b/src/services/search.ts
index 382979b452d31..366664a4a1ec5 100644
--- a/src/services/search.ts
+++ b/src/services/search.ts
@@ -1,8 +1,8 @@
 import { toolsClient } from '@/libs/trpc/client';
 
 class SearchService {
-  search(query: string, searchEngine?: string[]) {
-    return toolsClient.search.query.query({ query, searchEngine });
+  search(query: string, optionalParams?: object) {
+    return toolsClient.search.query.query({ optionalParams, query});
   }
 
   crawlPage(url: string) {
diff --git a/src/store/chat/slices/builtinTool/actions/searXNG.test.ts b/src/store/chat/slices/builtinTool/actions/searXNG.test.ts
index d95215d26dd4a..a006c4caf04dc 100644
--- a/src/store/chat/slices/builtinTool/actions/searXNG.test.ts
+++ b/src/store/chat/slices/builtinTool/actions/searXNG.test.ts
@@ -72,8 +72,10 @@ describe('searXNG actions', () => {
 
       const messageId = 'test-message-id';
       const query: SearchQuery = {
+        optionalParams: {
+          searchEngines: ['google'],
+        },
         query: 'test query',
-        searchEngines: ['google'],
       };
 
       await act(async () => {
@@ -82,13 +84,15 @@ describe('searXNG actions', () => {
 
       const expectedContent: SearchContent[] = [
         {
-          content: 'Test Content',
           title: 'Test Result',
           url: 'https://test.com',
+          content: 'Test Content',
         },
       ];
 
-      expect(searchService.search).toHaveBeenCalledWith('test query', ['google']);
+      expect( searchService.search ).toHaveBeenCalledWith('test query', {
+        searchEngines: [ 'google' ]
+      });
       expect(result.current.searchLoading[messageId]).toBe(false);
       expect(result.current.internal_updateMessageContent).toHaveBeenCalledWith(
         messageId,
@@ -133,6 +137,7 @@ describe('searXNG actions', () => {
       };
 
       (searchService.search as Mock)
+        .mockResolvedValueOnce(emptyResponse)
         .mockResolvedValueOnce(emptyResponse)
         .mockResolvedValueOnce(retryResponse);
 
@@ -141,20 +146,35 @@ describe('searXNG actions', () => {
 
       const messageId = 'test-message-id';
       const query: SearchQuery = {
+        optionalParams: {
+          searchEngines: ['custom-engine'],
+          searchTimeRange: 'year',
+        },
         query: 'test query',
-        searchEngines: ['custom-engine'],
       };
 
       await act(async () => {
         await searchWithSearXNG(messageId, query);
       });
 
-      expect(searchService.search).toHaveBeenCalledTimes(2);
-      expect(searchService.search).toHaveBeenNthCalledWith(1, 'test query', ['custom-engine']);
-      expect(searchService.search).toHaveBeenNthCalledWith(2, 'test query');
+      expect(searchService.search).toHaveBeenCalledTimes(3);
+      expect(searchService.search).toHaveBeenNthCalledWith(1, "test query", {
+          "searchEngines": [ "custom-engine" ],
+          "searchTimeRange": "year",
+      });
+      expect(searchService.search).toHaveBeenNthCalledWith(2, "test query", {
+          "searchTimeRange": "year",
+      });
+      expect(result.current.updatePluginArguments).toHaveBeenCalledWith(messageId, {
+        optionalParams: {
+          "searchTimeRange": "year",
+        },
+        query: 'test query',
+      });
+      expect(searchService.search).toHaveBeenNthCalledWith(3, "test query");
       expect(result.current.updatePluginArguments).toHaveBeenCalledWith(messageId, {
+        optionalParams: undefined,
         query: 'test query',
-        searchEngines: undefined,
       });
     });
 
diff --git a/src/store/chat/slices/builtinTool/actions/searXNG.ts b/src/store/chat/slices/builtinTool/actions/searXNG.ts
index 7b6c0b364317f..6612b1a8b2692 100644
--- a/src/store/chat/slices/builtinTool/actions/searXNG.ts
+++ b/src/store/chat/slices/builtinTool/actions/searXNG.ts
@@ -142,12 +142,26 @@ export const searchSlice: StateCreator<
     get().toggleSearchLoading(id, true);
     let data: SearchResponse | undefined;
     try {
-      data = await searchService.search(params.query, params.searchEngines);
+      // 首次查询
+      data = await searchService.search(params.query, params.optionalParams);
+
+      // 如果没有搜索到结果，则执行第一次重试（移除搜索引擎限制）
+      if (data?.results.length === 0 && params.optionalParams?.searchEngines && params.optionalParams?.searchEngines?.length > 0) {
+        const paramsExcludeSearchEngines = {
+          ...params,
+          optionalParams: {
+            ...params.optionalParams,
+            searchEngines: undefined
+          }
+        };
+        data = await searchService.search(params.query, paramsExcludeSearchEngines.optionalParams);
+        get().updatePluginArguments(id, paramsExcludeSearchEngines);
+      }
 
-      // 如果没有搜索到结果，那么尝试使用默认的搜索引擎再搜一次
-      if (data?.results.length === 0 && params.searchEngines && params.searchEngines?.length > 0) {
+      // 如果仍然没有搜索到结果，则执行第二次重试（移除所有限制）
+      if (data?.results.length === 0) {
         data = await searchService.search(params.query);
-        get().updatePluginArguments(id, { ...params, searchEngines: undefined });
+        get().updatePluginArguments(id, { ...params, optionalParams: undefined });
       }
 
       await get().updatePluginState(id, data);
@@ -175,9 +189,12 @@ export const searchSlice: StateCreator<
 
     // add 15 search results to message content
     const searchContent: SearchContent[] = data.results.slice(0, 15).map((item) => ({
-      content: item.content,
       title: item.title,
       url: item.url,
+      ...(item.content && { content: item.content }),
+      ...(item.publishedDate && { publishedDate: item.publishedDate }),
+      ...(item.img_src && { img_src: item.img_src }),
+      ...(item.thumbnail && { thumbnail: item.thumbnail }),
     }));
 
     await get().internal_updateMessageContent(id, JSON.stringify(searchContent));
diff --git a/src/tools/web-browsing/Portal/Search/index.tsx b/src/tools/web-browsing/Portal/Search/index.tsx
index aee6ad968cdb0..5c2f3b37e2cdc 100644
--- a/src/tools/web-browsing/Portal/Search/index.tsx
+++ b/src/tools/web-browsing/Portal/Search/index.tsx
@@ -19,7 +19,7 @@ interface InspectorUIProps {
 
 const Inspector = memo<InspectorUIProps>(({ query: args, messageId, response }) => {
   const engines = uniq((response.results || []).map((result) => result.engine));
-  const defaultEngines = engines.length > 0 ? engines : args.searchEngines || [];
+  const defaultEngines = engines.length > 0 ? engines : args.optionalParams?.searchEngines || [];
   const loading = useChatStore(chatToolSelectors.isSearXNGSearching(messageId));
 
   if (loading) {
diff --git a/src/tools/web-browsing/Render/Search/SearchQuery/SearchView.tsx b/src/tools/web-browsing/Render/Search/SearchQuery/SearchView.tsx
index aed651276ca90..6751ae29334c7 100644
--- a/src/tools/web-browsing/Render/Search/SearchQuery/SearchView.tsx
+++ b/src/tools/web-browsing/Render/Search/SearchQuery/SearchView.tsx
@@ -66,7 +66,7 @@ const SearchBar = memo<SearchBarProps>(
         </Flexbox>
 
         <Flexbox align={'center'} horizontal>
-          <div className={styles.font}>{t('search.searchEngine')}</div>
+          <div className={styles.font}>{t('search.searchEngine.title')}</div>
           {searching ? (
             <Skeleton.Button active size={'small'} />
           ) : (
diff --git a/src/tools/web-browsing/Render/Search/SearchQuery/index.tsx b/src/tools/web-browsing/Render/Search/SearchQuery/index.tsx
index e55ab51a3525a..a8742552fcaad 100644
--- a/src/tools/web-browsing/Render/Search/SearchQuery/index.tsx
+++ b/src/tools/web-browsing/Render/Search/SearchQuery/index.tsx
@@ -29,7 +29,7 @@ const SearchQueryView = memo<SearchQueryViewProps>(
     const { t } = useTranslation('common');
 
     const engines = uniq(searchResults.map((result) => result.engine));
-    const defaultEngines = engines.length > 0 ? engines : args.searchEngines || [];
+    const defaultEngines = engines.length > 0 ? engines : args.optionalParams?.searchEngines || [];
 
     return !pluginState ? (
       <Flexbox align={'center'} distribution={'space-between'} height={32} horizontal>
diff --git a/src/tools/web-browsing/Render/Search/SearchResult/index.tsx b/src/tools/web-browsing/Render/Search/SearchResult/index.tsx
index 2157afecde1d3..3900823c62bbd 100644
--- a/src/tools/web-browsing/Render/Search/SearchResult/index.tsx
+++ b/src/tools/web-browsing/Render/Search/SearchResult/index.tsx
@@ -32,7 +32,7 @@ const SearchResult = memo<SearchResultProps>(
     const { t } = useTranslation(['tool', 'common']);
 
     const engines = uniq(searchResults.map((result) => result.engine));
-    const defaultEngines = engines.length > 0 ? engines : args.searchEngines || [];
+    const defaultEngines = engines.length > 0 ? engines : args.optionalParams?.searchEngines || [];
     const isMobile = useIsMobile();
 
     if (loading || !pluginState)
diff --git a/src/tools/web-browsing/components/CategoryAvatar.tsx b/src/tools/web-browsing/components/CategoryAvatar.tsx
new file mode 100644
index 0000000000000..187a8008eb26f
--- /dev/null
+++ b/src/tools/web-browsing/components/CategoryAvatar.tsx
@@ -0,0 +1,27 @@
+import { Avatar } from 'antd';
+import { useTheme } from 'antd-style';
+import { memo } from 'react';
+
+import { CATEGORY_ICON_MAP } from '../const';
+
+interface CategoryAvatarProps {
+  category: string;
+}
+
+export const CategoryAvatar = memo<CategoryAvatarProps>(({ category }) => {
+  const theme = useTheme();
+  const IconComponent = CATEGORY_ICON_MAP[category];
+
+  return (
+    <Avatar
+      alt={category}
+      icon={<IconComponent />}
+      style={{
+        backgroundColor: 'transparent',
+        color: theme.colorTextSecondary,
+        height: 16,
+        width: 16
+      }}
+    />
+  );
+});
diff --git a/src/tools/web-browsing/components/SearchBar.tsx b/src/tools/web-browsing/components/SearchBar.tsx
index 2b630831d207f..85cbcf1fa152c 100644
--- a/src/tools/web-browsing/components/SearchBar.tsx
+++ b/src/tools/web-browsing/components/SearchBar.tsx
@@ -1,5 +1,5 @@
 import { Icon, Tooltip } from '@lobehub/ui';
-import { Button, Checkbox, Input, Select, Space, Typography } from 'antd';
+import { Button, Checkbox, Input, Radio, Select, Space, Typography } from 'antd';
 import { SearchIcon } from 'lucide-react';
 import { ReactNode, memo, useState } from 'react';
 import { useTranslation } from 'react-i18next';
@@ -10,13 +10,16 @@ import { useChatStore } from '@/store/chat';
 import { chatToolSelectors } from '@/store/chat/selectors';
 import { SearchQuery } from '@/types/tool/search';
 
-import { ENGINE_ICON_MAP } from '../const';
+import { CATEGORY_ICON_MAP, ENGINE_ICON_MAP } from '../const';
+import { CategoryAvatar } from './CategoryAvatar';
 import { EngineAvatar } from './EngineAvatar';
 
 interface SearchBarProps {
   aiSummary?: boolean;
+  defaultCategories?: string[];
   defaultEngines?: string[];
   defaultQuery: string;
+  defaultTimeRange?: string;
   messageId: string;
   onSearch?: (searchQuery: SearchQuery) => void;
   searchAddon?: ReactNode;
@@ -25,7 +28,9 @@ interface SearchBarProps {
 
 const SearchBar = memo<SearchBarProps>(
   ({
+    defaultCategories = [],
     defaultEngines = [],
+    defaultTimeRange,
     aiSummary = true,
     defaultQuery,
     tooltip = true,
@@ -36,12 +41,21 @@ const SearchBar = memo<SearchBarProps>(
     const { t } = useTranslation('tool');
     const loading = useChatStore(chatToolSelectors.isSearXNGSearching(messageId));
     const [query, setQuery] = useState(defaultQuery);
+    const [categories, setCategories] = useState(defaultCategories);
     const [engines, setEngines] = useState(defaultEngines);
+    const [time_range, setTimeRange] = useState(defaultTimeRange);
     const isMobile = useIsMobile();
     const [reSearchWithSearXNG] = useChatStore((s) => [s.reSearchWithSearXNG]);
 
     const updateAndSearch = async () => {
-      const data: SearchQuery = { query, searchEngines: engines };
+      const data: SearchQuery = {
+        optionalParams: {
+          searchCategories: categories,
+          searchEngines: engines,
+          searchTimeRange: time_range,
+        },
+        query,
+      };
       onSearch?.(data);
       await reSearchWithSearXNG(messageId, data, { aiSummary });
     };
@@ -101,6 +115,7 @@ const SearchBar = memo<SearchBarProps>(
               ),
               value: item,
             }))}
+            placeholder={t('search.searchEngine.placeholder')}
             size={'small'}
             value={engines}
             variant={'filled'}
@@ -108,7 +123,7 @@ const SearchBar = memo<SearchBarProps>(
         ) : (
           <Flexbox align={'flex-start'} gap={8} horizontal>
             <Typography.Text style={{ marginTop: 2, wordBreak: 'keep-all' }} type={'secondary'}>
-              {t('search.searchEngine')}
+              {t('search.searchEngine.title')}
             </Typography.Text>
             <Checkbox.Group
               onChange={(checkedValue) => {
@@ -127,6 +142,71 @@ const SearchBar = memo<SearchBarProps>(
             />
           </Flexbox>
         )}
+
+        {isMobile ? (
+          <Select
+            mode="multiple"
+            onChange={(checkedValue) => {
+              setCategories(checkedValue);
+            }}
+            optionRender={(item) => (
+              <Flexbox align={'center'} gap={8} horizontal>
+                <CategoryAvatar category={item.value as string} />
+                {t(`search.searchCategory.value.${item.value}` as any)}
+              </Flexbox>
+            )}
+            options={Object.keys(CATEGORY_ICON_MAP).map((item) => ({
+              label: (
+                <Flexbox align={'center'} gap={8} horizontal>
+                  <CategoryAvatar category={item as any} />
+                  {t(`search.searchCategory.value.${item}` as any)}
+                </Flexbox>
+              ),
+              value: item,
+            }))}
+            placeholder={t('search.searchCategory.placeholder')}
+            size="small"
+            value={categories}
+            variant="filled"
+          />
+        ) : (
+          <Flexbox align="flex-start" gap={8} horizontal>
+            <Typography.Text style={{ marginTop: 2, wordBreak: 'keep-all' }} type={'secondary'}>
+              {t('search.searchCategory.title')}
+            </Typography.Text>
+            <Checkbox.Group
+              onChange={(checkedValue) => setCategories(checkedValue)}
+              options={Object.keys(CATEGORY_ICON_MAP).map((item) => ({
+                label: (
+                  <Flexbox align={'center'} gap={8} horizontal>
+                    <CategoryAvatar category={item as any} />
+                    {t(`search.searchCategory.value.${item}` as any)}
+                  </Flexbox>
+                ),
+                value: item,
+              }))}
+              value={categories}
+            />
+          </Flexbox>
+        )}
+
+        <Flexbox align={'center'} gap={16} horizontal wrap={'wrap'}>
+          <Typography.Text type={'secondary'}>
+            {t('search.searchTimeRange.title')}
+          </Typography.Text>
+          <Radio.Group
+            onChange={(e) => setTimeRange(e.target.value)}
+            optionType="button"
+            options={[
+              { label: t('search.searchTimeRange.value.anytime'), value: 'anytime' },
+              { label: t('search.searchTimeRange.value.day'), value: 'day' },
+              { label: t('search.searchTimeRange.value.week'), value: 'week' },
+              { label: t('search.searchTimeRange.value.month'), value: 'month' },
+              { label: t('search.searchTimeRange.value.year'), value: 'year' },
+            ]}
+            value={time_range}
+          />
+        </Flexbox>
       </Flexbox>
     );
   },
diff --git a/src/tools/web-browsing/const.ts b/src/tools/web-browsing/const.ts
index fd1c45c508a3b..527903afc472e 100644
--- a/src/tools/web-browsing/const.ts
+++ b/src/tools/web-browsing/const.ts
@@ -1,3 +1,29 @@
+import { 
+  CodeIcon,
+  FileIcon,
+  FlaskConicalIcon,
+  ImageIcon,
+  MapIcon,
+  MusicIcon,
+  NewspaperIcon,
+  SearchIcon,
+  Share2Icon,
+  VideoIcon,
+} from 'lucide-react';
+
+export const CATEGORY_ICON_MAP: Record<string, any> = {
+   'files': FileIcon,
+   'general': SearchIcon,
+   'images': ImageIcon,
+   'it': CodeIcon,
+   'map': MapIcon,
+   'music': MusicIcon,
+   'news': NewspaperIcon,
+   'science': FlaskConicalIcon,
+   'social_media': Share2Icon,
+   'videos': VideoIcon,
+};
+
 export const ENGINE_ICON_MAP: Record<string, string> = {
   'arxiv': 'https://icons.duckduckgo.com/ip3/arxiv.org.ico',
   'bilibili': 'https://icons.duckduckgo.com/ip3/bilibili.com.ico',
diff --git a/src/tools/web-browsing/index.ts b/src/tools/web-browsing/index.ts
index 7e32a75a70932..4336de3c8fe75 100644
--- a/src/tools/web-browsing/index.ts
+++ b/src/tools/web-browsing/index.ts
@@ -18,37 +18,67 @@ export const WebBrowsingManifest: BuiltinToolManifest = {
       name: WebBrowsingApiName.searchWithSearXNG,
       parameters: {
         properties: {
+          optionalParams: {
+            description: "The optional parameters for search query",
+            properties: {
+              searchCategories: {
+                description: 'The search categories you can set:',
+                items: {
+                  enum: [
+                    'files',
+                    'general',
+                    'images',
+                    'it',
+                    'map',
+                    'music',
+                    'news',
+                    'science',
+                    'social_media',
+                    'videos',
+                  ],
+                  type: 'string',
+                },
+                type: 'array',
+              },
+              searchEngines: {
+                description: 'The search engines you can use:',
+                items: {
+                  enum: [
+                    'google',
+                    'bilibili',
+                    'bing',
+                    'duckduckgo',
+                    'npm',
+                    'pypi',
+                    'github',
+                    'arxiv',
+                    'google scholar',
+                    'z-library',
+                    'reddit',
+                    'imdb',
+                    'brave',
+                    'wikipedia',
+                    'pinterest',
+                    'unsplash',
+                    'vimeo',
+                    'youtube',
+                  ],
+                  type: 'string',
+                },
+                type: 'array',
+              },
+              searchTimeRange: {
+                description: "The time range you can set:",
+                enum: ['anytime', 'day', 'week', 'month', 'year'],
+                type: 'string',
+              },
+            },
+            type: 'object',
+          },
           query: {
             description: 'The search query',
             type: 'string',
           },
-          searchEngines: {
-            description: 'The search engine you can use:',
-            items: {
-              enum: [
-                'google',
-                'bilibili',
-                'bing',
-                'duckduckgo',
-                'npm',
-                'pypi',
-                'github',
-                'arxiv',
-                'google scholar',
-                'z-library',
-                'reddit',
-                'imdb',
-                'brave',
-                'wikipedia',
-                'pinterest',
-                'unsplash',
-                'vimeo',
-                'youtube',
-              ],
-              type: 'string',
-            },
-            type: 'array',
-          },
         },
         required: ['query'],
         type: 'object',
@@ -77,7 +107,7 @@ export const WebBrowsingManifest: BuiltinToolManifest = {
         properties: {
           urls: {
             items: {
-              description: 'The url need to be crawled',
+              description: 'The urls need to be crawled',
               type: 'string',
             },
             type: 'array',
diff --git a/src/tools/web-browsing/systemRole.ts b/src/tools/web-browsing/systemRole.ts
index 1a960d0476fcd..b4b4bb74c4a3d 100644
--- a/src/tools/web-browsing/systemRole.ts
+++ b/src/tools/web-browsing/systemRole.ts
@@ -22,6 +22,19 @@ export const systemPrompt = (
 - For multi-perspective information or comparative analysis: Use 'crawlMultiPages' on several different relevant sources
 </tool_selection_guidelines>
 
+<search_categories_selection>
+Choose search categories based on query type:
+- General: general
+- News: news
+- Academic & Science: science
+- Technical: it
+- Images: images
+- Videos: videos
+- Geographic & Maps: map
+- Files: files
+- Social Media: social_media
+</search_categories_selection>
+
 <search_engine_selection>
 Choose search engines based on the query type:
 - General knowledge: google, bing, duckduckgo, brave, wikipedia
@@ -30,9 +43,54 @@ Choose search engines based on the query type:
 - Videos: youtube, vimeo, bilibili
 - Images: unsplash, pinterest
 - Entertainment: imdb, reddit
-- For region-specific information, prefer search engines popular in that region
 </search_engine_selection>
 
+<search_time_range_selection>
+Choose time range based on the query type:
+- For no time restriction: anytime
+- For the latest updates: day
+- For recent developments: week
+- For ongoing trends or updates: month
+- For long-term insights: year
+</search_time_range_selection>
+
+<search_strategy_guidelines>
+ - Use engine-based searches when a specific search engine is explicitly required
+ - Use category-based searches when unsure about engine selection
+ - Use time-range filters to prioritize time-sensitive information
+ - Leverage cross-platform meta-search capabilities for comprehensive results
+ - Prioritize authoritative sources in search results when available
+ - For region-specific information, prefer search engines popular in that region
+ - Avoid using both 'engines' and 'categories' in a query, unless the chosen engines do not fall under the selected categories.  
+
+ <search_strategy_best_practices>
+   - Combine categories for multi-faceted queries:
+     * "AI ethics whitepaper PDF" → files + science + general
+     * "Python machine learning tutorial video" → videos + it + science
+     * "Sustainable energy policy analysis" → news + science + general
+
+   - Apply keyword-driven category mapping:
+     * "GitHub repository statistics" → it + files
+     * "Climate change documentary" → videos + science
+     * "Restaurant recommendations Paris" → map + social_media
+
+   - Use file-type targeting for document searches:
+     * "Financial statement xls" → files + news
+     * "Research paper citation RIS" → files + science
+     * "Government policy brief docx" → files + general
+
+   - Region-specific query handling:
+     * "Beijing traffic update" → map + news (engine: baidu)
+     * "Moscow event listings" → social_media + news (engine: yandex)
+     * "Tokyo restaurant reviews" → social_media + map (engine: google)
+
+   - Leverage cross-platform capabilities:
+     * "Open-source project documentation" → files + it (engines: github + pypi)
+     * "Historical weather patterns" → science + general (engines: google scholar + wikipedia)
+     * "Movie release dates 2025" → news + videos (engines: imdb + reddit)
+ </search_strategy_best_practices>
+</search_strategy_guidelines>
+
 <citation_requirements>
 - Always cite sources using markdown footnote format (e.g., [^1])
 - List all referenced URLs at the end of your response
@@ -86,6 +144,9 @@ SearXNG is a metasearch engine that can leverage multiple search engines includi
 
   2. Use \`:\` to select language:
      - Search Wikipedia in a specific language: \`:fr !wp Wau Holland\` (uses French)
+
+  3. Use \`site:\` to restrict results to a specific website:
+     - Search SearXNG from a specific website: \`site:github.com SearXNG\`
   </search_syntax>
 </searxng_description>
 
diff --git a/src/types/tool/search.ts b/src/types/tool/search.ts
index 66e7314f2aa66..bb47c76794533 100644
--- a/src/types/tool/search.ts
+++ b/src/types/tool/search.ts
@@ -1,6 +1,10 @@
 export interface SearchQuery {
+  optionalParams?: {
+    searchCategories?: string[];
+    searchEngines?: string[];
+    searchTimeRange?: string;
+  }
   query: string;
-  searchEngines?: string[];
 }
 
 export const SEARCH_SEARXNG_NOT_CONFIG = 'SearXNG is not configured';
@@ -22,18 +26,23 @@ export interface SearchResult {
   engine: string;
   engines: string[];
   iframe_src?: string;
+  img_src?: string;
   parsed_url: string[];
   positions: number[];
   publishedDate?: string | null;
   score: number;
   template: string;
   thumbnail?: string | null;
+  thumbnail_src?: string | null;
   title: string;
   url: string;
 }
 
 export interface SearchContent {
   content?: string;
+  img_src?: string;
+  publishedDate?: string | null;
+  thumbnail?: string | null;
   title: string;
   url: string;
 }
