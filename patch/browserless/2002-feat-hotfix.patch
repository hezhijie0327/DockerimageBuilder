diff --git a/src/browsers/browsers.cdp.ts b/src/browsers/browsers.cdp.ts
index ea7d3697c4c..cf17a6d5e09 100644
--- a/src/browsers/browsers.cdp.ts
+++ b/src/browsers/browsers.cdp.ts
@@ -11,11 +11,7 @@ import {
   once,
   ublockLitePath,
 } from '@browserless.io/browserless';
-/*
-移除 puppeteer，修复 TS6133
 import puppeteer, { Browser, Page, Target } from 'puppeteer-core';
-*/
-import { Browser, Page, Target } from 'puppeteer-core';
 import { Duplex } from 'stream';
 import { EventEmitter } from 'events';
 import StealthPlugin from 'puppeteer-extra-plugin-stealth';
@@ -40,7 +36,8 @@ export class ChromiumCDP extends EventEmitter {
   protected executablePath = playwright.chromium.executablePath();
 
   constructor({
-    blockAds,
+    // 设置默认 blockAds 为 true
+    blockAds = true,
     config,
     userDataDir,
     logger,
@@ -177,10 +174,8 @@ export class ChromiumCDP extends EventEmitter {
 
   public async launch({
     options,
-    /*
-    移除 stealth，修复 TS6133
-    stealth,
-    */
+    // 设置默认 stealth 为 true
+    stealth = true,
   }: BrowserLauncherOptions): Promise<Browser> {
     this.port = await getPort();
     this.logger.info(`${this.constructor.name} got open port ${this.port}`);
@@ -197,11 +192,7 @@ export class ChromiumCDP extends EventEmitter {
     );
 
     const extensions = [
-      /*
-      忽略 blockAds 并强制启用 uBlock
       this.blockAds ? ublockLitePath : null,
-      */
-      ublockLitePath,
       extensionLaunchArgs ? extensionLaunchArgs.split('=')[1] : null,
     ].filter((_) => !!_);
 
@@ -243,12 +234,9 @@ export class ChromiumCDP extends EventEmitter {
       );
     }
 
-    /* 忽略 stealth，强制开启 stealth 模式
     const launch = stealth
       ? puppeteerStealth.launch.bind(puppeteerStealth)
       : puppeteer.launch.bind(puppeteer);
-    */
-    const launch = puppeteerStealth.launch.bind(puppeteerStealth);
 
     this.logger.info(
       finalOptions,
