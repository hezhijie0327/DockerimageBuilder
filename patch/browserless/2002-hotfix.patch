diff --git a/src/browsers/browsers.cdp.ts b/src/browsers/browsers.cdp.ts
index 6ad579f4f6d..e71eb502044 100644
--- a/src/browsers/browsers.cdp.ts
+++ b/src/browsers/browsers.cdp.ts
@@ -15,9 +15,8 @@ import {
 import puppeteer, { Browser, Page, Target } from 'puppeteer-core';
 import { Duplex } from 'stream';
 import { EventEmitter } from 'events';
-// 引入 adblocker 及 recaptcha 插件
+// 引入 adblocker 插件
 import AdblockPlugin from 'puppeteer-extra-plugin-adblocker';
-import RecaptchaPlugin from 'puppeteer-extra-plugin-recaptcha';
 import StealthPlugin from 'puppeteer-extra-plugin-stealth';
 import getPort from 'get-port';
 import httpProxy from 'http-proxy';
@@ -25,19 +24,6 @@ import path from 'path';
 import playwright from 'playwright-core';
 import puppeteerStealth from 'puppeteer-extra';
 
-// 启用 AdblockPlugin 插件，启用 blockTrackersAndAnnoyances 功能
-puppeteerStealth.use(AdblockPlugin({
-  blockTrackersAndAnnoyances: true,
-  useCache: true,
-}));
-// 启用 RecaptchaPlugin 插件
-puppeteerStealth.use(RecaptchaPlugin({
-  provider: {
-    id: '2captcha',
-    token: process.env.TWOCAPTCHA_API_KEY || '',
-  },
-  visualFeedback: true,
-}));
 puppeteerStealth.use(StealthPlugin());
 
 export class ChromiumCDP extends EventEmitter {
@@ -195,6 +181,14 @@ export class ChromiumCDP extends EventEmitter {
     this.port = await getPort();
     this.logger.info(`${this.constructor.name} got open port ${this.port}`);
 
+    // stealth 模式下，启用 AdblockPlugin 插件，启用 blockTrackersAndAnnoyances 功能
+    if (this.blockAds) {
+      puppeteerStealth.use(AdblockPlugin({
+        blockTrackersAndAnnoyances: true,
+        useCache: true,
+      }));      
+    }
+
     const extensionLaunchArgs = options.args?.find((a) =>
       a.startsWith('--load-extension'),
     );
