diff --git a/src/browsers/browsers.cdp.ts b/src/browsers/browsers.cdp.ts
index c2b36e41769..e0e3a422ae1 100644
--- a/src/browsers/browsers.cdp.ts
+++ b/src/browsers/browsers.cdp.ts
@@ -19,14 +19,26 @@ import puppeteer, { Browser, Page, Target } from 'puppeteer-core';
 import { Browser, Page, Target } from 'puppeteer-core';
 import { Duplex } from 'stream';
 import { EventEmitter } from 'events';
+import AdblockerPlugin from 'puppeteer-extra-plugin-adblocker';
+import RecaptchaPlugin from 'puppeteer-extra-plugin-recaptcha';
 import StealthPlugin from 'puppeteer-extra-plugin-stealth';
 import getPort from 'get-port';
 import httpProxy from 'http-proxy';
 import path from 'path';
 import playwright from 'playwright-core';
-import puppeteerStealth from 'puppeteer-extra';
-
-puppeteerStealth.use(StealthPlugin());
+import puppeteer from 'puppeteer-extra';
+
+// 引入 Adblock 插件
+puppeteer.use(AdblockerPlugin({ blockTrackers: true }));
+// 引入 reChaptcha 插件
+puppeteer.use(RecaptchaPlugin({
+  provider: {
+    id: '2captcha',
+    token: process.env.TWOCAPTCHA_API_KEY || '',
+  },
+  visualFeedback: true
+}));
+puppeteer.use(StealthPlugin());
 
 export class ChromiumCDP extends EventEmitter {
   protected config: Config;
@@ -250,7 +262,7 @@ export class ChromiumCDP extends EventEmitter {
       ? puppeteerStealth.launch.bind(puppeteerStealth)
       : puppeteer.launch.bind(puppeteer);
     */
-    const launch = puppeteerStealth.launch.bind(puppeteerStealth);
+    const launch = puppeteer.launch.bind(puppeteer);
 
     this.logger.info(
       finalOptions,
