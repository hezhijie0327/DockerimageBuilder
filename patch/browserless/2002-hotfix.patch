diff --git a/package.json b/package.json
index 7f49f4ce766..af14fabfcbd 100644
--- a/package.json
+++ b/package.json
@@ -23,7 +23,7 @@
     "build:ts": "tsc",
     "clean": "node scripts/clean.js",
     "dev": "npm run build:dev && env-cmd -f .env node build",
-    "install:adblock": "node scripts/install-adblock.js",
+    "install:adblock": "node scripts/install-adblock.js && node scripts/install-clearurls.js",
     "install:debugger": "node scripts/install-debugger.js",
     "install:browsers": "node node_modules/playwright-core/cli.js install chromium firefox webkit msedge",
     "install:dev": "npm run install:browsers && npm run install:debugger",
diff --git a/scripts/install-clearurls.js b/scripts/install-clearurls.js
new file mode 100644
index 00000000000..ffc387594ca
--- /dev/null
+++ b/scripts/install-clearurls.js
@@ -0,0 +1,52 @@
+#!/usr/bin/env node
+/* global fetch, console, process */
+'use strict';
+
+import { createWriteStream, existsSync, mkdirSync } from 'fs';
+import path, { join } from 'path';
+import { Readable } from 'stream';
+import { deleteAsync } from 'del';
+import { moveFile } from 'move-file';
+import os from 'os';
+import unzip from 'extract-zip';
+
+(async () => {
+  const tmpDir = path.join(os.tmpdir(), '_ublite' + Date.now());
+
+  // Create temporary directory if it doesn't exist
+  if (!existsSync(tmpDir)) {
+    mkdirSync(tmpDir, { recursive: true });
+  }
+
+  const zipFile = tmpDir + '/clearurls.zip';
+  const tmpClearUrlsPath = path.join(tmpDir);
+  const extensionsDir = join(process.cwd(), 'extensions');
+  const clearUrlsDir = join(extensionsDir, 'clearurls');
+
+  const downloadUrlToDirectory = (url, dir) =>
+    fetch(url).then(
+      (response) =>
+        new Promise((resolve, reject) => {
+          // @ts-ignore
+          Readable.fromWeb(response.body)
+            .pipe(createWriteStream(dir))
+            .on('error', reject)
+            .on('finish', resolve);
+        }),
+    );
+
+  if (existsSync(clearUrlsDir)) {
+    await deleteAsync(clearUrlsDir);
+  }
+  const data = await fetch(
+    'https://api.github.com/repos/ClearURLs/Addon/releases/latest',
+  );
+  const json = await data.json();
+
+  await downloadUrlToDirectory(json.assets[0].browser_download_url, zipFile);
+  await unzip(zipFile, { dir: tmpDir });
+  await moveFile(join(tmpClearUrlsPath), join(extensionsDir, 'clearurls'));
+  await deleteAsync(zipFile, { force: true }).catch((err) => {
+    console.warn('Could not delete temporary download file: ' + err.message);
+  });
+})();
diff --git a/src/browsers/browsers.cdp.ts b/src/browsers/browsers.cdp.ts
index e71eb502044..f56d1e2b3a0 100644
--- a/src/browsers/browsers.cdp.ts
+++ b/src/browsers/browsers.cdp.ts
@@ -9,6 +9,7 @@ import {
   edgeExecutablePath,
   noop,
   once,
+  clearUrlsPath,
   privacyBadgerPath,
   ublockLitePath,
 } from '@browserless.io/browserless';
@@ -201,7 +202,8 @@ export class ChromiumCDP extends EventEmitter {
     );
 
     const extensions = [
-      // 引入 Privacy Badger 插件
+      // 引入 Privacy Badger 及 ClearURLs 插件
+      this.blockAds ? clearUrlsPath : null,
       this.blockAds ? privacyBadgerPath : null,
       this.blockAds ? ublockLitePath : null,
       extensionLaunchArgs ? extensionLaunchArgs.split('=')[1] : null,
diff --git a/src/utils.ts b/src/utils.ts
index 90132003a33..db1424e6587 100644
--- a/src/utils.ts
+++ b/src/utils.ts
@@ -905,6 +905,13 @@ export const getCDPClient = (page: Page): CDPSession => {
   return typeof c === 'function' ? c.call(page) : c;
 };
 
+export const clearUrlsPath = path.join(
+  __dirname,
+  '..',
+  'extensions',
+  'clearurls',
+);
+
 export const privacyBadgerPath = path.join(
   __dirname,
   '..',
