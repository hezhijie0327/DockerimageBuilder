# Current Version: 1.4.5

name: Build & Release hezhijie0327/DockerimageBuilder (Package)

on:
  schedule:
    - cron: "0 8,20 * * *" # UTC+8 04:00 / 16:00
  workflow_dispatch:
env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  GHCR_USERNAME: ${{ secrets.GHCR_USERNAME }}
  GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
  DOCKERHUB_NAMESPACE: ${{ secrets.DOCKERHUB_USERNAME }}
  GHCR_NAMESPACE: ghcr.io/${{ secrets.GHCR_USERNAME }}
jobs:
  build:
    strategy:
      matrix:
        package:
          - adguardhome
          - alist
          - cloudflared
          - jellyfin
          - lobechat-database
          - lobechat
          - paradedb
          - qbittorrent
          - searxng
          - siyuan
          - unbound
          - valkey
          - vaultwarden
          - xray
        platform: [amd64, arm64]
    name: Build ${{ matrix.package }} (${{ matrix.platform }})
    runs-on: ${{ matrix.platform == 'arm64' && 'ubuntu-24.04-arm' || 'ubuntu-24.04' }}
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ env.GHCR_USERNAME }}
          password: ${{ env.GHCR_TOKEN }}

      - name: Build image for ${{ matrix.package }} (${{ matrix.platform }})
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./repo/${{ matrix.package }}.dockerfile
          platforms: linux/${{ matrix.platform }}
          push: false
          load: true
          tags: |
            ${{ matrix.package }}:${{ matrix.platform }}

      - name: Export image
        run: docker save ${{ matrix.package }}:${{ matrix.platform }} > ${{ matrix.package }}-${{ matrix.platform }}.tar

      - name: Upload image artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.package }}-${{ matrix.platform }}-image
          path: ${{ matrix.package }}-${{ matrix.platform }}.tar
          retention-days: 1

  merge:
    needs: build
    strategy:
      matrix:
        package:
          - adguardhome
          - alist
          - cloudflared
          - jellyfin
          - lobechat-database
          - lobechat
          - paradedb
          - qbittorrent
          - searxng
          - siyuan
          - unbound
          - valkey
          - vaultwarden
          - xray
    name: Merge ${{ matrix.package }}
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ env.GHCR_USERNAME }}
          password: ${{ env.GHCR_TOKEN }}

      - name: Download ${{ matrix.package }}:amd64 image
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.package }}-amd64-image
          path: ./

      - name: Download ${{ matrix.package }}:arm64 image
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.package }}-arm64-image
          path: ./

      - name: Load ${{ matrix.package }}:amd64 image
        run: docker load < ${{ matrix.package }}-amd64.tar

      - name: Load ${{ matrix.package }}:arm64 image
        run: docker load < ${{ matrix.package }}-arm64.tar

      - name: Create and push DockerHub manifest
        run: |
          docker tag ${{ matrix.package }}:amd64 ${{ env.DOCKERHUB_NAMESPACE }}/${{ matrix.package }}:amd64
          docker tag ${{ matrix.package }}:arm64 ${{ env.DOCKERHUB_NAMESPACE }}/${{ matrix.package }}:arm64

          docker push ${{ env.DOCKERHUB_NAMESPACE }}/${{ matrix.package }}:amd64
          docker push ${{ env.DOCKERHUB_NAMESPACE }}/${{ matrix.package }}:arm64

          docker manifest create ${{ env.DOCKERHUB_NAMESPACE }}/${{ matrix.package }}:latest \
            --amend ${{ env.DOCKERHUB_NAMESPACE }}/${{ matrix.package }}:amd64 \
            --amend ${{ env.DOCKERHUB_NAMESPACE }}/${{ matrix.package }}:arm64
          docker manifest annotate ${{ env.DOCKERHUB_NAMESPACE }}/${{ matrix.package }}:latest \
            ${{ env.DOCKERHUB_NAMESPACE }}/${{ matrix.package }}:amd64 --os linux --arch amd64
          docker manifest annotate ${{ env.DOCKERHUB_NAMESPACE }}/${{ matrix.package }}:latest \
            ${{ env.DOCKERHUB_NAMESPACE }}/${{ matrix.package }}:arm64 --os linux --arch arm64
          docker manifest push --purge ${{ env.DOCKERHUB_NAMESPACE }}/${{ matrix.package }}:latest

      - name: Create and push GHCR manifest
        run: |
          docker tag ${{ matrix.package }}:amd64 ${{ env.GHCR_NAMESPACE }}/${{ matrix.package }}:amd64
          docker tag ${{ matrix.package }}:arm64 ${{ env.GHCR_NAMESPACE }}/${{ matrix.package }}:arm64

          docker push ${{ env.GHCR_NAMESPACE }}/${{ matrix.package }}:amd64
          docker push ${{ env.GHCR_NAMESPACE }}/${{ matrix.package }}:arm64

          docker manifest create ${{ env.GHCR_NAMESPACE }}/${{ matrix.package }}:latest \
            --amend ${{ env.GHCR_NAMESPACE }}/${{ matrix.package }}:amd64 \
            --amend ${{ env.GHCR_NAMESPACE }}/${{ matrix.package }}:arm64
          docker manifest annotate ${{ env.GHCR_NAMESPACE }}/${{ matrix.package }}:latest \
            ${{ env.GHCR_NAMESPACE }}/${{ matrix.package }}:amd64 --os linux --arch amd64
          docker manifest annotate ${{ env.GHCR_NAMESPACE }}/${{ matrix.package }}:latest \
            ${{ env.GHCR_NAMESPACE }}/${{ matrix.package }}:arm64 --os linux --arch arm64
          docker manifest push --purge ${{ env.GHCR_NAMESPACE }}/${{ matrix.package }}:latest
