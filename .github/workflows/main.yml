# Current Version: 1.0.5

name: Build & Release hezhijie0327/DockerimageBuilder

on:
    push:
        branches: [main]
    schedule:
        - cron: "0 0 * * *"

jobs:
    build-base-alpine:
        runs-on: ubuntu-latest
        steps:
            - name: Step 1 - Checkout
              uses: actions/checkout@v3.1.0
            - name: Step 2 - Set up QEMU
              uses: docker/setup-qemu-action@v2.1.0
            - name: Step 3 - Set up Docker Buildx
              uses: docker/setup-buildx-action@v2.2.1
            - name: Step 4 - Login to Docker Hub
              uses: docker/login-action@v2.1.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Step 5 - Build base:alpine
              uses: docker/build-push-action@v3.2.0
              with:
                  file: ./module/base-alpine.dockerfile
                  platforms: linux/amd64, linux/arm64
                  push: true
                  tags: |
                      hezhijie0327/base:alpine
    build-base-package:
        runs-on: ubuntu-latest
        steps:
            - name: Step 1 - Checkout
              uses: actions/checkout@v3.1.0
            - name: Step 2 - Build DockerimageBuilder
              run: |
                  bash ./patch/release.sh
            - name: Step 3 - Release DockerimageBuilder
              run: |
                  curl -s "https://raw.githubusercontent.com/hezhijie0327/Toolkit/main/Git.sh" > "/tmp/Git.sh"
                  sudo bash "/tmp/Git.sh" -u "hezhijie0327" -e "hezhijie0327@hotmail.com" -f "." -r "DockerimageBuilder" -i "Generated by GitHub Actions" -m "push"
    build-base-ubuntu:
        runs-on: ubuntu-latest
        steps:
            - name: Step 1 - Checkout
              uses: actions/checkout@v3.1.0
            - name: Step 2 - Set up QEMU
              uses: docker/setup-qemu-action@v2.1.0
            - name: Step 3 - Set up Docker Buildx
              uses: docker/setup-buildx-action@v2.2.1
            - name: Step 4 - Login to Docker Hub
              uses: docker/login-action@v2.1.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Step 5 - Build base:ubuntu
              uses: docker/build-push-action@v3.2.0
              with:
                  file: ./module/base-ubuntu.dockerfile
                  platforms: linux/amd64, linux/arm64
                  push: true
                  tags: |
                      hezhijie0327/base:ubuntu
    build-binary-dotnet:
        needs: [build-base-alpine, build-base-package]
        runs-on: ubuntu-latest
        steps:
            - name: Step 1 - Checkout
              uses: actions/checkout@v3.1.0
            - name: Step 2 - Set up QEMU
              uses: docker/setup-qemu-action@v2.1.0
            - name: Step 3 - Set up Docker Buildx
              uses: docker/setup-buildx-action@v2.2.1
            - name: Step 4 - Login to Docker Hub
              uses: docker/login-action@v2.1.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Step 5 - Build module:binary-dotnet
              uses: docker/build-push-action@v3.2.0
              with:
                  file: ./module/binary-dotnet.dockerfile
                  platforms: linux/amd64, linux/arm64
                  push: true
                  tags: |
                      hezhijie0327/module:binary-dotnet
    build-binary-golang:
        needs: [build-base-alpine, build-base-package]
        runs-on: ubuntu-latest
        steps:
            - name: Step 1 - Checkout
              uses: actions/checkout@v3.1.0
            - name: Step 2 - Set up QEMU
              uses: docker/setup-qemu-action@v2.1.0
            - name: Step 3 - Set up Docker Buildx
              uses: docker/setup-buildx-action@v2.2.1
            - name: Step 4 - Login to Docker Hub
              uses: docker/login-action@v2.1.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Step 5 - Build module:binary-golang
              uses: docker/build-push-action@v3.2.0
              with:
                  file: ./module/binary-golang.dockerfile
                  platforms: linux/amd64, linux/arm64
                  push: true
                  tags: |
                      hezhijie0327/module:binary-golang
    build-binary-nodejs:
        needs: [build-base-alpine, build-base-package]
        runs-on: ubuntu-latest
        steps:
            - name: Step 1 - Checkout
              uses: actions/checkout@v3.1.0
            - name: Step 2 - Set up QEMU
              uses: docker/setup-qemu-action@v2.1.0
            - name: Step 3 - Set up Docker Buildx
              uses: docker/setup-buildx-action@v2.2.1
            - name: Step 4 - Login to Docker Hub
              uses: docker/login-action@v2.1.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Step 5 - Build module:binary-nodejs
              uses: docker/build-push-action@v3.2.0
              with:
                  file: ./module/binary-nodejs.dockerfile
                  platforms: linux/amd64, linux/arm64
                  push: true
                  tags: |
                      hezhijie0327/module:binary-nodejs
    build-glibc-cares:
        needs: [build-base-alpine, build-base-package, build-base-ubuntu]
        runs-on: ubuntu-latest
        steps:
            - name: Step 1 - Checkout
              uses: actions/checkout@v3.1.0
            - name: Step 2 - Set up QEMU
              uses: docker/setup-qemu-action@v2.1.0
            - name: Step 3 - Set up Docker Buildx
              uses: docker/setup-buildx-action@v2.2.1
            - name: Step 4 - Login to Docker Hub
              uses: docker/login-action@v2.1.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Step 5 - Build module:glibc-cares
              uses: docker/build-push-action@v3.2.0
              with:
                  file: ./module/glibc-cares.dockerfile
                  platforms: linux/amd64, linux/arm64
                  push: true
                  tags: |
                      hezhijie0327/module:glibc-cares
    build-glibc-expat:
        needs: [build-base-alpine, build-base-package, build-base-ubuntu]
        runs-on: ubuntu-latest
        steps:
            - name: Step 1 - Checkout
              uses: actions/checkout@v3.1.0
            - name: Step 2 - Set up QEMU
              uses: docker/setup-qemu-action@v2.1.0
            - name: Step 3 - Set up Docker Buildx
              uses: docker/setup-buildx-action@v2.2.1
            - name: Step 4 - Login to Docker Hub
              uses: docker/login-action@v2.1.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Step 5 - Build module:glibc-expat
              uses: docker/build-push-action@v3.2.0
              with:
                  file: ./module/glibc-expat.dockerfile
                  platforms: linux/amd64, linux/arm64
                  push: true
                  tags: |
                      hezhijie0327/module:glibc-expat
    build-glibc-gperftools:
        needs: [build-base-alpine, build-base-package, build-base-ubuntu]
        runs-on: ubuntu-latest
        steps:
            - name: Step 1 - Checkout
              uses: actions/checkout@v3.1.0
            - name: Step 2 - Set up QEMU
              uses: docker/setup-qemu-action@v2.1.0
            - name: Step 3 - Set up Docker Buildx
              uses: docker/setup-buildx-action@v2.2.1
            - name: Step 4 - Login to Docker Hub
              uses: docker/login-action@v2.1.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Step 5 - Build module:glibc-gperftools
              uses: docker/build-push-action@v3.2.0
              with:
                  file: ./module/glibc-gperftools.dockerfile
                  platforms: linux/amd64, linux/arm64
                  push: true
                  tags: |
                      hezhijie0327/module:glibc-gperftools
    build-glibc-libevent:
        needs: [build-base-alpine, build-base-package, build-base-ubuntu, build-glibc-openssl]
        runs-on: ubuntu-latest
        steps:
            - name: Step 1 - Checkout
              uses: actions/checkout@v3.1.0
            - name: Step 2 - Set up QEMU
              uses: docker/setup-qemu-action@v2.1.0
            - name: Step 3 - Set up Docker Buildx
              uses: docker/setup-buildx-action@v2.2.1
            - name: Step 4 - Login to Docker Hub
              uses: docker/login-action@v2.1.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Step 5 - Build module:glibc-libevent
              uses: docker/build-push-action@v3.2.0
              with:
                  file: ./module/glibc-libevent.dockerfile
                  platforms: linux/amd64, linux/arm64
                  push: true
                  tags: |
                      hezhijie0327/module:glibc-libevent
    build-glibc-libhiredis:
        needs: [build-base-alpine, build-base-package, build-base-ubuntu]
        runs-on: ubuntu-latest
        steps:
            - name: Step 1 - Checkout
              uses: actions/checkout@v3.1.0
            - name: Step 2 - Set up QEMU
              uses: docker/setup-qemu-action@v2.1.0
            - name: Step 3 - Set up Docker Buildx
              uses: docker/setup-buildx-action@v2.2.1
            - name: Step 4 - Login to Docker Hub
              uses: docker/login-action@v2.1.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Step 5 - Build module:glibc-libhiredis
              uses: docker/build-push-action@v3.2.0
              with:
                  file: ./module/glibc-libhiredis.dockerfile
                  platforms: linux/amd64, linux/arm64
                  push: true
                  tags: |
                      hezhijie0327/module:glibc-libhiredis
    build-glibc-libmnl:
        needs: [build-base-alpine, build-base-package, build-base-ubuntu]
        runs-on: ubuntu-latest
        steps:
            - name: Step 1 - Checkout
              uses: actions/checkout@v3.1.0
            - name: Step 2 - Set up QEMU
              uses: docker/setup-qemu-action@v2.1.0
            - name: Step 3 - Set up Docker Buildx
              uses: docker/setup-buildx-action@v2.2.1
            - name: Step 4 - Login to Docker Hub
              uses: docker/login-action@v2.1.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Step 5 - Build module:glibc-libmnl
              uses: docker/build-push-action@v3.2.0
              with:
                  file: ./module/glibc-libmnl.dockerfile
                  platforms: linux/amd64, linux/arm64
                  push: true
                  tags: |
                      hezhijie0327/module:glibc-libmnl
    build-glibc-libsodium:
        needs: [build-base-alpine, build-base-package, build-base-ubuntu]
        runs-on: ubuntu-latest
        steps:
            - name: Step 1 - Checkout
              uses: actions/checkout@v3.1.0
            - name: Step 2 - Set up QEMU
              uses: docker/setup-qemu-action@v2.1.0
            - name: Step 3 - Set up Docker Buildx
              uses: docker/setup-buildx-action@v2.2.1
            - name: Step 4 - Login to Docker Hub
              uses: docker/login-action@v2.1.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Step 5 - Build module:glibc-libsodium
              uses: docker/build-push-action@v3.2.0
              with:
                  file: ./module/glibc-libsodium.dockerfile
                  platforms: linux/amd64, linux/arm64
                  push: true
                  tags: |
                      hezhijie0327/module:glibc-libsodium
    build-glibc-libssh2:
        needs: [build-base-alpine, build-base-package, build-base-ubuntu, build-glibc-openssl]
        runs-on: ubuntu-latest
        steps:
            - name: Step 1 - Checkout
              uses: actions/checkout@v3.1.0
            - name: Step 2 - Set up QEMU
              uses: docker/setup-qemu-action@v2.1.0
            - name: Step 3 - Set up Docker Buildx
              uses: docker/setup-buildx-action@v2.2.1
            - name: Step 4 - Login to Docker Hub
              uses: docker/login-action@v2.1.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Step 5 - Build module:glibc-libssh2
              uses: docker/build-push-action@v3.2.0
              with:
                  file: ./module/glibc-libssh2.dockerfile
                  platforms: linux/amd64, linux/arm64
                  push: true
                  tags: |
                      hezhijie0327/module:glibc-libssh2
    build-glibc-libuv:
        needs: [build-base-alpine, build-base-package, build-base-ubuntu]
        runs-on: ubuntu-latest
        steps:
            - name: Step 1 - Checkout
              uses: actions/checkout@v3.1.0
            - name: Step 2 - Set up QEMU
              uses: docker/setup-qemu-action@v2.1.0
            - name: Step 3 - Set up Docker Buildx
              uses: docker/setup-buildx-action@v2.2.1
            - name: Step 4 - Login to Docker Hub
              uses: docker/login-action@v2.1.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Step 5 - Build module:glibc-libuv
              uses: docker/build-push-action@v3.2.0
              with:
                  file: ./module/glibc-libuv.dockerfile
                  platforms: linux/amd64, linux/arm64
                  push: true
                  tags: |
                      hezhijie0327/module:glibc-libuv
    build-glibc-libnghttp2:
        needs: [build-base-alpine, build-base-package, build-base-ubuntu]
        runs-on: ubuntu-latest
        steps:
            - name: Step 1 - Checkout
              uses: actions/checkout@v3.1.0
            - name: Step 2 - Set up QEMU
              uses: docker/setup-qemu-action@v2.1.0
            - name: Step 3 - Set up Docker Buildx
              uses: docker/setup-buildx-action@v2.2.1
            - name: Step 4 - Login to Docker Hub
              uses: docker/login-action@v2.1.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Step 5 - Build module:glibc-libnghttp2
              uses: docker/build-push-action@v3.2.0
              with:
                  file: ./module/glibc-libnghttp2.dockerfile
                  platforms: linux/amd64, linux/arm64
                  push: true
                  tags: |
                      hezhijie0327/module:glibc-libnghttp2
    build-glibc-ngtcp2:
        needs: [build-base-alpine, build-base-package, build-base-ubuntu, build-glibc-openssl-quic]
        runs-on: ubuntu-latest
        steps:
            - name: Step 1 - Checkout
              uses: actions/checkout@v3.1.0
            - name: Step 2 - Set up QEMU
              uses: docker/setup-qemu-action@v2.1.0
            - name: Step 3 - Set up Docker Buildx
              uses: docker/setup-buildx-action@v2.2.1
            - name: Step 4 - Login to Docker Hub
              uses: docker/login-action@v2.1.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Step 5 - Build module:glibc-ngtcp2
              uses: docker/build-push-action@v3.2.0
              with:
                  file: ./module/glibc-ngtcp2.dockerfile
                  platforms: linux/amd64, linux/arm64
                  push: true
                  tags: |
                      hezhijie0327/module:glibc-ngtcp2
    build-glibc-openssl:
        needs: [build-base-alpine, build-base-package, build-base-ubuntu]
        runs-on: ubuntu-latest
        steps:
            - name: Step 1 - Checkout
              uses: actions/checkout@v3.1.0
            - name: Step 2 - Set up QEMU
              uses: docker/setup-qemu-action@v2.1.0
            - name: Step 3 - Set up Docker Buildx
              uses: docker/setup-buildx-action@v2.2.1
            - name: Step 4 - Login to Docker Hub
              uses: docker/login-action@v2.1.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Step 5 - Build module:glibc-openssl
              uses: docker/build-push-action@v3.2.0
              with:
                  file: ./module/glibc-openssl.dockerfile
                  platforms: linux/amd64, linux/arm64
                  push: true
                  tags: |
                      hezhijie0327/module:glibc-openssl
    build-glibc-openssl-quic:
        needs: [build-base-alpine, build-base-package, build-base-ubuntu]
        runs-on: ubuntu-latest
        steps:
            - name: Step 1 - Checkout
              uses: actions/checkout@v3.1.0
            - name: Step 2 - Set up QEMU
              uses: docker/setup-qemu-action@v2.1.0
            - name: Step 3 - Set up Docker Buildx
              uses: docker/setup-buildx-action@v2.2.1
            - name: Step 4 - Login to Docker Hub
              uses: docker/login-action@v2.1.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Step 5 - Build module:glibc-openssl-quic
              uses: docker/build-push-action@v3.2.0
              with:
                  file: ./module/glibc-openssl_quic.dockerfile
                  platforms: linux/amd64, linux/arm64
                  push: true
                  tags: |
                      hezhijie0327/module:glibc-openssl-quic
    build-glibc-protobufc:
        needs: [build-base-alpine, build-base-package, build-base-ubuntu]
        runs-on: ubuntu-latest
        steps:
            - name: Step 1 - Checkout
              uses: actions/checkout@v3.1.0
            - name: Step 2 - Set up QEMU
              uses: docker/setup-qemu-action@v2.1.0
            - name: Step 3 - Set up Docker Buildx
              uses: docker/setup-buildx-action@v2.2.1
            - name: Step 4 - Login to Docker Hub
              uses: docker/login-action@v2.1.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Step 5 - Build module:glibc-protobufc
              uses: docker/build-push-action@v3.2.0
              with:
                  file: ./module/glibc-protobufc.dockerfile
                  platforms: linux/amd64, linux/arm64
                  push: true
                  tags: |
                      hezhijie0327/module:glibc-protobufc
    build-glibc-sqlite:
        needs: [build-base-alpine, build-base-package, build-base-ubuntu]
        runs-on: ubuntu-latest
        steps:
            - name: Step 1 - Checkout
              uses: actions/checkout@v3.1.0
            - name: Step 2 - Set up QEMU
              uses: docker/setup-qemu-action@v2.1.0
            - name: Step 3 - Set up Docker Buildx
              uses: docker/setup-buildx-action@v2.2.1
            - name: Step 4 - Login to Docker Hub
              uses: docker/login-action@v2.1.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Step 5 - Build module:glibc-sqlite
              uses: docker/build-push-action@v3.2.0
              with:
                  file: ./module/glibc-sqlite.dockerfile
                  platforms: linux/amd64, linux/arm64
                  push: true
                  tags: |
                      hezhijie0327/module:glibc-sqlite
    build-glibc-zlibng:
        needs: [build-base-alpine, build-base-package, build-base-ubuntu]
        runs-on: ubuntu-latest
        steps:
            - name: Step 1 - Checkout
              uses: actions/checkout@v3.1.0
            - name: Step 2 - Set up QEMU
              uses: docker/setup-qemu-action@v2.1.0
            - name: Step 3 - Set up Docker Buildx
              uses: docker/setup-buildx-action@v2.2.1
            - name: Step 4 - Login to Docker Hub
              uses: docker/login-action@v2.1.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Step 5 - Build module:glibc-zlibng
              uses: docker/build-push-action@v3.2.0
              with:
                  file: ./module/glibc-zlibng.dockerfile
                  platforms: linux/amd64, linux/arm64
                  push: true
                  tags: |
                      hezhijie0327/module:glibc-zlibng
    build-musl-boost:
        needs: [build-base-alpine, build-musl-icu]
        runs-on: ubuntu-latest
        steps:
            - name: Step 1 - Checkout
              uses: actions/checkout@v3.1.0
            - name: Step 2 - Set up QEMU
              uses: docker/setup-qemu-action@v2.1.0
            - name: Step 3 - Set up Docker Buildx
              uses: docker/setup-buildx-action@v2.2.1
            - name: Step 4 - Login to Docker Hub
              uses: docker/login-action@v2.1.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Step 5 - Build module:musl-boost
              uses: docker/build-push-action@v3.2.0
              with:
                  file: ./module/musl-boost.dockerfile
                  platforms: linux/amd64, linux/arm64
                  push: true
                  tags: |
                      hezhijie0327/module:musl-boost
    build-musl-iconv:
        needs: [build-base-alpine]
        runs-on: ubuntu-latest
        steps:
            - name: Step 1 - Checkout
              uses: actions/checkout@v3.1.0
            - name: Step 2 - Set up QEMU
              uses: docker/setup-qemu-action@v2.1.0
            - name: Step 3 - Set up Docker Buildx
              uses: docker/setup-buildx-action@v2.2.1
            - name: Step 4 - Login to Docker Hub
              uses: docker/login-action@v2.1.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Step 5 - Build module:musl-iconv
              uses: docker/build-push-action@v3.2.0
              with:
                  file: ./module/musl-iconv.dockerfile
                  platforms: linux/amd64, linux/arm64
                  push: true
                  tags: |
                      hezhijie0327/module:musl-iconv
    build-musl-icu:
        needs: [build-base-alpine]
        runs-on: ubuntu-latest
        steps:
            - name: Step 1 - Checkout
              uses: actions/checkout@v3.1.0
            - name: Step 2 - Set up QEMU
              uses: docker/setup-qemu-action@v2.1.0
            - name: Step 3 - Set up Docker Buildx
              uses: docker/setup-buildx-action@v2.2.1
            - name: Step 4 - Login to Docker Hub
              uses: docker/login-action@v2.1.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Step 5 - Build module:musl-icu
              uses: docker/build-push-action@v3.2.0
              with:
                  file: ./module/musl-icu.dockerfile
                  platforms: linux/amd64, linux/arm64
                  push: true
                  tags: |
                      hezhijie0327/module:musl-icu
    build-musl-libtorrent:
        needs: [build-base-alpine, build-musl-boost, build-musl-iconv, build-musl-ninja, build-musl-openssl]
        runs-on: ubuntu-latest
        steps:
            - name: Step 1 - Checkout
              uses: actions/checkout@v3.1.0
            - name: Step 2 - Set up QEMU
              uses: docker/setup-qemu-action@v2.1.0
            - name: Step 3 - Set up Docker Buildx
              uses: docker/setup-buildx-action@v2.2.1
            - name: Step 4 - Login to Docker Hub
              uses: docker/login-action@v2.1.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Step 5 - Build module:musl-libtorrent
              uses: docker/build-push-action@v3.2.0
              with:
                  file: ./module/musl-libtorrent.dockerfile
                  platforms: linux/amd64, linux/arm64
                  push: true
                  tags: |
                      hezhijie0327/module:musl-libtorrent
    build-musl-ninja:
        needs: [build-base-alpine]
        runs-on: ubuntu-latest
        steps:
            - name: Step 1 - Checkout
              uses: actions/checkout@v3.1.0
            - name: Step 2 - Set up QEMU
              uses: docker/setup-qemu-action@v2.1.0
            - name: Step 3 - Set up Docker Buildx
              uses: docker/setup-buildx-action@v2.2.1
            - name: Step 4 - Login to Docker Hub
              uses: docker/login-action@v2.1.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Step 5 - Build module:musl-ninja
              uses: docker/build-push-action@v3.2.0
              with:
                  file: ./module/musl-ninja.dockerfile
                  platforms: linux/amd64, linux/arm64
                  push: true
                  tags: |
                      hezhijie0327/module:musl-ninja
    build-musl-openssl:
        needs: [build-base-alpine]
        runs-on: ubuntu-latest
        steps:
            - name: Step 1 - Checkout
              uses: actions/checkout@v3.1.0
            - name: Step 2 - Set up QEMU
              uses: docker/setup-qemu-action@v2.1.0
            - name: Step 3 - Set up Docker Buildx
              uses: docker/setup-buildx-action@v2.2.1
            - name: Step 4 - Login to Docker Hub
              uses: docker/login-action@v2.1.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Step 5 - Build module:musl-openssl
              uses: docker/build-push-action@v3.2.0
              with:
                  file: ./module/musl-openssl.dockerfile
                  platforms: linux/amd64, linux/arm64
                  push: true
                  tags: |
                      hezhijie0327/module:musl-openssl
    build-musl-qt:
        needs: [build-base-alpine, build-musl-icu, build-musl-iconv, build-musl-ninja, build-musl-openssl, build-musl-zlibng]
        runs-on: ubuntu-latest
        steps:
            - name: Step 1 - Checkout
              uses: actions/checkout@v3.1.0
            - name: Step 2 - Set up QEMU
              uses: docker/setup-qemu-action@v2.1.0
            - name: Step 3 - Set up Docker Buildx
              uses: docker/setup-buildx-action@v2.2.1
            - name: Step 4 - Login to Docker Hub
              uses: docker/login-action@v2.1.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Step 5 - Build module:musl-qt
              uses: docker/build-push-action@v3.2.0
              with:
                  file: ./module/musl-qt.dockerfile
                  platforms: linux/amd64, linux/arm64
                  push: true
                  tags: |
                      hezhijie0327/module:musl-qt
    build-musl-zlibng:
        needs: [build-base-alpine, build-musl-ninja]
        runs-on: ubuntu-latest
        steps:
            - name: Step 1 - Checkout
              uses: actions/checkout@v3.1.0
            - name: Step 2 - Set up QEMU
              uses: docker/setup-qemu-action@v2.1.0
            - name: Step 3 - Set up Docker Buildx
              uses: docker/setup-buildx-action@v2.2.1
            - name: Step 4 - Login to Docker Hub
              uses: docker/login-action@v2.1.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Step 5 - Build module:musl-zlibng
              uses: docker/build-push-action@v3.2.0
              with:
                  file: ./module/musl-zlibng.dockerfile
                  platforms: linux/amd64, linux/arm64
                  push: true
                  tags: |
                      hezhijie0327/module:musl-zlibng
    build-package-adguardhome:
        needs: [build-base-alpine, build-base-package, build-base-ubuntu]
        runs-on: ubuntu-latest
        steps:
            - name: Step 1 - Checkout
              uses: actions/checkout@v3.1.0
            - name: Step 2 - Set up QEMU
              uses: docker/setup-qemu-action@v2.1.0
            - name: Step 3 - Set up Docker Buildx
              uses: docker/setup-buildx-action@v2.2.1
            - name: Step 4 - Login to Docker Hub
              uses: docker/login-action@v2.1.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Step 5 - Build adguardhome:latest
              uses: docker/build-push-action@v3.2.0
              with:
                  file: ./repo/adguardhome.dockerfile
                  platforms: linux/amd64, linux/arm64
                  push: true
                  tags: |
                      hezhijie0327/adguardhome:latest
    build-package-aria2:
        needs: [build-base-alpine, build-base-package, build-base-ubuntu]
        runs-on: ubuntu-latest
        steps:
            - name: Step 1 - Checkout
              uses: actions/checkout@v3.1.0
            - name: Step 2 - Set up QEMU
              uses: docker/setup-qemu-action@v2.1.0
            - name: Step 3 - Set up Docker Buildx
              uses: docker/setup-buildx-action@v2.2.1
            - name: Step 4 - Login to Docker Hub
              uses: docker/login-action@v2.1.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Step 5 - Build aria2:latest
              uses: docker/build-push-action@v3.2.0
              with:
                  file: ./repo/aria2.dockerfile
                  platforms: linux/amd64, linux/arm64
                  push: true
                  tags: |
                      hezhijie0327/aria2:latest
    build-package-clash:
        needs: [build-base-alpine, build-base-package, build-base-ubuntu]
        runs-on: ubuntu-latest
        steps:
            - name: Step 1 - Checkout
              uses: actions/checkout@v3.1.0
            - name: Step 2 - Set up QEMU
              uses: docker/setup-qemu-action@v2.1.0
            - name: Step 3 - Set up Docker Buildx
              uses: docker/setup-buildx-action@v2.2.1
            - name: Step 4 - Login to Docker Hub
              uses: docker/login-action@v2.1.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Step 5 - Build clash:latest
              uses: docker/build-push-action@v3.2.0
              with:
                  file: ./repo/clash.dockerfile
                  platforms: linux/amd64, linux/arm64
                  push: true
                  tags: |
                      hezhijie0327/clash:latest
    build-package-cloudflareddns:
        needs: [build-base-alpine]
        runs-on: ubuntu-latest
        steps:
            - name: Step 1 - Checkout
              uses: actions/checkout@v3.1.0
            - name: Step 2 - Set up QEMU
              uses: docker/setup-qemu-action@v2.1.0
            - name: Step 3 - Set up Docker Buildx
              uses: docker/setup-buildx-action@v2.2.1
            - name: Step 4 - Login to Docker Hub
              uses: docker/login-action@v2.1.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Step 5 - Build cloudflareddns:latest
              uses: docker/build-push-action@v3.2.0
              with:
                  file: ./repo/cloudflareddns.dockerfile
                  platforms: linux/amd64, linux/arm64
                  push: true
                  tags: |
                      hezhijie0327/cloudflareddns:latest
    build-package-dnsproxy:
        needs: [build-base-alpine, build-base-package, build-base-ubuntu]
        runs-on: ubuntu-latest
        steps:
            - name: Step 1 - Checkout
              uses: actions/checkout@v3.1.0
            - name: Step 2 - Set up QEMU
              uses: docker/setup-qemu-action@v2.1.0
            - name: Step 3 - Set up Docker Buildx
              uses: docker/setup-buildx-action@v2.2.1
            - name: Step 4 - Login to Docker Hub
              uses: docker/login-action@v2.1.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Step 5 - Build dnsproxy:latest
              uses: docker/build-push-action@v3.2.0
              with:
                  file: ./repo/dnsproxy.dockerfile
                  platforms: linux/amd64, linux/arm64
                  push: true
                  tags: |
                      hezhijie0327/dnsproxy:latest
    build-package-jellyfin:
        needs: [build-base-alpine, build-base-package, build-base-ubuntu]
        runs-on: ubuntu-latest
        steps:
            - name: Step 1 - Checkout
              uses: actions/checkout@v3.1.0
            - name: Step 2 - Set up QEMU
              uses: docker/setup-qemu-action@v2.1.0
            - name: Step 3 - Set up Docker Buildx
              uses: docker/setup-buildx-action@v2.2.1
            - name: Step 4 - Login to Docker Hub
              uses: docker/login-action@v2.1.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Step 5 - Build jellyfin:latest
              uses: docker/build-push-action@v3.2.0
              with:
                  file: ./repo/jellyfin.dockerfile
                  platforms: linux/amd64, linux/arm64
                  push: true
                  tags: |
                      hezhijie0327/jellyfin:latest
    build-package-mosdns:
        needs: [build-base-alpine, build-base-package, build-base-ubuntu]
        runs-on: ubuntu-latest
        steps:
            - name: Step 1 - Checkout
              uses: actions/checkout@v3.1.0
            - name: Step 2 - Set up QEMU
              uses: docker/setup-qemu-action@v2.1.0
            - name: Step 3 - Set up Docker Buildx
              uses: docker/setup-buildx-action@v2.2.1
            - name: Step 4 - Login to Docker Hub
              uses: docker/login-action@v2.1.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Step 5 - Build mosdns:latest
              uses: docker/build-push-action@v3.2.0
              with:
                  file: ./repo/mosdns.dockerfile
                  platforms: linux/amd64, linux/arm64
                  push: true
                  tags: |
                      hezhijie0327/mosdns:latest
    build-package-qbittorrent:
        needs: [build-base-alpine]
        runs-on: ubuntu-latest
        steps:
            - name: Step 1 - Checkout
              uses: actions/checkout@v3.1.0
            - name: Step 2 - Set up QEMU
              uses: docker/setup-qemu-action@v2.1.0
            - name: Step 3 - Set up Docker Buildx
              uses: docker/setup-buildx-action@v2.2.1
            - name: Step 4 - Login to Docker Hub
              uses: docker/login-action@v2.1.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Step 5 - Build qbittorrent:latest
              uses: docker/build-push-action@v3.2.0
              with:
                  file: ./repo/qbittorrent.dockerfile
                  platforms: linux/amd64, linux/arm64
                  push: true
                  tags: |
                      hezhijie0327/qbittorrent:latest
    build-package-unbound:
        needs: [build-base-alpine, build-base-package, build-base-ubuntu]
        runs-on: ubuntu-latest
        steps:
            - name: Step 1 - Checkout
              uses: actions/checkout@v3.1.0
            - name: Step 2 - Set up QEMU
              uses: docker/setup-qemu-action@v2.1.0
            - name: Step 3 - Set up Docker Buildx
              uses: docker/setup-buildx-action@v2.2.1
            - name: Step 4 - Login to Docker Hub
              uses: docker/login-action@v2.1.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Step 5 - Build unbound:latest
              uses: docker/build-push-action@v3.2.0
              with:
                  file: ./repo/unbound.dockerfile
                  platforms: linux/amd64, linux/arm64
                  push: true
                  tags: |
                      hezhijie0327/unbound:latest
    build-package-v2ray:
        needs: [build-base-alpine, build-base-package, build-base-ubuntu]
        runs-on: ubuntu-latest
        steps:
            - name: Step 1 - Checkout
              uses: actions/checkout@v3.1.0
            - name: Step 2 - Set up QEMU
              uses: docker/setup-qemu-action@v2.1.0
            - name: Step 3 - Set up Docker Buildx
              uses: docker/setup-buildx-action@v2.2.1
            - name: Step 4 - Login to Docker Hub
              uses: docker/login-action@v2.1.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Step 5 - Build v2ray:latest
              uses: docker/build-push-action@v3.2.0
              with:
                  file: ./repo/v2ray.dockerfile
                  platforms: linux/amd64, linux/arm64
                  push: true
                  tags: |
                      hezhijie0327/v2ray:latest
    build-package-vlmcsd:
        needs: [build-base-alpine]
        runs-on: ubuntu-latest
        steps:
            - name: Step 1 - Checkout
              uses: actions/checkout@v3.1.0
            - name: Step 2 - Set up QEMU
              uses: docker/setup-qemu-action@v2.1.0
            - name: Step 3 - Set up Docker Buildx
              uses: docker/setup-buildx-action@v2.2.1
            - name: Step 4 - Login to Docker Hub
              uses: docker/login-action@v2.1.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Step 5 - Build vlmcsd:latest
              uses: docker/build-push-action@v3.2.0
              with:
                  file: ./repo/vlmcsd.dockerfile
                  platforms: linux/amd64, linux/arm64
                  push: true
                  tags: |
                      hezhijie0327/vlmcsd:latest
