# Current Version: 1.3.6

name: Build & Release hezhijie0327/DockerimageBuilder (Module)

on:
  schedule:
    - cron: "0 4,16 * * *" # UTC+8 00:00 / 12:00
  workflow_dispatch:

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  GHCR_USERNAME: ${{ secrets.GHCR_USERNAME }}
  GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
  DOCKERHUB_NAMESPACE: ${{ secrets.DOCKERHUB_USERNAME }}
  GHCR_NAMESPACE: ghcr.io/${{ secrets.GHCR_USERNAME }}

jobs:
  update:
    continue-on-error: true
    name: Update package.json
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
            bash ./patch/release.sh
      - run: |
            curl -s "https://raw.githubusercontent.com/hezhijie0327/Toolkit/main/Git.sh" > "/tmp/Git.sh"
            sudo bash "/tmp/Git.sh" -u "hezhijie0327" -e "hezhijie0327@hotmail.com" -f "." -r "DockerimageBuilder" -i "Generated by GitHub Actions" -m "push"

  build:
    continue-on-error: true
    needs: update
    strategy:
      fail-fast: false
      matrix:
        package:
          - alpine
          - libexpat
          - libhiredis
          - libmnl
          - libnghttp2
          - libngtcp2
          - libsodium
          - openssl
        platform: [linux/amd64, linux/arm64]
        include:
          - platform: linux/amd64
            os: ubuntu-24.04
          - platform: linux/arm64
            os: ubuntu-24.04-arm
    name: Build ${{ matrix.package }} (${{ matrix.platform }})
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV
          echo "PACKAGE_NAME=${{ matrix.package }}" >> $GITHUB_ENV

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ env.GHCR_USERNAME }}
          password: ${{ env.GHCR_TOKEN }}

      - uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./module/${{ matrix.package }}.dockerfile
          platforms: ${{ matrix.platform }}
          labels: |
            org.opencontainers.image.title=${{ env.PACKAGE_NAME }}
          outputs: type=image,name=${{ env.GHCR_NAMESPACE }}/module,push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PACKAGE_NAME }}-digest-${{ env.PLATFORM_PAIR }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    continue-on-error: false
    needs: build
    strategy:
      fail-fast: false
      matrix:
        package:
          - alpine
          - libexpat
          - libhiredis
          - libmnl
          - libnghttp2
          - libngtcp2
          - libsodium
          - openssl
    name: Merge ${{ matrix.package }}
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ env.GHCR_USERNAME }}
          password: ${{ env.GHCR_TOKEN }}

      - uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: ${{ matrix.package }}-digest-*
          merge-multiple: true

      - name: Create and push GHCR manifest
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create -t ${{ env.GHCR_NAMESPACE }}/module:${{ matrix.package }} \
            $(printf '${{ env.GHCR_NAMESPACE }}/module@sha256:%s ' *)

      - name: Create and push Docker Hub manifest
        working-directory: /tmp/digests
        run: |
          for digest in *; do
            docker buildx imagetools create -t ${{ env.DOCKERHUB_NAMESPACE }}/module@sha256:${digest} \
              ${{ env.GHCR_NAMESPACE }}/module@sha256:${digest}
          done

          docker buildx imagetools create -t ${{ env.DOCKERHUB_NAMESPACE }}/module:${{ matrix.package }} \
            $(printf '${{ env.DOCKERHUB_NAMESPACE }}/module@sha256:%s ' *)
