# Current Version: 1.0.1

name: Build & Push hezhijie0327/DockerimageBuilder/module

on:
    push:
        branches: [main]
    schedule:
        - cron: "0 0 * * *"

jobs:
    build-binary-golang:
        runs-on: ubuntu-latest
        steps:
            - name: Step 1 - Checkout
              uses: actions/checkout@v3.0.0
            - name: Step 2 - Set up QEMU
              uses: docker/setup-qemu-action@v1.2.0
            - name: Step 3 - Set up Docker Buildx
              uses: docker/setup-buildx-action@v1.6.0
            - name: Step 4 - Login to Docker Hub
              uses: docker/login-action@v1.10.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Step 5 - Build module:binary-golang
              uses: docker/build-push-action@v2.10.0
              with:
                  file: ./module/binary-golang.dockerfile
                  platforms: linux/amd64, linux/arm64
                  push: true
                  tags: |
                      hezhijie0327/module:binary-golang
    build-binary-nodejs:
        runs-on: ubuntu-latest
        steps:
            - name: Step 1 - Checkout
              uses: actions/checkout@v3.0.0
            - name: Step 2 - Set up QEMU
              uses: docker/setup-qemu-action@v1.2.0
            - name: Step 3 - Set up Docker Buildx
              uses: docker/setup-buildx-action@v1.6.0
            - name: Step 4 - Login to Docker Hub
              uses: docker/login-action@v1.10.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Step 5 - Build module:binary-nodejs
              uses: docker/build-push-action@v2.10.0
              with:
                  file: ./module/binary-nodejs.dockerfile
                  platforms: linux/amd64, linux/arm64
                  push: true
                  tags: |
                      hezhijie0327/module:binary-nodejs
    build-glibc-cares:
        runs-on: ubuntu-latest
        steps:
            - name: Step 1 - Checkout
              uses: actions/checkout@v3.0.0
            - name: Step 2 - Set up QEMU
              uses: docker/setup-qemu-action@v1.2.0
            - name: Step 3 - Set up Docker Buildx
              uses: docker/setup-buildx-action@v1.6.0
            - name: Step 4 - Login to Docker Hub
              uses: docker/login-action@v1.10.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Step 5 - Build module:glibc-cares
              uses: docker/build-push-action@v2.10.0
              with:
                  file: ./module/glibc-cares.dockerfile
                  platforms: linux/amd64, linux/arm64
                  push: true
                  tags: |
                      hezhijie0327/module:glibc-cares
    build-glibc-expat:
        runs-on: ubuntu-latest
        steps:
            - name: Step 1 - Checkout
              uses: actions/checkout@v3.0.0
            - name: Step 2 - Set up QEMU
              uses: docker/setup-qemu-action@v1.2.0
            - name: Step 3 - Set up Docker Buildx
              uses: docker/setup-buildx-action@v1.6.0
            - name: Step 4 - Login to Docker Hub
              uses: docker/login-action@v1.10.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Step 5 - Build module:glibc-expat
              uses: docker/build-push-action@v2.10.0
              with:
                  file: ./module/glibc-expat.dockerfile
                  platforms: linux/amd64, linux/arm64
                  push: true
                  tags: |
                      hezhijie0327/module:glibc-expat
    build-glibc-gperftools:
        runs-on: ubuntu-latest
        steps:
            - name: Step 1 - Checkout
              uses: actions/checkout@v3.0.0
            - name: Step 2 - Set up QEMU
              uses: docker/setup-qemu-action@v1.2.0
            - name: Step 3 - Set up Docker Buildx
              uses: docker/setup-buildx-action@v1.6.0
            - name: Step 4 - Login to Docker Hub
              uses: docker/login-action@v1.10.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Step 5 - Build module:glibc-gperftools
              uses: docker/build-push-action@v2.10.0
              with:
                  file: ./module/glibc-gperftools.dockerfile
                  platforms: linux/amd64, linux/arm64
                  push: true
                  tags: |
                      hezhijie0327/module:glibc-gperftools
    build-glibc-libssh2:
        needs: [build-glibc-openssl]
        runs-on: ubuntu-latest
        steps:
            - name: Step 1 - Checkout
              uses: actions/checkout@v3.0.0
            - name: Step 2 - Set up QEMU
              uses: docker/setup-qemu-action@v1.2.0
            - name: Step 3 - Set up Docker Buildx
              uses: docker/setup-buildx-action@v1.6.0
            - name: Step 4 - Login to Docker Hub
              uses: docker/login-action@v1.10.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Step 5 - Build module:glibc-libssh2
              uses: docker/build-push-action@v2.10.0
              with:
                  file: ./module/glibc-libssh2.dockerfile
                  platforms: linux/amd64, linux/arm64
                  push: true
                  tags: |
                      hezhijie0327/module:glibc-libssh2
    build-glibc-libuv:
        runs-on: ubuntu-latest
        steps:
            - name: Step 1 - Checkout
              uses: actions/checkout@v3.0.0
            - name: Step 2 - Set up QEMU
              uses: docker/setup-qemu-action@v1.2.0
            - name: Step 3 - Set up Docker Buildx
              uses: docker/setup-buildx-action@v1.6.0
            - name: Step 4 - Login to Docker Hub
              uses: docker/login-action@v1.10.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Step 5 - Build module:glibc-libuv
              uses: docker/build-push-action@v2.10.0
              with:
                  file: ./module/glibc-libuv.dockerfile
                  platforms: linux/amd64, linux/arm64
                  push: true
                  tags: |
                      hezhijie0327/module:glibc-libuv
    build-glibc-openssl:
        runs-on: ubuntu-latest
        steps:
            - name: Step 1 - Checkout
              uses: actions/checkout@v3.0.0
            - name: Step 2 - Set up QEMU
              uses: docker/setup-qemu-action@v1.2.0
            - name: Step 3 - Set up Docker Buildx
              uses: docker/setup-buildx-action@v1.6.0
            - name: Step 4 - Login to Docker Hub
              uses: docker/login-action@v1.10.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Step 5 - Build module:glibc-openssl
              uses: docker/build-push-action@v2.10.0
              with:
                  file: ./module/glibc-openssl.dockerfile
                  platforms: linux/amd64, linux/arm64
                  push: true
                  tags: |
                      hezhijie0327/module:glibc-openssl
    build-glibc-sqlite:
        runs-on: ubuntu-latest
        steps:
            - name: Step 1 - Checkout
              uses: actions/checkout@v3.0.0
            - name: Step 2 - Set up QEMU
              uses: docker/setup-qemu-action@v1.2.0
            - name: Step 3 - Set up Docker Buildx
              uses: docker/setup-buildx-action@v1.6.0
            - name: Step 4 - Login to Docker Hub
              uses: docker/login-action@v1.10.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Step 5 - Build module:glibc-sqlite
              uses: docker/build-push-action@v2.10.0
              with:
                  file: ./module/glibc-sqlite.dockerfile
                  platforms: linux/amd64, linux/arm64
                  push: true
                  tags: |
                      hezhijie0327/module:glibc-sqlite
    build-glibc-zlibng:
        runs-on: ubuntu-latest
        steps:
            - name: Step 1 - Checkout
              uses: actions/checkout@v3.0.0
            - name: Step 2 - Set up QEMU
              uses: docker/setup-qemu-action@v1.2.0
            - name: Step 3 - Set up Docker Buildx
              uses: docker/setup-buildx-action@v1.6.0
            - name: Step 4 - Login to Docker Hub
              uses: docker/login-action@v1.10.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Step 5 - Build module:glibc-zlibng
              uses: docker/build-push-action@v2.10.0
              with:
                  file: ./module/glibc-zlibng.dockerfile
                  platforms: linux/amd64, linux/arm64
                  push: true
                  tags: |
                      hezhijie0327/module:glibc-zlibng
    build-musl-boost:
        needs: [build-musl-icu]
        runs-on: ubuntu-latest
        steps:
            - name: Step 1 - Checkout
              uses: actions/checkout@v3.0.0
            - name: Step 2 - Set up QEMU
              uses: docker/setup-qemu-action@v1.2.0
            - name: Step 3 - Set up Docker Buildx
              uses: docker/setup-buildx-action@v1.6.0
            - name: Step 4 - Login to Docker Hub
              uses: docker/login-action@v1.10.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Step 5 - Build module:musl-boost
              uses: docker/build-push-action@v2.10.0
              with:
                  file: ./module/musl-boost.dockerfile
                  platforms: linux/amd64, linux/arm64
                  push: true
                  tags: |
                      hezhijie0327/module:musl-boost
    build-musl-icu:
        runs-on: ubuntu-latest
        steps:
            - name: Step 1 - Checkout
              uses: actions/checkout@v3.0.0
            - name: Step 2 - Set up QEMU
              uses: docker/setup-qemu-action@v1.2.0
            - name: Step 3 - Set up Docker Buildx
              uses: docker/setup-buildx-action@v1.6.0
            - name: Step 4 - Login to Docker Hub
              uses: docker/login-action@v1.10.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Step 5 - Build module:musl-icu
              uses: docker/build-push-action@v2.10.0
              with:
                  file: ./module/musl-icu.dockerfile
                  platforms: linux/amd64, linux/arm64
                  push: true
                  tags: |
                      hezhijie0327/module:musl-icu
    build-musl-libexecinfo:
        runs-on: ubuntu-latest
        steps:
            - name: Step 1 - Checkout
              uses: actions/checkout@v3.0.0
            - name: Step 2 - Set up QEMU
              uses: docker/setup-qemu-action@v1.2.0
            - name: Step 3 - Set up Docker Buildx
              uses: docker/setup-buildx-action@v1.6.0
            - name: Step 4 - Login to Docker Hub
              uses: docker/login-action@v1.10.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Step 5 - Build module:musl-libexecinfo
              uses: docker/build-push-action@v2.10.0
              with:
                  file: ./module/musl-libexecinfo.dockerfile
                  platforms: linux/amd64, linux/arm64
                  push: true
                  tags: |
                      hezhijie0327/module:musl-libexecinfo
    build-musl-libtorrent:
        needs: [build-musl-boost, build-musl-ninja, build-musl-openssl]
        runs-on: ubuntu-latest
        steps:
            - name: Step 1 - Checkout
              uses: actions/checkout@v3.0.0
            - name: Step 2 - Set up QEMU
              uses: docker/setup-qemu-action@v1.2.0
            - name: Step 3 - Set up Docker Buildx
              uses: docker/setup-buildx-action@v1.6.0
            - name: Step 4 - Login to Docker Hub
              uses: docker/login-action@v1.10.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Step 5 - Build module:musl-libtorrent
              uses: docker/build-push-action@v2.10.0
              with:
                  file: ./module/musl-libtorrent.dockerfile
                  platforms: linux/amd64, linux/arm64
                  push: true
                  tags: |
                      hezhijie0327/module:musl-libtorrent
    build-musl-ninja:
        runs-on: ubuntu-latest
        steps:
            - name: Step 1 - Checkout
              uses: actions/checkout@v3.0.0
            - name: Step 2 - Set up QEMU
              uses: docker/setup-qemu-action@v1.2.0
            - name: Step 3 - Set up Docker Buildx
              uses: docker/setup-buildx-action@v1.6.0
            - name: Step 4 - Login to Docker Hub
              uses: docker/login-action@v1.10.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Step 5 - Build module:musl-ninja
              uses: docker/build-push-action@v2.10.0
              with:
                  file: ./module/musl-ninja.dockerfile
                  platforms: linux/amd64, linux/arm64
                  push: true
                  tags: |
                      hezhijie0327/module:musl-ninja
    build-musl-openssl:
        runs-on: ubuntu-latest
        steps:
            - name: Step 1 - Checkout
              uses: actions/checkout@v3.0.0
            - name: Step 2 - Set up QEMU
              uses: docker/setup-qemu-action@v1.2.0
            - name: Step 3 - Set up Docker Buildx
              uses: docker/setup-buildx-action@v1.6.0
            - name: Step 4 - Login to Docker Hub
              uses: docker/login-action@v1.10.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Step 5 - Build module:musl-openssl
              uses: docker/build-push-action@v2.10.0
              with:
                  file: ./module/musl-openssl.dockerfile
                  platforms: linux/amd64, linux/arm64
                  push: true
                  tags: |
                      hezhijie0327/module:musl-openssl
    build-musl-qtbase:
        needs: [build-musl-icu, build-musl-libexecinfo, build-musl-ninja, build-musl-openssl]
        runs-on: ubuntu-latest
        steps:
            - name: Step 1 - Checkout
              uses: actions/checkout@v3.0.0
            - name: Step 2 - Set up QEMU
              uses: docker/setup-qemu-action@v1.2.0
            - name: Step 3 - Set up Docker Buildx
              uses: docker/setup-buildx-action@v1.6.0
            - name: Step 4 - Login to Docker Hub
              uses: docker/login-action@v1.10.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Step 5 - Build module:musl-qtbase
              uses: docker/build-push-action@v2.10.0
              with:
                  file: ./module/musl-qtbase.dockerfile
                  platforms: linux/amd64, linux/arm64
                  push: true
                  tags: |
                      hezhijie0327/module:musl-qtbase
    build-musl-qttools:
        needs: [build-musl-qtbase, build-musl-ninja]
        runs-on: ubuntu-latest
        steps:
            - name: Step 1 - Checkout
              uses: actions/checkout@v3.0.0
            - name: Step 2 - Set up QEMU
              uses: docker/setup-qemu-action@v1.2.0
            - name: Step 3 - Set up Docker Buildx
              uses: docker/setup-buildx-action@v1.6.0
            - name: Step 4 - Login to Docker Hub
              uses: docker/login-action@v1.10.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Step 5 - Build module:musl-qttools
              uses: docker/build-push-action@v2.10.0
              with:
                  file: ./module/musl-qttools.dockerfile
                  platforms: linux/amd64, linux/arm64
                  push: true
                  tags: |
                      hezhijie0327/module:musl-qttools
    build-musl-zlibng:
        needs: [build-musl-ninja]
        runs-on: ubuntu-latest
        steps:
            - name: Step 1 - Checkout
              uses: actions/checkout@v3.0.0
            - name: Step 2 - Set up QEMU
              uses: docker/setup-qemu-action@v1.2.0
            - name: Step 3 - Set up Docker Buildx
              uses: docker/setup-buildx-action@v1.6.0
            - name: Step 4 - Login to Docker Hub
              uses: docker/login-action@v1.10.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Step 5 - Build module:musl-zlibng
              uses: docker/build-push-action@v2.10.0
              with:
                  file: ./module/musl-zlibng.dockerfile
                  platforms: linux/amd64, linux/arm64
                  push: true
                  tags: |
                      hezhijie0327/module:musl-zlibng
